[{"id":"cf20e2de.a92f68","type":"tab","label":"Scanning API","disabled":false,"info":"# Meraki Location Scanning API \n\nThis flow demonstrates the basic mechanics of\nthe Scanning API web service. It will provide\ntwo API endpoints to interact with the Meraki API.\n\n`[get] /scanning`\nResponds to Meraki with the `validator` to \nvalidate the receiver.\n\n`[post] /scanning`\nReceives observation data from a Meraki AP. \nThe data is compared against the `secret` to\nvalidate the sender.\n\nA **link** node is then used to demonstrate how the\ndata can be analyzed and routed. \n\nIt is now up to you to do something awesome with\nthis information. Add a map, database or IoT\ncontrol...\n\nhttp://developers.meraki.com\nhttp://www.InternetOfLEGO.com\n\n"},{"id":"904ddcf3.6f361","type":"tab","label":"Captive Portal API","disabled":false,"info":"# Meraki External Captive Portal (ExCap)\n\nThis flow demonstrates the mechanics of working\nwith the Meraki Captive Portal API. \n\nThere are two \"Splash Page\" types with Meraki, \n**Click-through** and **Sign on**.\n\nThere are two flows to highlight the differences\nbut they may share common assets, such as a ToS.\n\n# Overview\n\n## Click-through\nThe click-through splash page simply expects\nto receive a request from Meraki which includes\nthe parameters of the authenticating client. It\nwill then parse the parameters, present a splash\npage and eventually redirect the client to \nthe `base_grant_url` once the form is submitted\n\n`[get] /excapClick`\nThe path Meraki will use as the **Custom Splash \nURL**\nThe client will see the splash page, which is \nprovided by the **HTML (template)** node.\n\n`[post] /excapClickLogin`\nThe URL that will be the web form's \"Action\".\nIt will then send the user form data to the flow\nand redirect the client to the `base_grant_url`.\n\n\n## Sign On\n\n`[get] /excapSignOn`\nThe path Meraki will use as the **Custom Splash\nURL**\nThe client will see the splash page, which is \nprovided by the **HTML (template)** node.\nThe form will include a Meraki provided `login_url`, which will\nbe set as the \"Action\" on the web form.\n\n`[post] /excapSuccess`\nThis path Meraki will use as the continue_url\nfor the client once they have succesfully logged\nin. Use this to have a final interaction with the\nclient.\n\n\n# Usage\n\nLogin to Meraki Dashboard and configure the \ncustom Splash Page URL to one of these methods.\n* http://yourserver:1880/excapClick\n* http://yourserver:1880/excapSignOn\n\nIf using Sign On, you must also configure WiFi \nUser accounts that are authorized for the SSID.\n\n# More Info\n\nhttps://meraki.cisco.com/lib/pdf/meraki_whitepaper_captive_portal.pdf\nhttp://developers.meraki.com\nhttp://www.InternetOfLEGO.com\n\n\n"},{"id":"58088b93.72d20c","type":"tab","label":"Dashboard API - Admin Form","disabled":false,"info":"# Dashboard API - Admin Form\nA flow to create and administrator for a\nMeraki network. \n\n## Configure\n* Update the Environment Variables node\n**Env Variables: UPDATE THIS**\n\nYour API KEY (Keep this secret. Do not publish)\n```\nconst API_KEY = 'YourAPIKey'; \n```\n\nYour Shard number. https://n149.meraki.com , \nwhere n149 represent the shard number. \nYou can see this URL when you login to your Meraki Dashboard.\nThis is defined to avoid redirect issues.\n```\nvar shard = 'n149'; \n```\nYour Default Organization ID (optional)\n```\nvar orgId = ''; \n```\n\n# Usage\n\n`[get /meraki/admins]`\nPresents the web form.\n\nNavigate to\n* http://localhost:1880/meraki/admins\n\n\n# Verify\nIf the user was created properly, the web page\nwill display the committed details. You can\nverify the account in the Meraki Dashboard\n\n# More Info\n\nhttp://developers.meraki.com\nhttp://www.InternetOfLEGO.com\n\n\n\n\n\n\n\n\n\nThis flow can be adjusted to\nleaverage the many other API endpoints available.\n"},{"id":"64b489a9.d87f58","type":"tab","label":"Cisco Teams","disabled":false,"info":"# Cisco Teams (Spark) API\n\nThese sample flows simply take the results from\nthe linked sample flows, formats them and sends a message\nto a Cisco Spark room.\n\nUpdate the Spark API function with your `roomID`\nand your `accessToken`. These can be found on \nthe developers portal for Cisco Spark.\n\nThe `accessToken` can be found in the portal by\nclicking on your profile icon in the top right.\nCopy this token into the function variable.\n\nExample Token\n`ZGJjNzI0ODAtNmEwNS00YjU3LTkzOTYtMjthisisbogushmOWI3M2IyZGI4NzctZDVh`\n\n*API to List Rooms*\nhttps://developer.ciscospark.com/endpoint-rooms-get.html\n- you will get your roomId by running this call\nusing their \"Test Mode\", which will run the command\nand the resulting JSON will appear with the \nid, name, etc. Copy the `id` value into the function variable.\n`\n{\n\t\t\t\"id\": \"Y2lzY29zcGFyazovL3VzL1JPT00vNWExMjhhNTAtNTExZi0xMWU3LTk2NTctYjMzNWEyNmMzYmVj\",\n\t\t\t\"title\": \"Node-RED Testing Sandbox\",\n\t\t\t\"type\": \"group\",\n\t\t\t\"isLocked\": false,\n\t\t\t\"lastActivity\": \"2017-06-14T20:21:09.726Z\",\n\t\t\t\"creatorId\": \"Y2lzY29zcGFyazovL3VzL1BFT1BMRS80ZjY4OWNhZS1mYjNlLTRjNDEtODM3OC1hYmY1Mjc2Y2RmMzQ\",\n\t\t\t\"created\": \"2017-06-14T16:34:35.509Z\"\n\t\t}\n`\n\n*API to Send a Message*\nhttps://developer.ciscospark.com/endpoint-messages-post.html\n"},{"id":"c7cddcab.ad2a2","type":"tab","label":"Meraki Proxy and Apps","disabled":false,"info":"\n# Meraki API Proxy\nUse these endpoints instead of requesting Meraki APIs directly.\n- Avoid CORS\n- Define default API key\n- Log Events\n\nThe API key will be defined in the Environment Defaults flow\n\nExample:\n```\nhttps://merakidemo.internetoflego.com/meraki/proxy/organizations\n\nhttps://merakidemo.internetoflego.com/meraki/proxy/organizations/549236/admins\n```\n\n# Sample Web Apps\nThe sample apps demonstrate how you can build HTML frontend applications\nto utilize the proxy server. \n\n## Update SSID Settings\n\nhttps://merakidemo.internetoflego.com/meraki/ui/updatessid\n\n## Create Network Admin\n\nhttps://merakidemo.internetoflego.com/meraki/ui/createadmin"},{"id":"4f3b0230.fa6864","type":"tab","label":"Dashboard API: Endpoints","disabled":false,"info":"# Dashboard API Endpoints\n\nThis is a collection of many, but not all, of the Meraki Dashboard\nAPI endpoints. Use this to copy endpoints into\nyour next project or understand how to build your own. \n\nAlternatively use the custom API endpoints\nto run as a backend to a front-end web application.\n\n\n"},{"id":"fa89d9fb.342448","type":"tab","label":"Basics","disabled":false,"info":""},{"id":"8e8415c7.1421a8","type":"tab","label":"Mews Hotel PMS","disabled":false,"info":""},{"id":"6b02c4a0.a0d1ac","type":"tab","label":"Alerts","disabled":false,"info":""},{"id":"6b16186d.8d6808","type":"tab","label":"Alerts - Mock Server","disabled":false,"info":""},{"id":"e67a4420.6ea588","type":"tab","label":"MV Sharpless","disabled":false,"info":""},{"id":"465a0adf.132804","type":"tab","label":"SocketIO test"},{"id":"8963996.bb98268","type":"firebase config","z":"","firebaseurl":"meraki-webhooks","loginType":"jwt"},{"id":"4e77d4c3.519d7c","type":"mqtt-broker","z":"","name":"","broker":"mqtt.internetoflego.com","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"c046a0ec.f1055","type":"ifttt-key","z":""},{"id":"3035e1ba.b7bd3e","type":"mqtt-broker","z":"","name":"dietpi","broker":"192.168.0.20","port":"1883","clientid":"mp-pro-node-red","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"e0a35678.cf8a18","type":"mqtt-broker","z":"","name":"Mosca","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"86d683a1.c132b","type":"socketio-config","z":"e67a4420.6ea588","port":"1881","sendClient":"true","path":"/socket.io","bindToNode":true},{"id":"56816d8d.0b02c4","type":"socketio-config","z":"","port":"","sendClient":"true","path":"/sharpless/socket.io","bindToNode":false},{"id":"17b69dfa.3bf742","type":"socketio-config","z":"","port":"80","sendClient":"true","path":"/alerts/socket.io","bindToNode":true},{"id":"6f8c4e1c.9c733","type":"socketio-config","z":"","port":"80","sendClient":"true","path":"/socket.io","bindToNode":true},{"id":"2c750593.98b0d2","type":"inject","z":"c7cddcab.ad2a2","name":"Sets Defaults - Injected at start","topic":"","payload":"Setting Environment Variables","payloadType":"str","repeat":"","crontab":"","once":true,"x":190,"y":180,"wires":[["29373167.4d8f36"]]},{"id":"33f208af.5d493","type":"function","z":"c7cddcab.ad2a2","name":"Set Environment Variables: UPDATE THIS","func":"//  ###### User Defined Variables ######\n\n// Meraki Base URL. the `n149` represent the shard number. This is defined to avoid redirect issues.\nconst BASE_URL = \"https://mp.meraki.com/api/v0/\"; \n\nconst API_KEY = msg.apikey; // from credentials node to keep secret\n\n\n\n// ###### Set Flow Context variables ######\n\nflow.set('apiKey', API_KEY); // pulling API key via \"secret\" node. This avoides publishing the API key when sharing the flow\nflow.set('baseUrl', BASE_URL);\n\n\nmsg.payload = \"Meraki API Environment Set\";\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":220,"wires":[["d06fd888.1ec598"]]},{"id":"d06fd888.1ec598","type":"debug","z":"c7cddcab.ad2a2","name":"Flow Env Variables","active":true,"console":"false","complete":"true","x":870,"y":220,"wires":[]},{"id":"c5be6a8c.61c19","type":"comment","z":"c7cddcab.ad2a2","name":"API Key and Environment variables","info":"","x":160,"y":140,"wires":[]},{"id":"29373167.4d8f36","type":"credentials","z":"c7cddcab.ad2a2","name":"API KEY - UPDATE THIS","props":[{"value":"apikey","type":"msg"}],"x":470,"y":160,"wires":[["33f208af.5d493"]]},{"id":"cf27c246.83f54","type":"http in","z":"c7cddcab.ad2a2","name":"","url":"/meraki/proxy/:endpoint(*)","method":"get","upload":false,"swaggerDoc":"","x":190,"y":320,"wires":[["71d1257e.411eb4","6cb71ee2.d71868"]]},{"id":"71d1257e.411eb4","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki [get] request","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":240,"y":360,"wires":[]},{"id":"d917d25b.4455e","type":"http response","z":"c7cddcab.ad2a2","name":"","statusCode":"","headers":{},"x":930,"y":320,"wires":[]},{"id":"27fafca2.b8df9c","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki [post] request","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":240,"y":440,"wires":[]},{"id":"9d93c84b.021528","type":"http response","z":"c7cddcab.ad2a2","name":"","statusCode":"","headers":{},"x":930,"y":400,"wires":[]},{"id":"e6e5aee8.b016f8","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [post]","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":890,"y":440,"wires":[]},{"id":"e755df85.06c7c","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [get]","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":880,"y":360,"wires":[]},{"id":"6cb71ee2.d71868","type":"function","z":"c7cddcab.ad2a2","name":"Meraki API Options","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar baseUrl = flow.get('baseUrl');\nvar endpoint = msg.req.params.endpoint\nvar query = msg.req.query;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": msg.req.headers[\"x-cisco-meraki-api-key\"] || apiKey\n};\nmsg.url = baseUrl + endpoint;\n\nif (query){\n    \n    var queryString = \"\"\n    Object.getOwnPropertyNames(query).forEach(\n      function (val, idx, array) {\n        queryString += (val + '=' + query[val]);\n        if (idx < array.length - 1){\n            queryString += \"&\";\n        }\n      }\n    );\n    msg.url = msg.url +\"?\" + queryString;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":320,"wires":[["c4bf5dd1.2e84f8","66a8929d.8e52cc"]]},{"id":"c4bf5dd1.2e84f8","type":"http request","z":"c7cddcab.ad2a2","name":"[get] request","method":"GET","ret":"obj","url":"","tls":"","x":710,"y":320,"wires":[["d917d25b.4455e","e755df85.06c7c","1aef23fc.ece43c"]]},{"id":"e8570b71.13f488","type":"http request","z":"c7cddcab.ad2a2","name":"[post] request","method":"POST","ret":"obj","url":"","tls":"","x":720,"y":400,"wires":[["9d93c84b.021528","e6e5aee8.b016f8","1aef23fc.ece43c"]]},{"id":"cc6bf5b.7a71188","type":"function","z":"c7cddcab.ad2a2","name":"Meraki API Options","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar baseUrl = flow.get('baseUrl');\nvar endpoint = msg.req.params.endpoint\nvar query = msg.req.query;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": msg.req.headers[\"x-cisco-meraki-api-key\"] || apiKey\n};\nmsg.url = baseUrl + endpoint;\n\nif (query){\n    \n    var queryString = \"\"\n    Object.getOwnPropertyNames(query).forEach(\n      function (val, idx, array) {\n        queryString += (val + '=' + query[val]);\n        if (idx < array.length - 1){\n            queryString += \"&\";\n        }\n      }\n    );\n    msg.url = msg.url +\"?\" + queryString;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":400,"wires":[["e8570b71.13f488","2c300dce.aae962"]]},{"id":"7cdb8107.c8c708","type":"http in","z":"c7cddcab.ad2a2","name":"","url":"/meraki/proxy/:endpoint(*)","method":"post","upload":false,"swaggerDoc":"","x":190,"y":400,"wires":[["27fafca2.b8df9c","cc6bf5b.7a71188"]]},{"id":"dacfaa4b.deeee","type":"http in","z":"c7cddcab.ad2a2","name":"","url":"/meraki/proxy/:endpoint(*)","method":"put","upload":false,"swaggerDoc":"","x":190,"y":480,"wires":[["de178948.d8abf","217d0197.f09a5e"]]},{"id":"de178948.d8abf","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki [put] request","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":240,"y":520,"wires":[]},{"id":"217d0197.f09a5e","type":"function","z":"c7cddcab.ad2a2","name":"Meraki API Options","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar baseUrl = flow.get('baseUrl');\nvar endpoint = msg.req.params.endpoint\nvar query = msg.req.query;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": msg.req.headers[\"x-cisco-meraki-api-key\"] || apiKey\n};\nmsg.url = baseUrl + endpoint;\n\nif (query){\n    \n    var queryString = \"\"\n    Object.getOwnPropertyNames(query).forEach(\n      function (val, idx, array) {\n        queryString += (val + '=' + query[val]);\n        if (idx < array.length - 1){\n            queryString += \"&\";\n        }\n      }\n    );\n    msg.url = msg.url +\"?\" + queryString;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":480,"wires":[["dd8c3396.e4a1c8","16903965.4838df"]]},{"id":"dd8c3396.e4a1c8","type":"http request","z":"c7cddcab.ad2a2","name":"[put] request","method":"PUT","ret":"obj","url":"","tls":"","x":710,"y":480,"wires":[["8817a852.dd918","e012e5db.408d4","1aef23fc.ece43c"]]},{"id":"8817a852.dd918","type":"http response","z":"c7cddcab.ad2a2","name":"","statusCode":"","headers":{},"x":930,"y":480,"wires":[]},{"id":"e012e5db.408d4","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [put]","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":880,"y":520,"wires":[]},{"id":"6e2939b6.32375","type":"http in","z":"c7cddcab.ad2a2","name":"","url":"/meraki/proxy/:endpoint(*)","method":"delete","upload":false,"swaggerDoc":"","x":200,"y":560,"wires":[["c40449c7.c2bc48","f1e64710.329b2"]]},{"id":"c40449c7.c2bc48","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki [delete] request","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":240,"y":600,"wires":[]},{"id":"f1e64710.329b2","type":"function","z":"c7cddcab.ad2a2","name":"Meraki API Options","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar baseUrl = flow.get('baseUrl');\nvar endpoint = msg.req.params.endpoint\nvar query = msg.req.query;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": msg.req.headers[\"x-cisco-meraki-api-key\"] || apiKey\n};\nmsg.url = baseUrl + endpoint;\n\nif (query){\n    \n    var queryString = \"\"\n    Object.getOwnPropertyNames(query).forEach(\n      function (val, idx, array) {\n        queryString += (val + '=' + query[val]);\n        if (idx < array.length - 1){\n            queryString += \"&\";\n        }\n      }\n    );\n    msg.url = msg.url +\"?\" + queryString;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":560,"wires":[["87ae7a3d.13379","d2a43092.29b898"]]},{"id":"87ae7a3d.13379","type":"http request","z":"c7cddcab.ad2a2","name":"[delete] request","method":"DELETE","ret":"obj","url":"","tls":"","x":720,"y":560,"wires":[["1e3458ab.57a497","38bb1201.b5c6ce","1aef23fc.ece43c"]]},{"id":"1e3458ab.57a497","type":"http response","z":"c7cddcab.ad2a2","name":"","statusCode":"","headers":{},"x":930,"y":560,"wires":[]},{"id":"38bb1201.b5c6ce","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [delete]","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":890,"y":600,"wires":[]},{"id":"66a8929d.8e52cc","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [get] options","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":550,"y":360,"wires":[]},{"id":"2c300dce.aae962","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [post] options","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":550,"y":440,"wires":[]},{"id":"16903965.4838df","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [put] options","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":550,"y":520,"wires":[]},{"id":"d2a43092.29b898","type":"debug","z":"c7cddcab.ad2a2","name":"Meraki API [delete] options","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":540,"y":600,"wires":[]},{"id":"dde1b48c.b87f9","type":"http in","z":"c7cddcab.ad2a2","name":"","url":"/meraki/ui/createAdmin","method":"get","upload":false,"swaggerDoc":"","x":180,"y":860,"wires":[["1807d5cf.2e8c6a"]]},{"id":"bfa7d2dd.8ee498","type":"template","z":"c7cddcab.ad2a2","name":"CSS","field":"payload.style","fieldType":"msg","format":"css","syntax":"mustache","template":"input[type=text], select {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\ninput[type=email], select {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\ninput[type=submit] {\n    width: 50%;\n    background-color: #4CAF50;\n    color: white;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\ninput[type=submit]:hover {\n    background-color: #45a049;\n}\n\ndiv form {\n    border-radius: 5px;\n    background-color: #f2f2f2;\n    padding: 20px;\n}\n\n.adminform {\n    width: 90%;\n}\n","x":590,"y":860,"wires":[["9c5fba5a.44482"]]},{"id":"1807d5cf.2e8c6a","type":"template","z":"c7cddcab.ad2a2","name":"JQuery","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"mustache","template":"\n$(document).ready(function(e) {\n    \n    \n    $.ajax({\n        url: '/meraki/proxy/organizations',\n        type: 'get',\n        datatype: 'json',\n        success: function(data){\n            var toAppend = '';\n            //if(typeof data === 'object'){\n                for(var i=0;i<data.length;i++){\n                    toAppend += '<option value='+data[i][\"id\"]+'>'+data[i]['name']+'</option>';\n                }\n            //}\n            console.log(\"orgs toAppend\",toAppend);\n            $('#orgs').append(toAppend);\n        }\n    });\n    \n    $(\"form[ajax=true]\").submit(function(e) {\n        \n        e.preventDefault();\n        \n        var form_data = $(this).serialize();\n        //var form_url = $(this).attr(\"action\");\n        //var form_method = $(this).attr(\"method\").toUpperCase();\n        \n        var orgId = $(\"#orgs\").val();\n        \n        $(\"#loadingimg\").show();\n        \n        $.ajax({\n            url: \"/meraki/proxy/organizations/\"+orgId+\"/admins\",  //form_url+\"/\"+orgId, \n            type: \"post\",       \n            data: form_data,     \n            cache: false,\n            success: function(data){\n                \n                // Create simple HTML response\n                var response = \n                    \"<div>\"+\n                        \"<h2>Created Admin!</h2>\"+\n                        \"<h4>Name</h4><p>\"+data.name+\"</p>\"+\n                        \"<h4>E-Mail</h4><p>\"+data.email+\"</p>\"+\n                        \"<h4>ID</h4><p>\"+data.id+\"</p>\"+\n                        \"<h4>Tags</h4><p>\"+data.tags+\"</p>\"+\n                        \"<h4>Org Access</h4><p>\"+data.orgAccess+\"</p>\"+\n                    \"</div>\";\n                \n                console.log(\"response: \"+JSON.stringify(data));\n                \n                \n                $(\"#result\").html(response); \n                \n                $(\"#loadingimg\").hide();\n                $( '#createadmin' ).each(function(){\n                    this.reset();\n                });\n            },\n            error: function(error){\n                $(\"#result\").html(error.responseText);\n            }\n        });    \n        \n    });\n    \n});","x":420,"y":860,"wires":[["bfa7d2dd.8ee498"]]},{"id":"c5cfe4a7.1ef2e8","type":"comment","z":"c7cddcab.ad2a2","name":"Create Admin Form","info":"","x":130,"y":820,"wires":[]},{"id":"d661157f.f1c2b8","type":"http response","z":"c7cddcab.ad2a2","name":"","x":930,"y":860,"wires":[]},{"id":"9c5fba5a.44482","type":"template","z":"c7cddcab.ad2a2","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n  <head>\n    <title>Meraki Dasbhoard API - Admin User</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <!--\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    -->\n    <script\n      src=\"https://code.jquery.com/jquery-3.2.1.min.js\"\n      integrity=\"sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\"\n      crossorigin=\"anonymous\"></script>\n      \n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">  \n    <script>{{{payload.jquery}}}</script>\n    <style>{{{payload.style}}}</style>\n  </head>\n  \n<div class=\"container\">\n    <h2>Create a Meraki Dashboard Administrator</h2>\n    <h4><a href=\"http://developers.meraki.com\">Meraki Developers Portal</a></h4>\n\n<div class=\"col-md-6\">\n<div class=\"adminform\">\n  <form id=\"createadmin\" ajax=\"true\">\n    <select id=\"orgs\" name=\"orgs\">\n        <option>Select Organization..</option>\n    </select>\n    <label>Contact Details</label>\n    <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" required=true/>\n    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"E-mail\" required=true/>\n    <br>\n\n    <label>Organization Permissions</label>\n    <select id=\"orgAccess\" name=\"orgAccess\" placeholder=\"Org Access\">\n      <option value=\"full\" disabled>full</option>\n      <option value=\"read-only\" selected>read-only</option>\n    </select>\n    \n  \n    <input type=\"submit\" class=\"button\" value=\"Submit\">\n  </form>\n</div>\n</div>\n\n<div class=\"col-md-6\">\n    <span id=\"result\"></span>\n</div>\n</div>\n</body>\n</html>\n<script>{{{payload.script}}}</script>","x":770,"y":860,"wires":[["d661157f.f1c2b8"]]},{"id":"68388ae.4fc5bf4","type":"comment","z":"c7cddcab.ad2a2","name":"Sample Web Apps","info":"* Create Network Admin\n\n[/meraki/ui/admins](/meraki/ui/admins)\n\n* Update SSID Settings\n\n[/meraki/ui/updateSSID](/meraki/ui/updateSSID)\n","x":110,"y":780,"wires":[]},{"id":"95bbb07b.c7abd","type":"comment","z":"c7cddcab.ad2a2","name":"API Proxy Endpoints","info":"Use these endpoints instead of requesting Meraki APIs directly.\n\nThe API key will be defined in the Environment Defaults flow\n\nExample:\n```\nhttp://merakidemo.internetoflego.com:1880/meraki/proxy/organizations\n\nhttp://merakidemo.internetoflego.com:1880/meraki/proxy/organizations/{{organizationId}}/admins\n```\n\n","x":110,"y":280,"wires":[]},{"id":"922a15f9.66aa6","type":"debug","z":"cf20e2de.a92f68","name":"scanning Data","active":false,"console":"false","complete":"true","x":620,"y":260,"wires":[]},{"id":"967e320e.24dcb","type":"http in","z":"cf20e2de.a92f68","name":"","url":"/scanning","method":"get","upload":false,"swaggerDoc":"","x":120,"y":120,"wires":[["21b9823.09de07e","78001128.b1fb5"]]},{"id":"21b9823.09de07e","type":"function","z":"cf20e2de.a92f68","name":"validate-validator - UPDATE","func":"\n//Set the validator variable to match the Meraki network\n//The URL will not need to include the validator string, for enhanced security\n//~~~~~~~~~\nvalidator = \"96300cc6bfb99e31d707d34521101e0f70ecddb1\";\n\n// For testing purposes:\n// This validator accepts a message with the validator defined in the URL\n// Example: http://yourserver:1880/cmx?validator=8e0846499d9a3f6d23f7bogusd55b9d6325035f5\n\n//~~~~~~~~~\n//validator = msg.payload.validator;\n\n\nmsg.payload = validator;\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":120,"wires":[["659d7973.a231f","1d6439b7.498bae"]]},{"id":"659d7973.a231f","type":"http response","z":"cf20e2de.a92f68","name":"scanning response","statusCode":"","headers":{},"x":610,"y":120,"wires":[]},{"id":"78001128.b1fb5","type":"debug","z":"cf20e2de.a92f68","name":"scanning validator raw","active":false,"console":"false","complete":"payload","x":340,"y":160,"wires":[]},{"id":"473f4972.9bcac8","type":"comment","z":"cf20e2de.a92f68","name":"Location API core mechanics","info":"CMX/Location API core functions","x":140,"y":80,"wires":[]},{"id":"1d6439b7.498bae","type":"debug","z":"cf20e2de.a92f68","name":"scanning Validator","active":false,"console":"false","complete":"payload","x":610,"y":160,"wires":[]},{"id":"9cb026f3.65a18","type":"function","z":"cf20e2de.a92f68","name":"validate-secret - UPDATE","func":"// This node verifies that the secrect configured\n// on the Meraki Dashboard Network, matches.\n\nvar secret = \"supersecret\";\n\nif(msg.payload.secret == secret){\n    return msg;\n}else{\n    // Secret is invalid\n    \n}\n\n","outputs":1,"noerr":0,"x":350,"y":220,"wires":[["922a15f9.66aa6","3ba23c84.37a33c","12277923.6fc5cf"]]},{"id":"5ce20d0b.835af4","type":"debug","z":"cf20e2de.a92f68","name":"scanning post","active":false,"console":"false","complete":"payload","x":320,"y":260,"wires":[]},{"id":"3ba23c84.37a33c","type":"http response","z":"cf20e2de.a92f68","name":"cmx response","x":600,"y":220,"wires":[]},{"id":"543cd8fb.4a236","type":"comment","z":"cf20e2de.a92f68","name":"Meraki Location API - Using Native Nodes -- README","info":"This flow demonstrates how to interact with the\nMeraki CMX (Scanning) Location API.\n\n# Be sure to update the validator and secret\n\nThe \"CMX core functions\" consist of two REST endpoints.\nThe 'get' enpoint waits to hear from Meraki,\nwhich will send a request to this server. The flow will \nthen respond with the \"validator\", which was defined in \nthe Meraki Dashboard. If the correct validator is returned, \nMeraki has confirmed that it is sending location data to \nthe correct server.\n\nThe second enpoint accepts 'post' requests, which will\nbe receiving the JSON structured location data from Meraki.\n\nOnce the data has arrived in the `msg.payload`, the results\nwill be stored in a local MongoDB database if the supplied secret\nmatches what's defined in the global variables. This is to ensure\nthat it is in fact Meraki sending this data. \n\nThe data can then be retrieved by opening the other 'get' endpoints, such \nas /showcmxNative.\n\n","x":461,"y":27,"wires":[]},{"id":"543ff54b.b26e54","type":"debug","z":"904ddcf3.6f361","name":"excapSignOn raw data","active":true,"console":"false","complete":"payload","x":200,"y":480,"wires":[]},{"id":"7dd40692.a7c308","type":"http in","z":"904ddcf3.6f361","name":"","url":"/excapSignOn","method":"get","swaggerDoc":"","x":150,"y":440,"wires":[["543ff54b.b26e54","1176eeee.113631"]]},{"id":"81999b61.f08ea","type":"http response","z":"904ddcf3.6f361","name":"","statusCode":"","headers":{},"x":770,"y":160,"wires":[]},{"id":"b53c48ca.273ac8","type":"http in","z":"904ddcf3.6f361","name":"","url":"/excapClick","method":"get","swaggerDoc":"","x":140,"y":120,"wires":[["d18393bb.b396e","78763109.115a68"]]},{"id":"8660ecb9.563de8","type":"http response","z":"904ddcf3.6f361","name":"","statusCode":"","headers":{},"x":770,"y":480,"wires":[]},{"id":"3baa7c3a.e148fc","type":"template","z":"904ddcf3.6f361","name":"HTML Login Page","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n<head>\n{{{payload.css}}}\n\n\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <title>Registration Form</title>\n\n</head>\n<body>\n\n    \n\n\n    <div class=\"main-content\">\n    <form class=\"form-register\" method=POST action={{payload.login_url}} />\n        <input type=\"hidden\" name=\"continue_url\" value={{payload.continue_url}} />\n        <input type=\"hidden\" name=\"host\" value ={{host}}>\n        <input type=\"hidden\" name=\"base_grant_url\" value = {{payload.base_grant_url}}/>\n        <input type=\"hidden\" name=\"user_continue_url\" value = {{payload.user_continue_url}}/>\n        <input type=\"hidden\" name=\"node_mac\" value = {{payload.node_mac}}/>\n        <input type=\"hidden\" name=\"client_ip\" value = {{payload.client_ip}}/>\n        <input type=\"hidden\" name=\"client_mac\" value = {{payload.client_mac}}/>\n        <input type=\"hidden\" name=\"success_url\" value={{payload.continue_url}} />\n\n            <div class=\"form-register-with-email\">\n\n                <div class=\"form-white-background\">\n\n                    <div class=\"form-title-row\">\n                        <h1>Login to WiFi</h1>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <label>\n                            <span>Email</span>\n                            <input type=\"email\" name=\"email\" required>\n                        </label>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <label>\n                            <span>Password</span>\n                            <input type=\"password\" name=\"password\" required>\n                        </label>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <label class=\"form-checkbox\">\n                            <input type=\"checkbox\" name=\"checkbox\" checked value=\"accepted\" required>\n                            <span>I agree to the <a href=\"/excapTerms\" target\"_blank\">terms and conditions</a></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <button type=\"submit\">Register</button>\n                    </div>\n\n                </div>\n\n            </div>\n\n            <!-- Future Social Features\n            <div class=\"form-sign-in-with-social\">\n\n                <div class=\"form-row form-title-row\">\n                    <span class=\"form-title\">Sign in with</span>\n                </div>\n\n                <a href=\"#\" class=\"form-google-button\">Google</a>\n                <a href=\"#\" class=\"form-facebook-button\">Facebook</a>\n                <a href=\"#\" class=\"form-twitter-button\">Twitter</a>\n                \n\n            </div>\n            -->\n\n        </form>\n                Your IP: {{payload.client_ip}}\n                <br>\n                Your MAC: {{payload.client_mac}}\n\n    </div>\n\n</body>\n\n</html>","x":570,"y":480,"wires":[["8660ecb9.563de8"]]},{"id":"d18393bb.b396e","type":"function","z":"904ddcf3.6f361","name":"Set login_url","func":"msg.payload.login_url = msg.payload.base_grant_url + '?continue_url=' + msg.payload.user_continue_url;\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":120,"wires":[["6fc81721.9971f8"]]},{"id":"78763109.115a68","type":"debug","z":"904ddcf3.6f361","name":"excapClick raw data","active":true,"console":"false","complete":"payload","x":200,"y":160,"wires":[]},{"id":"8b6768f.6f11298","type":"comment","z":"904ddcf3.6f361","name":"Meraki Click-through, read more...","info":"Configure by placing this host server address\nfollowed by /excapClick in the Custom Splash Page URL\nsection of the Meraki Dashboard.\n\nie. https://yourserver:1880/excapClick\n\nBe sure to update the \"walled garden\" in the \nMeraki Dashboard with the IP address of your \nserver and any other resources required before\nlogin, such as your website, images, CSS, etc.\n\nThe HTML page can be modified as needed. \n","x":173,"y":79,"wires":[]},{"id":"f32aecd.6df9b1","type":"comment","z":"904ddcf3.6f361","name":"Meraki Sign-on, read more...","info":"Configure by placing this host server address\nfollowed by /excapClick in the Custom Splash Page URL\nsection of the Meraki Dashboard.\n\nie. https://yourserver:1880/excapSignOn\n\nBe sure to update the \"walled garden\" in the \nMeraki Dashboard with the IP address of your \nserver and any other resources required before\nlogin, such as your website, images, CSS, etc.\n\n","x":159,"y":396,"wires":[]},{"id":"cbe1be71.c2c6f","type":"template","z":"904ddcf3.6f361","name":"HTML Splash Page","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n\n<head>\n    {{{payload.css}}}\n\n\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <title>Registration Form</title>\n\n</head>\n\n<body>\n\n\n\n\n    <div class=\"main-content\">\n        \n        <form class=\"form-register\" method=\"POST\" action=\"excapClickLogin\" >\n            \n            <input type=\"hidden\" name=\"continue_url\" value=\"{{payload.continue_url}}\" />\n            <input type=\"hidden\" name=\"host\" value=\"{{host}}\" />\n            <input type=\"hidden\" name=\"base_grant_url\" value=\"{{payload.base_grant_url}}\" />\n            <input type=\"hidden\" name=\"user_continue_url\" value=\"{{payload.user_continue_url}}\" />\n            <input type=\"hidden\" name=\"node_mac\" value=\"{{payload.node_mac}}\" />\n            <input type=\"hidden\" name=\"client_ip\" value=\"{{payload.client_ip}}\" />\n            <input type=\"hidden\" name=\"client_mac\" value=\"{{payload.client_mac}}\" />\n\n            <div class=\"form-register-with-email\">\n                \n                <div class=\"form-white-background\">\n        \n                    <div class=\"form-title-row\">\n                        <center><img src=\"https://dashboard.meraki.com/images/cisco-meraki.png\"/></center>\n                        <br>\n                        <h1>Login to WiFi</h1>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <label>\n                            <span>Name</span>\n                            <input type=\"text\" name=\"name\" required>\n                        </label>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <label>\n                            <span>Email</span>\n                            <input type=\"email\" name=\"email\" required>\n                        </label>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <label class=\"form-checkbox\">\n                            <input type=\"checkbox\" name=\"checkbox\" checked value=\"accepted\" required>\n                            <span>I agree to the\n                                <a href=\"/excapTerms\" target \"_blank\">terms and conditions</a>\n                            </span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <button type=\"submit\">Register</button>\n                    </div>\n\n                </div>\n\n            </div>\n\n\n        </form>\n        Your IP: {{payload.client_ip}}\n        <br> Your MAC: {{payload.client_mac}}\n\n    </div>\n\n</body>\n\n</html>","x":570,"y":160,"wires":[["81999b61.f08ea"]]},{"id":"1bd124cb.e2742b","type":"http in","z":"904ddcf3.6f361","name":"","url":"/excapClickLogin","method":"post","swaggerDoc":"","x":160,"y":220,"wires":[["7eb4bf5.ccc744","4b97bad5.4eded4","8d45aef5.90d5c8"]]},{"id":"7eb4bf5.ccc744","type":"function","z":"904ddcf3.6f361","name":"Process login with 302 redirect","func":"// check if client has connected properly and received response from AP\nif (msg.payload.base_grant_url.length > 0){\n    msg.statusCode = 302;\n    msg.headers = {\n      'Location': msg.payload.base_grant_url + '?continue_url=' + msg.payload.user_continue_url\n      //add other headers here...\n    };\n}else{\n    // error: send client back to login\n    msg.statusCode = 302;\n    msg.headers = {\n      'Location': '/excapNotConnected'\n      //add other headers here...\n    };\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":220,"wires":[["58a3309c.05019","e3fa7829.e8c76"]]},{"id":"58a3309c.05019","type":"http response","z":"904ddcf3.6f361","name":"","x":770,"y":220,"wires":[]},{"id":"4b97bad5.4eded4","type":"debug","z":"904ddcf3.6f361","name":"excapClick Login data","active":true,"console":"false","complete":"payload","x":200,"y":260,"wires":[]},{"id":"bb854502.b44ef","type":"comment","z":"904ddcf3.6f361","name":"Store form data - read more...","info":"The login data now can be sent somehwere to be \nlogged. A link node is attached to easily use\nthis data in other parts of the flow.","x":500,"y":260,"wires":[]},{"id":"754d6ee2.7d2028","type":"comment","z":"904ddcf3.6f361","name":"Terms and Conditions","info":"","x":144,"y":750,"wires":[]},{"id":"3a569f4e.bee8d","type":"comment","z":"904ddcf3.6f361","name":"Success","info":"","x":106,"y":538,"wires":[]},{"id":"5210c5c7.4e0014","type":"http in","z":"904ddcf3.6f361","name":"","url":"/excapTerms","method":"get","swaggerDoc":"","x":150,"y":800,"wires":[["16130951.4130af"]]},{"id":"b9b8897a.21c43","type":"http response","z":"904ddcf3.6f361","name":"","x":790,"y":840,"wires":[]},{"id":"85478c81.0aefb8","type":"template","z":"904ddcf3.6f361","name":"HTML Terms and Conditions","field":"payload","format":"handlebars","template":"<head>\n    <title>Terms and Conditions</title>\n{{{payload}}}\n</head>\n<body>\n    <div class=\"container\">\n    <h1>Terms and Conditions</h1>\n    <ul>\n        <li>Please use our network responsibly. </li>\n        <li>Your computer's MAC and IP address will be logged.</li>\n    </ul>\n    </div>\n</body>\n\n\n","x":600,"y":840,"wires":[["b9b8897a.21c43"]]},{"id":"fc1f46c7.ec4cb","type":"http in","z":"904ddcf3.6f361","name":"","url":"/excapSuccess","method":"get","swaggerDoc":"","x":150,"y":580,"wires":[["b33751b8.cd25f"]]},{"id":"35d4a2bc.76494e","type":"http response","z":"904ddcf3.6f361","name":"","x":790,"y":620,"wires":[]},{"id":"a355c250.6fa6e","type":"template","z":"904ddcf3.6f361","name":"HTML Success","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<head>\n    <title>Success!</title>\n{{{payload.css}}}\n</head>\n<body>\n    <div class=\"container\">\n    <center><h1>Success!</h1>\n    <h2>You can now use the network.</h2>\n    </center>\n    </div>\n</body>\n\n\n","x":560,"y":620,"wires":[["35d4a2bc.76494e"]]},{"id":"cd4c3cd5.3543b8","type":"comment","z":"904ddcf3.6f361","name":"Error: Not connected to AP","info":"","x":160,"y":873,"wires":[]},{"id":"d1b49931.f3de58","type":"http in","z":"904ddcf3.6f361","name":"","url":"/excapNotConnected","method":"get","swaggerDoc":"","x":170,"y":920,"wires":[["4edb16a0.723778"]]},{"id":"5a500ce7.9966b4","type":"http response","z":"904ddcf3.6f361","name":"","x":790,"y":960,"wires":[]},{"id":"f2c0ee92.472678","type":"template","z":"904ddcf3.6f361","name":"HTML Terms and Conditions","field":"payload","format":"handlebars","template":"<head>\n    <title>Error: Not Connected</title>\n{{{payload}}}\n</head>\n<body>\n    <div class=\"container\">\n    <h1>Error: Not Connected</h1>\n    <p>\n        Hmm, somethings not right. It appears you\n        are not connected to the correct wireless network.\n    </p>\n    </div>\n</body>\n\n\n","x":600,"y":960,"wires":[["5a500ce7.9966b4"]]},{"id":"6fc81721.9971f8","type":"template","z":"904ddcf3.6f361","name":"CSS Style","field":"payload.css","fieldType":"msg","format":"html","syntax":"mustache","template":"<style>\nhtml{\n    background-color: #f3f3f3;\n}\n\n.form-register{\n    max-width: 1000px;\n    width: 100%;\n    margin: 0 auto;\n\n    font: bold 14px sans-serif;\n    text-align: center;\n}\n\n.form-register-with-email{\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    margin-right: 130px;\n    text-align: center;\n}\n\n.form-register-with-email .form-white-background{\n    width: 570px;\n    box-sizing: border-box;\n    background-color: #ffffff;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n    padding: 60px 80px;\n    margin-bottom: 35px;\n}\n\n.form-register-with-email .form-row{\n    text-align: left;\n    margin-bottom: 23px;\n}\n\n.form-register-with-email .form-title-row{\n    text-align: center;\n    margin-bottom: 50px;\n}\n\n.form-register-with-email h1{\n    display: inline-block;\n    box-sizing: border-box;\n    color:  #4c565e;\n    font-size: 24px;\n    padding: 0 20px 15px;\n    border-bottom: 2px solid #6caee0;\n    margin: 0;\n}\n\n.form-register-with-email .form-row > label span{\n    display: inline-block;\n    box-sizing: border-box;\n    color:  #5f5f5f;\n    width: 125px;\n    text-align: right;\n    padding-right: 25px;\n}\n\n.form-register-with-email input{\n    color:  #5f5f5f;\n    box-sizing: border-box;\n    width: 230px;\n    box-shadow: 1px 2px 4px 0 rgba(0, 0, 0, 0.08);\n    padding: 12px 18px;\n    border: 1px solid #dbdbdb;\n}\n\n.form-register-with-email .form-checkbox input{\n    margin-left: 128px;\n    margin-right: 10px;\n    width: auto;\n    vertical-align: top;\n}\n\n.form-register-with-email .form-row .form-checkbox span{\n    font-size: 12px;\n    font-weight: normal;\n    display: inline-block;\n    text-align: left;\n    width: 220px;\n    margin: 0;\n}\n\n.form-register-with-email .form-checkbox span a{\n    text-decoration: none;\n    color:  #6caee0;\n}\n\n.form-register-with-email button{\n    display: block;\n    border-radius: 2px;\n    background-color:  #6caee0;\n    color: #ffffff;\n    font-weight: bold;\n    box-shadow: 1px 2px 4px 0 rgba(0, 0, 0, 0.08);\n    padding: 15px 35px;\n    border: 0;\n    margin: 55px auto 0;\n    cursor: pointer;\n}\n\n.form-register-with-email .form-log-in-with-existing{\n    text-decoration: none;\n    padding: 4px 8px;\n    font-weight: normal;\n    color: #7b9d62;\n    background-color: #d6f0c3;\n}\n\n\n.form-sign-in-with-social{\n    display: inline-block;\n    max-width: 180px;\n    box-sizing: border-box;\n    vertical-align: top;\n    text-align: center;\n    margin-top: 100px;\n}\n\n.form-sign-in-with-social .form-title-row{\n    margin-bottom: 50px;\n}\n\n.form-sign-in-with-social .form-title{\n    box-sizing: border-box;\n    color:  #4c565e;\n    font-size: 24px;\n    padding: 15px 20px;\n    border-bottom: 2px solid #6caee0;\n}\n\n.form-sign-in-with-social .form-google-button{\n    color:  #ffffff;\n    display: block;\n    width: 145px;\n    height: 40px;\n    font-size: 12px;\n    line-height: 40px;\n    background-color:  rgba(222, 110, 60, 0.9);\n    box-shadow: 1px 2px 2px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 2px;\n    margin: 8px auto;\n    text-decoration: none;\n}\n\n.form-sign-in-with-social .form-facebook-button{\n    color:  #ffffff;\n    display: block;\n    width: 145px;\n    height: 40px;\n    font-size: 12px;\n    line-height: 40px;\n    background-color:  rgba(75, 136, 194, 0.9);\n    box-shadow: 1px 2px 2px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 2px;\n    margin: 8px auto;\n    text-decoration: none;\n}\n\n.form-sign-in-with-social .form-twitter-button{\n    color:  #ffffff;\n    display: block;\n    width: 145px;\n    height: 40px;\n    font-size: 12px;\n    line-height: 40px;\n    background-color:  rgba(123, 195, 226, 0.9);\n    box-shadow: 1px 2px 2px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 2px;\n    margin: 8px auto;\n    text-decoration: none;\n}\n\n/*\tMaking the form responsive. Remove these media queries\n    if you don't need the form to work on mobile devices. */\n\n@media (max-width: 900px) {\n\n    .form-register{\n        margin: 20px auto;\n    }\n\n    .form-register-with-email{\n        position: relative;\n        display: block;\n        margin: 0;\n    }\n\n    .form-register-with-email .form-white-background{\n        margin: 0 auto 32px;\n    }\n\n\n\n    .form-sign-in-with-social {\n        margin-top: 105px;\n    }\n\n}\n\n@media (max-width: 600px) {\n\n    .form-register-with-email .form-white-background{\n        width: 300px;\n        padding-left: 35px;\n        padding-right: 35px;\n    }\n\n    .form-register-with-email .form-row > label span{\n        display: block;\n        text-align: left;\n        padding: 0 0 10px;\n    }\n\n    .form-register-with-email input{\n        display: block;\n        margin: 0 auto;\n    }\n\n    .form-register-with-email .form-checkbox input{\n        display: inline-block;\n        margin-left: 0;\n    }\n\n    .form-register-with-email .form-checkbox span{\n        width: 200px !important;\n    }\n\n    .form-register-with-email:after{\n        bottom: -80px;\n        left: 50%;\n        margin-left: -25px;\n    }\n\n}\n</style>","x":540,"y":120,"wires":[["cbe1be71.c2c6f"]]},{"id":"1176eeee.113631","type":"template","z":"904ddcf3.6f361","name":"CSS Style","field":"payload.css","fieldType":"msg","format":"html","syntax":"mustache","template":"<style>\nhtml{\n    background-color: #f3f3f3;\n}\n\n.form-register{\n    max-width: 1000px;\n    width: 100%;\n    margin: 0 auto;\n\n    font: bold 14px sans-serif;\n    text-align: center;\n}\n\n.form-register-with-email{\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    margin-right: 130px;\n    text-align: center;\n}\n\n.form-register-with-email .form-white-background{\n    width: 570px;\n    box-sizing: border-box;\n    background-color: #ffffff;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n    padding: 60px 80px;\n    margin-bottom: 35px;\n}\n\n.form-register-with-email .form-row{\n    text-align: left;\n    margin-bottom: 23px;\n}\n\n.form-register-with-email .form-title-row{\n    text-align: center;\n    margin-bottom: 50px;\n}\n\n.form-register-with-email h1{\n    display: inline-block;\n    box-sizing: border-box;\n    color:  #4c565e;\n    font-size: 24px;\n    padding: 0 20px 15px;\n    border-bottom: 2px solid #6caee0;\n    margin: 0;\n}\n\n.form-register-with-email .form-row > label span{\n    display: inline-block;\n    box-sizing: border-box;\n    color:  #5f5f5f;\n    width: 125px;\n    text-align: right;\n    padding-right: 25px;\n}\n\n.form-register-with-email input{\n    color:  #5f5f5f;\n    box-sizing: border-box;\n    width: 230px;\n    box-shadow: 1px 2px 4px 0 rgba(0, 0, 0, 0.08);\n    padding: 12px 18px;\n    border: 1px solid #dbdbdb;\n}\n\n.form-register-with-email .form-checkbox input{\n    margin-left: 128px;\n    margin-right: 10px;\n    width: auto;\n    vertical-align: top;\n}\n\n.form-register-with-email .form-row .form-checkbox span{\n    font-size: 12px;\n    font-weight: normal;\n    display: inline-block;\n    text-align: left;\n    width: 220px;\n    margin: 0;\n}\n\n.form-register-with-email .form-checkbox span a{\n    text-decoration: none;\n    color:  #6caee0;\n}\n\n.form-register-with-email button{\n    display: block;\n    border-radius: 2px;\n    background-color:  #6caee0;\n    color: #ffffff;\n    font-weight: bold;\n    box-shadow: 1px 2px 4px 0 rgba(0, 0, 0, 0.08);\n    padding: 15px 35px;\n    border: 0;\n    margin: 55px auto 0;\n    cursor: pointer;\n}\n\n.form-register-with-email .form-log-in-with-existing{\n    text-decoration: none;\n    padding: 4px 8px;\n    font-weight: normal;\n    color: #7b9d62;\n    background-color: #d6f0c3;\n}\n\n\n.form-sign-in-with-social{\n    display: inline-block;\n    max-width: 180px;\n    box-sizing: border-box;\n    vertical-align: top;\n    text-align: center;\n    margin-top: 100px;\n}\n\n.form-sign-in-with-social .form-title-row{\n    margin-bottom: 50px;\n}\n\n.form-sign-in-with-social .form-title{\n    box-sizing: border-box;\n    color:  #4c565e;\n    font-size: 24px;\n    padding: 15px 20px;\n    border-bottom: 2px solid #6caee0;\n}\n\n.form-sign-in-with-social .form-google-button{\n    color:  #ffffff;\n    display: block;\n    width: 145px;\n    height: 40px;\n    font-size: 12px;\n    line-height: 40px;\n    background-color:  rgba(222, 110, 60, 0.9);\n    box-shadow: 1px 2px 2px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 2px;\n    margin: 8px auto;\n    text-decoration: none;\n}\n\n.form-sign-in-with-social .form-facebook-button{\n    color:  #ffffff;\n    display: block;\n    width: 145px;\n    height: 40px;\n    font-size: 12px;\n    line-height: 40px;\n    background-color:  rgba(75, 136, 194, 0.9);\n    box-shadow: 1px 2px 2px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 2px;\n    margin: 8px auto;\n    text-decoration: none;\n}\n\n.form-sign-in-with-social .form-twitter-button{\n    color:  #ffffff;\n    display: block;\n    width: 145px;\n    height: 40px;\n    font-size: 12px;\n    line-height: 40px;\n    background-color:  rgba(123, 195, 226, 0.9);\n    box-shadow: 1px 2px 2px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 2px;\n    margin: 8px auto;\n    text-decoration: none;\n}\n\n/*\tMaking the form responsive. Remove these media queries\n    if you don't need the form to work on mobile devices. */\n\n@media (max-width: 900px) {\n\n    .form-register{\n        margin: 20px auto;\n    }\n\n    .form-register-with-email{\n        position: relative;\n        display: block;\n        margin: 0;\n    }\n\n    .form-register-with-email .form-white-background{\n        margin: 0 auto 32px;\n    }\n\n\n\n    .form-sign-in-with-social {\n        margin-top: 105px;\n    }\n\n}\n\n@media (max-width: 600px) {\n\n    .form-register-with-email .form-white-background{\n        width: 300px;\n        padding-left: 35px;\n        padding-right: 35px;\n    }\n\n    .form-register-with-email .form-row > label span{\n        display: block;\n        text-align: left;\n        padding: 0 0 10px;\n    }\n\n    .form-register-with-email input{\n        display: block;\n        margin: 0 auto;\n    }\n\n    .form-register-with-email .form-checkbox input{\n        display: inline-block;\n        margin-left: 0;\n    }\n\n    .form-register-with-email .form-checkbox span{\n        width: 200px !important;\n    }\n\n    .form-register-with-email:after{\n        bottom: -80px;\n        left: 50%;\n        margin-left: -25px;\n    }\n\n}\n</style>","x":540,"y":440,"wires":[["3baa7c3a.e148fc"]]},{"id":"b33751b8.cd25f","type":"template","z":"904ddcf3.6f361","name":"CSS Style","field":"payload.css","fieldType":"msg","format":"html","syntax":"mustache","template":"<style type=\"text/css\">\n.container{\n    max-width: 500px;\n    padding: 10px 20px;\n    background: #f4f7f8;\n    margin: 10px auto;\n    padding: 20px;\n    background: #f4f7f8;\n    border-radius: 8px;\n    font-family: Georgia, \"Times New Roman\", Times, serif;\n}\n</style>","x":540,"y":580,"wires":[["a355c250.6fa6e"]]},{"id":"16130951.4130af","type":"template","z":"904ddcf3.6f361","name":"CSS Style","field":"payload","format":"html","template":"<style type=\"text/css\">\n.container{\n    max-width: 500px;\n    padding: 10px 20px;\n    background: #f4f7f8;\n    margin: 10px auto;\n    padding: 20px;\n    background: #f4f7f8;\n    border-radius: 8px;\n    font-family: Georgia, \"Times New Roman\", Times, serif;\n}\n</style>","x":540,"y":800,"wires":[["85478c81.0aefb8"]]},{"id":"4edb16a0.723778","type":"template","z":"904ddcf3.6f361","name":"CSS Style","field":"payload","format":"html","template":"<style type=\"text/css\">\n.container{\n    max-width: 500px;\n    padding: 10px 20px;\n    background: #f4f7f8;\n    margin: 10px auto;\n    padding: 20px;\n    background: #f4f7f8;\n    border-radius: 8px;\n    font-family: Georgia, \"Times New Roman\", Times, serif;\n}\n</style>","x":540,"y":920,"wires":[["f2c0ee92.472678"]]},{"id":"810cc5fd.ffbfb","type":"comment","z":"904ddcf3.6f361","name":"Supporting Pages","info":"","x":95,"y":689,"wires":[]},{"id":"e3fa7829.e8c76","type":"debug","z":"904ddcf3.6f361","name":"Process Login","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":740,"y":260,"wires":[]},{"id":"656a6dbe.bacd54","type":"inject","z":"58088b93.72d20c","name":"Create Admin","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":110,"y":460,"wires":[["1bf7b724.43cec9"]]},{"id":"53d792a2.b66c2c","type":"http request","z":"58088b93.72d20c","name":"","method":"use","ret":"obj","url":"","tls":"","x":810,"y":500,"wires":[["4fb1fcce.d50ecc","99eede09.682d58","7fd6737a.aa85fc"]]},{"id":"4fb1fcce.d50ecc","type":"debug","z":"58088b93.72d20c","name":"Create Meraki Admin","active":true,"console":"false","complete":"payload","x":800,"y":560,"wires":[]},{"id":"8bc084b.32a4678","type":"http in","z":"58088b93.72d20c","name":"","url":"/meraki/admins","method":"get","upload":false,"swaggerDoc":"","x":110,"y":220,"wires":[["4033216c.57a9c"]]},{"id":"4033216c.57a9c","type":"function","z":"58088b93.72d20c","name":"msg.url = \"/meraki/newAdmin\";","func":"msg.url = \"/meraki/newAdmin\";\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":220,"wires":[["99dc2f66.201dc8"]]},{"id":"95d50848.cbc428","type":"template","z":"58088b93.72d20c","name":"CSS","field":"payload.style","fieldType":"msg","format":"css","syntax":"mustache","template":"input[type=text], select {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\ninput[type=email], select {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\ninput[type=submit] {\n    width: 50%;\n    background-color: #4CAF50;\n    color: white;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\ninput[type=submit]:hover {\n    background-color: #45a049;\n}\n\ndiv form {\n    border-radius: 5px;\n    background-color: #f2f2f2;\n    padding: 20px;\n}\n\n.adminform {\n    width: 90%;\n}\n","x":370,"y":300,"wires":[["b9d243c1.3b73e8"]]},{"id":"99dc2f66.201dc8","type":"template","z":"58088b93.72d20c","name":"JavaScript","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"mustache","template":"\n$(document).ready(function(e) {\n    \n    \n    $.ajax({\n        url: 'api/organizations',\n        type: 'get',\n        datatype: 'json',\n        success: function(data){\n            var toAppend = '';\n            //if(typeof data === 'object'){\n                for(var i=0;i<data.length;i++){\n                    toAppend += '<option value='+data[i][\"id\"]+'>'+data[i]['name']+'</option>';\n                }\n            //}\n            console.log(\"orgs toAppend\",toAppend);\n            $('#orgs').append(toAppend);\n        }\n    });\n    \n    $(\"form[ajax=true]\").submit(function(e) {\n        \n        e.preventDefault();\n        \n        var form_data = $(this).serialize();\n        var form_url = $(this).attr(\"action\");\n        var form_method = $(this).attr(\"method\").toUpperCase();\n        \n        var orgId = $(\"#orgs\").val();\n        \n        $(\"#loadingimg\").show();\n        \n        $.ajax({\n            url: form_url+\"/\"+orgId, \n            type: form_method,       \n            data: form_data,     \n            cache: false,\n            success: function(data){\n                \n                // Create simple HTML response\n                var response = \n                    \"<div>\"+\n                        \"<h2>Created Admin!</h2>\"+\n                        \"<h4>Name</h4><p>\"+data.name+\"</p>\"+\n                        \"<h4>E-Mail</h4><p>\"+data.email+\"</p>\"+\n                        \"<h4>ID</h4><p>\"+data.id+\"</p>\"+\n                        \"<h4>Tags</h4><p>\"+data.tags+\"</p>\"+\n                        \"<h4>Org Access</h4><p>\"+data.orgAccess+\"</p>\"+\n                    \"</div>\";\n                \n                console.log(\"response: \"+JSON.stringify(data));\n                \n                \n                $(\"#result\").html(response); \n                \n                $(\"#loadingimg\").hide();\n                $( '#createadmin' ).each(function(){\n                    this.reset();\n                });\n            },\n            error: function(error){\n                $(\"#result\").html(error.responseText);\n            }\n        });    \n        \n    });\n    \n});","x":390,"y":260,"wires":[["95d50848.cbc428"]]},{"id":"f236f83d.7466","type":"comment","z":"58088b93.72d20c","name":"Create Admin Form","info":"","x":110,"y":140,"wires":[]},{"id":"26f51130.9b3156","type":"comment","z":"58088b93.72d20c","name":"Form Submission URL","info":"","x":420,"y":180,"wires":[]},{"id":"575729af.64d36","type":"http response","z":"58088b93.72d20c","name":"","x":710,"y":220,"wires":[]},{"id":"b9d243c1.3b73e8","type":"template","z":"58088b93.72d20c","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n  <head>\n    <title>Meraki Dasbhoard API - Admin User</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <!--\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    -->\n    <script\n      src=\"https://code.jquery.com/jquery-3.2.1.min.js\"\n      integrity=\"sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\"\n      crossorigin=\"anonymous\"></script>\n      \n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">  \n    <script>{{{payload.jquery}}}</script>\n    <style>{{{payload.style}}}</style>\n  </head>\n  \n<div class=\"container\">\n    <h2>Create a Meraki Dashboard Administrator</h2>\n    <h4><a href=\"http://developers.meraki.com\">Meraki Developers Portal</a></h4>\n\n<div class=\"col-md-6\">\n<div class=\"adminform\">\n  <form id=\"createadmin\" method=\"post\" action=\"{{url}}\" ajax=\"true\">\n    <select id=\"orgs\" name=\"orgs\">\n        <option>Select Organization..</option>\n    </select>\n    <label>Contact Details</label>\n    <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"First Name\" required=true/>\n    <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Last Name\" required=true/>\n    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"E-mail\" required=true/>\n    <br>\n\n    <label>Organization Permissions</label>\n    <select id=\"orgAccess\" name=\"orgAccess\" placeholder=\"Org Access\">\n      <option value=\"full\" disabled>full</option>\n      <option value=\"read-only\" selected>read-only</option>\n    </select>\n    \n  \n    <input type=\"submit\" class=\"button\" value=\"Submit\">\n  </form>\n</div>\n</div>\n\n<div class=\"col-md-6\">\n    <span id=\"result\"></span>\n</div>\n</div>\n</body>\n</html>\n<script>{{{payload.script}}}</script>","x":370,"y":340,"wires":[["575729af.64d36"]]},{"id":"1bf7b724.43cec9","type":"function","z":"58088b93.72d20c","name":"Sample Data","func":"msg.payload = {\n    \"name\": \"NodeRED Test\",\n    \"email\": \"cory@internetoflego.com\",\n    \"orgAccess\": \"full\"\n };\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":460,"wires":[["a37012.a45e7ff"]]},{"id":"452e50d5.8f2ad8","type":"http in","z":"58088b93.72d20c","name":"","url":"/meraki/newAdmin/:orgId","method":"post","swaggerDoc":"","x":170,"y":500,"wires":[["f74700e3.4ca19"]]},{"id":"99eede09.682d58","type":"http response","z":"58088b93.72d20c","name":"","x":990,"y":500,"wires":[]},{"id":"f74700e3.4ca19","type":"function","z":"58088b93.72d20c","name":"form data","func":"// Convert form data into Meraki API expected JSON\nmsg.orgId = msg.req.params.orgId;\nmsg.payload = {\n    name: msg.req.body.firstname + \" \" + msg.req.body.lastname,\n    email: msg.req.body.email,\n    orgAccess: msg.req.body.orgAccess\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":500,"wires":[["5ab2d7ef.1d8468","a37012.a45e7ff"]]},{"id":"5ab2d7ef.1d8468","type":"debug","z":"58088b93.72d20c","name":"newAdmin Form Data","active":true,"console":"false","complete":"payload","x":296.5555725097656,"y":558.6666631698608,"wires":[]},{"id":"b08da4f8.3661e","type":"inject","z":"58088b93.72d20c","name":"List Organizations","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":660,"wires":[["f5173a3b.17a9d8"]]},{"id":"f5173a3b.17a9d8","type":"function","z":"58088b93.72d20c","name":"Meraki API - List Organizations","func":"// Set Variables\nvar apiKey = global.get('apiKey');\n\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\n\nmsg.url = \"https://dashboard.meraki.com/api/v0/organizations\";\nmsg.method = 'get';\n\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":660,"wires":[["bb63db2c.c6e71"]]},{"id":"bb63db2c.c6e71","type":"http request","z":"58088b93.72d20c","name":"","method":"use","ret":"txt","url":"","tls":"","x":670,"y":660,"wires":[["ff970cc4.4201a8"]]},{"id":"3200bad4.72e6e6","type":"http in","z":"58088b93.72d20c","name":"","url":"/meraki/api/organizations","method":"get","swaggerDoc":"","x":160,"y":700,"wires":[["f5173a3b.17a9d8"]]},{"id":"ff970cc4.4201a8","type":"function","z":"58088b93.72d20c","name":"Large Int Helper","func":"// Convert the org number to a string so that it does not become corrupted \n// when the JSON conversion happens.   \nmsg.payload = msg.payload.replace(/\"id\":(.*?)(?:,)/g,\"\\\"id\\\"\\:\\\"$1\\\"\\,\");\nconsole.log(\"new json with regex replace \",msg.payload);\nreturn msg","outputs":1,"noerr":0,"x":860,"y":660,"wires":[["66e9d91b.394a48"]]},{"id":"66e9d91b.394a48","type":"json","z":"58088b93.72d20c","name":"","x":830,"y":700,"wires":[["48f36081.5beae8","6591c9c0.e3baa"]]},{"id":"48f36081.5beae8","type":"http response","z":"58088b93.72d20c","name":"","x":1030,"y":700,"wires":[]},{"id":"6591c9c0.e3baa","type":"debug","z":"58088b93.72d20c","name":"List Orgs JSON","active":true,"console":"false","complete":"payload","x":1000,"y":740,"wires":[]},{"id":"5bf4def3.29a9b","type":"inject","z":"58088b93.72d20c","name":"Sets Defaults - Injected at start","topic":"","payload":"Setting Environment Variables","payloadType":"str","repeat":"","crontab":"","once":true,"x":170,"y":60,"wires":[["d628fc2e.bcf51"]]},{"id":"d628fc2e.bcf51","type":"function","z":"58088b93.72d20c","name":"Env Variables: UPDATE THIS","func":"//  ###### User Defined Variables ######\n\nconst API_KEY = 'YourAPIkey'; //Your API KEY (Keep this secret. Do not publish)\nvar shard = 'n###'; // https://n149.meraki.com , where n149 represent the shard number. This is defined to avoid redirect issues.\nvar orgId = 'YourOrgId'; // Your default Organization ID\n\n\n\n\n\n// ###### Set and Get Global variables ######\n\n\n// Assign to Global Context \nglobal.set('apiKey', API_KEY); // pulling API key via \"secret\" node. This avoides publishing the API key when sharing the flow\nglobal.set('shard', shard);\n\nglobal.set('orgId', orgId);\n\n\nmsg.payload = \"settings set\";\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":60,"wires":[["f32d9ed0.c65a58"]]},{"id":"f32d9ed0.c65a58","type":"debug","z":"58088b93.72d20c","name":"Flow Env Variables","active":true,"console":"false","complete":"true","x":750,"y":60,"wires":[]},{"id":"a37012.a45e7ff","type":"function","z":"58088b93.72d20c","name":"Meraki API - Create Admin","func":"// Set Variables\nvar apiKey = global.get('apiKey');\nvar shard = global.get('shard');\n//var orgId = global.get('orgId'); // set via global variables\nvar orgId = msg.orgId; //set via request parameter\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/organizations/\"+orgId+\"/admins\";\nmsg.method = 'post';\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":500,"wires":[["53d792a2.b66c2c"]]},{"id":"a3296855.60d5f8","type":"comment","z":"58088b93.72d20c","name":"APIs","info":"","x":70,"y":400,"wires":[]},{"id":"8d45aef5.90d5c8","type":"link out","z":"904ddcf3.6f361","name":"excapClick Login","links":["bc43f620.69aed8","b039d778.2f5f9","93b78784.b0dcb8"],"x":395,"y":300,"wires":[]},{"id":"1e7de609.8627f2","type":"http request","z":"64b489a9.d87f58","name":"","method":"use","ret":"txt","url":"","tls":"","x":810,"y":140,"wires":[["a00dcf37.7d8a6"]]},{"id":"14482890.621507","type":"function","z":"64b489a9.d87f58","name":"Spark Send Message (API) ","func":"// ******************\n// Set Your Variables\n// ******************\n\n// Your Room ID\nvar roomId = msg.roomId; // passed from credentials node\n\n// Your Access Token\nvar accessToken = msg.accessToken;  // passed from credentials node\n\n// -- -- -- -- -- --\n// Build API Call\nmsg.url = \"https://api.ciscospark.com/v1/messages\";\nmsg.headers = { \n    'content-type': 'application/json',\n    'authorization': 'Bearer '+ accessToken \n};\nmsg.payload ={ \n    roomId: roomId,\n    markdown: msg.payload \n}\nmsg.method = \"post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":140,"wires":[["1e7de609.8627f2"]]},{"id":"f72abb42.6e0fe","type":"inject","z":"64b489a9.d87f58","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":100,"y":240,"wires":[["8ab006ca.e075d"]]},{"id":"a00dcf37.7d8a6","type":"debug","z":"64b489a9.d87f58","name":"Spark Message","active":false,"console":"false","complete":"true","x":980,"y":140,"wires":[]},{"id":"49eac489.66b774","type":"link in","z":"64b489a9.d87f58","name":"","links":["4901ac2f.beb524"],"x":255,"y":480,"wires":[["3a165e3e.4b5b62"]]},{"id":"c9f7d189.c1b92","type":"comment","z":"64b489a9.d87f58","name":"Captive Portal Login Notification","info":"","x":150,"y":280,"wires":[]},{"id":"7fd6737a.aa85fc","type":"link out","z":"58088b93.72d20c","name":"Create Meraki Admin","links":["effd5bdf.b180a"],"x":955,"y":540,"wires":[]},{"id":"effd5bdf.b180a","type":"link in","z":"64b489a9.d87f58","name":"","links":["7fd6737a.aa85fc"],"x":255,"y":400,"wires":[["30f3c0e2.f8a2d8","e4e385da.13ffc8"]]},{"id":"30f3c0e2.f8a2d8","type":"function","z":"64b489a9.d87f58","name":"Format Message","func":"var admin = msg.payload;\n\nmsg.payload = \"## New Admin Created! \\n\" +\n    admin.name + \" \" + admin.email + \"   **Access**: \"+admin.orgAccess;\nreturn msg;\n","outputs":1,"noerr":0,"x":410,"y":400,"wires":[["900a9bc5.1c83b8"]]},{"id":"b039d778.2f5f9","type":"link in","z":"64b489a9.d87f58","name":"","links":["8d45aef5.90d5c8"],"x":255,"y":320,"wires":[["6edfb3da.8ef03c"]]},{"id":"6edfb3da.8ef03c","type":"function","z":"64b489a9.d87f58","name":"Format Message","func":"\nvar client = msg.payload;\n\nmsg.payload = \"## New WiFi Client Joined! \\n\" +\n    client.name + \" \" + client.email;\nreturn msg;\n","outputs":1,"noerr":0,"x":410,"y":320,"wires":[["b2a4fd42.350ce"]]},{"id":"829987e5.80cf18","type":"comment","z":"64b489a9.d87f58","name":"Test Timestamp","info":"","x":100,"y":200,"wires":[]},{"id":"1e70190b.72575f","type":"comment","z":"64b489a9.d87f58","name":"Dashboard API Admin Creation","info":"","x":150,"y":360,"wires":[]},{"id":"abcb5530.1f5a5","type":"comment","z":"64b489a9.d87f58","name":"Location API Notification","info":"","x":130,"y":440,"wires":[]},{"id":"12277923.6fc5cf","type":"link out","z":"cf20e2de.a92f68","name":"Location API All Data","links":["19075e6e.68f35a"],"x":555,"y":300,"wires":[]},{"id":"ceed197b.00d9b8","type":"comment","z":"cf20e2de.a92f68","name":"Workflow Example","info":"","x":110,"y":360,"wires":[]},{"id":"2d9e600e.d3b3d","type":"debug","z":"cf20e2de.a92f68","name":"WiFi Device","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":610,"y":440,"wires":[]},{"id":"3b9d1d48.bb71fa","type":"http in","z":"cf20e2de.a92f68","name":"","url":"/scanning","method":"post","upload":false,"swaggerDoc":"","x":120,"y":220,"wires":[["9cb026f3.65a18","5ce20d0b.835af4"]]},{"id":"19075e6e.68f35a","type":"link in","z":"cf20e2de.a92f68","name":"","links":["12277923.6fc5cf","a078d3c8.b309d"],"x":55,"y":440,"wires":[["3b7e6105.530bfe"]]},{"id":"4901ac2f.beb524","type":"link out","z":"cf20e2de.a92f68","name":"BLE Location API","links":["49eac489.66b774"],"x":555,"y":480,"wires":[]},{"id":"8a42b87a.8adfd8","type":"function","z":"cf20e2de.a92f68","name":"WiFi Split observations","func":"// send individual observation items to next node\nvar data = msg.payload.data;\n\nfor (i = 0; i < data.observations.length; i++) { \n    msg.payload = data.observations[i];\n    node.send(msg);\n}\n\n","outputs":1,"noerr":0,"x":360,"y":400,"wires":[["2d9e600e.d3b3d","cd1f8c8a.cc5ce"]]},{"id":"3b7e6105.530bfe","type":"switch","z":"cf20e2de.a92f68","name":"WiFi or BLE","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"DevicesSeen","vt":"str"},{"t":"eq","v":"BluetoothDevicesSeen","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":170,"y":440,"wires":[["8a42b87a.8adfd8"],["70bf0e2b.23f82"]]},{"id":"70bf0e2b.23f82","type":"function","z":"cf20e2de.a92f68","name":"BLE Split observations","func":"// send individual observation items to next node\nvar data = msg.payload.data;\n\nfor (i = 0; i < data.observations.length; i++) { \n    msg.payload = data.observations[i];\n    node.send(msg);\n}\n\n","outputs":1,"noerr":0,"x":360,"y":480,"wires":[["4901ac2f.beb524","cf5bf3bc.e41698"]]},{"id":"cf5bf3bc.e41698","type":"debug","z":"cf20e2de.a92f68","name":"BLE Device","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":610,"y":520,"wires":[]},{"id":"cd1f8c8a.cc5ce","type":"link out","z":"cf20e2de.a92f68","name":"WiFi Location API","links":["19826e8c.12cac9","ed2bc82d.2a41c8","f0cc5efc.9dac"],"x":555,"y":400,"wires":[]},{"id":"1be2f3a2.da02ec","type":"switch","z":"64b489a9.d87f58","name":"Search VIP Client- UPDATE","property":"payload.clientMac","propertyType":"msg","rules":[{"t":"cont","v":"74:da:38:56:0a:80","vt":"str"}],"checkall":"true","outputs":1,"x":420,"y":580,"wires":[["16dc3280.7c81e6"]]},{"id":"19826e8c.12cac9","type":"link in","z":"64b489a9.d87f58","name":"","links":["cd1f8c8a.cc5ce"],"x":255,"y":540,"wires":[["1be2f3a2.da02ec","5168e3c7.2aad6c"]]},{"id":"4d9f7d50.e4632c","type":"function","z":"64b489a9.d87f58","name":"Format Message","func":"// Write a message with Markdown and include the Google Maps encoded URL.\n// http://maps.google.com/maps?t=h&q=loc:35.487895,-87.332414&z=17 \nvar device = msg.payload;\nvar manufacturer = device.manufacturer || \"\"; // display manufacturer only if it is known\n\nmsg.payload = \"- WiFi Device Found! </br>\" +\n    \"**Manufacturer:** \" + manufacturer + \"</br>\"+\n    \"**RSSI:**         \" + device.rssi + \"</br>\" +\n    \"**MAC:**          \" + device.clientMac + \"</br>\" +\n    \" [Map](https://maps.google.com/maps?t=h&q=loc:\"+device.location.lat +\",\"+ device.location.lng+\"&z=17)\";\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":540,"wires":[[]]},{"id":"71931cb3.da711c","type":"link in","z":"64b489a9.d87f58","name":"Cisco Spark","links":["8ab006ca.e075d","b2a4fd42.350ce","900a9bc5.1c83b8","37651561.7e052a","c13441aa.c6fa18","bb3f4bfb.301ba8","2af2d143.cbc54e","881da003.81488","5bdee542.54c07c"],"x":75,"y":140,"wires":[["a3b57d5c.7a6ca"]]},{"id":"8ab006ca.e075d","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":575,"y":240,"wires":[]},{"id":"b2a4fd42.350ce","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":575,"y":320,"wires":[]},{"id":"900a9bc5.1c83b8","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":575,"y":400,"wires":[]},{"id":"37651561.7e052a","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":995,"y":480,"wires":[]},{"id":"c13441aa.c6fa18","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":1015,"y":540,"wires":[]},{"id":"3b8e7716.37662","type":"comment","z":"64b489a9.d87f58","name":"API Proxy Change Events","info":"","x":130,"y":620,"wires":[]},{"id":"1cd451f0.d6ed96","type":"comment","z":"64b489a9.d87f58","name":"BLE","info":"","x":170,"y":480,"wires":[]},{"id":"4d67706d.786da8","type":"comment","z":"64b489a9.d87f58","name":"WiFi","info":"","x":170,"y":540,"wires":[]},{"id":"39f0c9cc.ff896e","type":"function","z":"64b489a9.d87f58","name":"Format Message","func":"// Write a message with Markdown and include the Google Maps encoded URL.\n// http://maps.google.com/maps?t=h&q=loc:35.487895,-87.332414&z=17 \nvar device = msg.payload;\nmsg.payload = \"- BLE Device Found! </br>\" +\n    \" **RSSI**:\" + device.rssi + \"</br>\" +\n    \" **MAC**: \" + device.clientMac + \"</br>\" +\n    \" [Map](https://maps.google.com/maps?t=h&q=loc:\"+device.location.lat +\",\"+ device.location.lng+\"&z=17)\";\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":480,"wires":[[]]},{"id":"16dc3280.7c81e6","type":"function","z":"64b489a9.d87f58","name":"Format Message","func":"// Write a message with Markdown and include the Google Maps encoded URL.\n// http://maps.google.com/maps?t=h&q=loc:35.487895,-87.332414&z=17 \nvar device = msg.payload;\nvar manufacturer = device.manufacturer || \"\"; // display manufacturer only if it is known\n\nmsg.payload = \"- VIP WiFi Device Found! </br>\" + \n    \"####\"+ manufacturer + \"#### </br>\"+\n    \" **RSSI**:\" + device.rssi + \"</br>\" +\n    \" **MAC**: \" + device.clientMac + \"<br>\" +\n    \" [Map](https://maps.google.com/maps?t=h&q=loc:\"+device.location.lat +\",\"+ device.location.lng+\"&z=17)\";\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":580,"wires":[[]]},{"id":"bb3f4bfb.301ba8","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":1015,"y":580,"wires":[]},{"id":"e4e385da.13ffc8","type":"debug","z":"64b489a9.d87f58","name":"Admin Data","active":true,"console":"false","complete":"payload","x":390,"y":440,"wires":[]},{"id":"27cb8ceb.a5971c","type":"comment","z":"64b489a9.d87f58","name":"Send Message to Cisco Spark Room","info":"","x":170,"y":100,"wires":[]},{"id":"14c91f0f.931331","type":"worldmap","z":"cf20e2de.a92f68","name":"","lat":"37.77088","lon":"-122.39146","zoom":"18","layer":"Esri","cluster":"3","maxage":"120","usermenu":"show","panit":"false","x":630,"y":700,"wires":[]},{"id":"a37dfefe.eb8c8","type":"function","z":"cf20e2de.a92f68","name":"format data","func":"var data = msg;\nmsg = {};\nmsg.payload = {};\nmsg.payload.name = data.payload.clientMac;\nmsg.payload.lat = data.payload.location.lat;\nmsg.payload.lon = data.payload.location.lng;\nmsg.payload.ipv4 = data.payload.ipv4;\nmsg.payload.ssid = data.payload.ssid;\nmsg.payload.os = data.payload.os;\nmsg.payload.rssi = data.payload.rssi;\nmsg.payload.manufacturer = data.payload.manufacturer;\nmsg.payload.type = data.type;\nmsg.payload.apMac = data.apMac;\nmsg.payload.layer = \"Meraki\";\nmsg.payload.icon = \"globe\";\nmsg.payload.iconColor = \"orange\";\nreturn msg;\n\n","outputs":1,"noerr":0,"x":210,"y":660,"wires":[["14c91f0f.931331","6e5119a.c35b5e8","e34d3166.da07e"]]},{"id":"6e5119a.c35b5e8","type":"debug","z":"cf20e2de.a92f68","name":"Formatted Data","active":false,"console":"false","complete":"payload","x":620,"y":660,"wires":[]},{"id":"e34d3166.da07e","type":"function","z":"cf20e2de.a92f68","name":"move and zoom","func":"msg.payload = { \n    command:{\n        layer:\"Meraki\",\n        lat:msg.payload.lat,\n        lon:msg.payload.lng\n    } \n};\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":720,"wires":[["14c91f0f.931331"]]},{"id":"ed2bc82d.2a41c8","type":"link in","z":"cf20e2de.a92f68","name":"World Map","links":["cd1f8c8a.cc5ce"],"x":55,"y":660,"wires":[["a37dfefe.eb8c8"]]},{"id":"1ac5320.b6f6f4e","type":"comment","z":"cf20e2de.a92f68","name":"Worldmap: Open browser to  https://merakidemo.internetoflego.com/worldmap","info":"","x":310,"y":620,"wires":[]},{"id":"f4945edf.b9da68","type":"inject","z":"4f3b0230.fa6864","name":"Sets Defaults - Injected at start","topic":"","payload":"Setting Environment Variables","payloadType":"str","repeat":"","crontab":"","once":true,"x":190,"y":80,"wires":[["2650aba5.993324"]]},{"id":"bb4ecacb.154b38","type":"function","z":"4f3b0230.fa6864","name":"Set Environment Variables: UPDATE THIS","func":"//  ###### User Defined Variables ######\n\n//const API_KEY = ''; //Your API KEY (Keep this secret. Do not publish)\nconst API_KEY = msg.apikey; // from credentials node to keep secret\n\nvar shard = 'n143'; // https://n149.meraki.com , where n149 represent the shard number. This is defined to avoid redirect issues.\n\n\n// These \"test params\" variables are used by the testing buttons. In production, these paramters should be passed in the URL.\n\nvar orgId = '549236'; // Meraki Sandbox\nvar netId = 'L_646829496481092083'; // Sandbox - San Francisco\n\nvar netId_delete = \"L_643451796760560270\"; // some network to delete as a test. Be carefull!\nvar serial = 'Q2JD-EFUM-ZQMP'; // Your default serial numer of device\nvar ssidNum = '0'; // default SSID to return\nvar portNum = '1'; // default switch port number to return\nvar srId = '46a71259-735f-4476-9d1e-08d5b017cbde';\nvar vlanId = '1';\n\n\n\n// ###### Set and Get flow variables ######\n\n\n// Assign to flow Context \nflow.set('apiKey', API_KEY); // pulling API key via \"secret\" node. This avoides publishing the API key when sharing the flow\nflow.set('shard', shard);\n\n\nflow.set('orgId', orgId);\nflow.set('netId', netId);\nflow.set('serial', serial);\nflow.set('ssidNum', ssidNum);\nflow.set('portNum', portNum);\nflow.set('srId', srId);\nflow.set('vlanId', vlanId);\nflow.set('netId_delete', netId_delete);\n\n// confirm changes were made\nvar settings = {};\n\n\nsettings.apiKey = flow.get('apiKey');\nsettings.shard = flow.get('shard');\n\nsettings.orgId = flow.get('orgId');\nsettings.netId = flow.get('netId');\nsettings.serial = flow.get('serial');\nsettings.ssidNum = flow.get('ssidNum');\nsettings.portNum = flow.get('portNum');\nsettings.srId = flow.get('srId');\nsettings.vlanId = flow.get('vlanId');\nsettings.shard = flow.get('netId_delete');\n\nmsg.payload = settings;\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":120,"wires":[["5694d712.154158"]]},{"id":"5694d712.154158","type":"debug","z":"4f3b0230.fa6864","name":"Flow Env Variables","active":true,"console":"false","complete":"true","x":850,"y":120,"wires":[]},{"id":"4684851.39e55fc","type":"comment","z":"4f3b0230.fa6864","name":"API Key and Environment variables: UPDATE THE NODE!","info":"","x":230,"y":40,"wires":[]},{"id":"2650aba5.993324","type":"credentials","z":"4f3b0230.fa6864","name":"API KEY - UPDATE THIS","props":[{"value":"apikey","type":"msg"}],"x":490,"y":80,"wires":[["bb4ecacb.154b38"]]},{"id":"382a5816.1e2598","type":"inject","z":"4f3b0230.fa6864","name":"List Admins","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":240,"wires":[["ccf6b834.87f9d"]]},{"id":"ccf6b834.87f9d","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\n\n// Sample Data\nmsg.payload = {\n    \n};\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":240,"wires":[["aa2ae3fb.623898"]]},{"id":"aa2ae3fb.623898","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Admins","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\n\nvar orgId = msg.req.params.orgId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/organizations/\"+orgId+\"/admins\";\nmsg.method = 'get';\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":260,"wires":[["f8ad681f.e23318"]]},{"id":"f8ad681f.e23318","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":770,"y":260,"wires":[["605eb1d0.7ca9d8","80fe831b.875568"]]},{"id":"4acc29dc.de33a","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations/:orgId/admins","method":"get","swaggerDoc":"","x":230,"y":280,"wires":[["aa2ae3fb.623898"]]},{"id":"605eb1d0.7ca9d8","type":"debug","z":"4f3b0230.fa6864","name":"List Admins","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":930,"y":280,"wires":[]},{"id":"80fe831b.875568","type":"http response","z":"4f3b0230.fa6864","name":"","x":910,"y":240,"wires":[]},{"id":"46537841.389ac","type":"inject","z":"4f3b0230.fa6864","name":"Create Admin","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":360,"wires":[["49877c2a.ae113c"]]},{"id":"49877c2a.ae113c","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\n\n// Sample Data\nmsg.payload = {\n    email: 'info@internetoflego.com',\n    name: 'cory lego user',\n    orgAccess: 'read-only',\n    tags:[\n        {\n            \"tag\":\"west\",\n            \"access\":\"read-only\"\n        },\n        {\n            \"tag\":\"east\",\n            \"access\":\"read-only\"\n        }\n    ],\n    networks: [] \n};\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":360,"wires":[["61456c2a.30f58c"]]},{"id":"61456c2a.30f58c","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Create Admin","func":"// Set Variables\nvar apiKey = global.get('apiKey');\nvar shard = global.get('shard');\n\nvar orgId = msg.req.params.orgId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/organizations/\"+orgId+\"/admins\";\nmsg.method = 'post';\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":380,"wires":[["3f473aca.406b86"]]},{"id":"3f473aca.406b86","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":770,"y":380,"wires":[["b0de1318.53ad9","69126898.fdcba8"]]},{"id":"472399fc.339908","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations/:orgId/admins","method":"post","swaggerDoc":"","x":230,"y":400,"wires":[["61456c2a.30f58c"]]},{"id":"b0de1318.53ad9","type":"debug","z":"4f3b0230.fa6864","name":"Create Admin","active":true,"console":"false","complete":"payload","x":940,"y":400,"wires":[]},{"id":"69126898.fdcba8","type":"http response","z":"4f3b0230.fa6864","name":"","x":910,"y":360,"wires":[]},{"id":"6bb1806a.de0b68","type":"comment","z":"4f3b0230.fa6864","name":"Admins","info":"","x":70,"y":200,"wires":[]},{"id":"6f2c7de4.9500f4","type":"inject","z":"4f3b0230.fa6864","name":"List Clients","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":520,"wires":[["50d7f035.493788"]]},{"id":"50d7f035.493788","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.serial = flow.get('serial');\n\n// Sample Data\nmsg.req.query = \"timespan=84000\";\nmsg.payload = {\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":520,"wires":[["1237885d.b618a8"]]},{"id":"1237885d.b618a8","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Clients","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar serial = msg.req.params.serial;\nvar query = msg.req.query;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/devices/\"+serial+\"/clients?\"+query;\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":540,"wires":[["c3e337c5.58bb7"]]},{"id":"c3e337c5.58bb7","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":770,"y":540,"wires":[["c415258a.0e5c68","c681d6a0.78b618"]]},{"id":"a25267c2.050828","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/devices/:serial/clients","method":"get","swaggerDoc":"","x":210,"y":560,"wires":[["1237885d.b618a8"]]},{"id":"c415258a.0e5c68","type":"debug","z":"4f3b0230.fa6864","name":"List Clients","active":true,"tosidebar":true,"console":false,"complete":"payload","x":930,"y":560,"wires":[]},{"id":"c681d6a0.78b618","type":"http response","z":"4f3b0230.fa6864","name":"","x":910,"y":520,"wires":[]},{"id":"c7218a17.7cd838","type":"comment","z":"4f3b0230.fa6864","name":"Clients","info":"","x":70,"y":480,"wires":[]},{"id":"53ceffd0.a61fe","type":"inject","z":"4f3b0230.fa6864","name":"List Templates","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":680,"wires":[["84821933.69fb"]]},{"id":"84821933.69fb","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":680,"wires":[["4898ae55.f02e08"]]},{"id":"4898ae55.f02e08","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Templates","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar orgId = msg.req.params.orgId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/organizations/\"+orgId+\"/configTemplates\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":680,"wires":[["6a516670.318808"]]},{"id":"6a516670.318808","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":830,"y":680,"wires":[["15ae9fac.162c8","1e724847.b774a"]]},{"id":"d45fcfd6.b1ce7","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations/:orgId/configTemplates","method":"get","swaggerDoc":"","x":260,"y":720,"wires":[["4898ae55.f02e08"]]},{"id":"15ae9fac.162c8","type":"http response","z":"4f3b0230.fa6864","name":"","x":970,"y":660,"wires":[]},{"id":"1e724847.b774a","type":"debug","z":"4f3b0230.fa6864","name":"List Templates","active":true,"console":"false","complete":"payload","x":1000,"y":700,"wires":[]},{"id":"bf8cd8cc.427d4","type":"inject","z":"4f3b0230.fa6864","name":"Bind to a Template","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":800,"wires":[["7ea3e277.f43934"]]},{"id":"7ea3e277.f43934","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\n\n// Sample Data\nmsg.payload = {\n    \"configTemplateId\":\"L_643451796760560235\",\n    \"autoBind\": false\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":800,"wires":[["5abaf62d.d07ac8"]]},{"id":"5abaf62d.d07ac8","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Bind to a Template","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/bind\";\nmsg.method = 'post';\n\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":800,"wires":[["973c47c1.98ddc8"]]},{"id":"973c47c1.98ddc8","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":830,"y":800,"wires":[["9dd9c5d9.08df48","a99ba209.bd61b"]]},{"id":"56449abe.b2afbc","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/bind","method":"post","swaggerDoc":"","x":210,"y":840,"wires":[["5abaf62d.d07ac8"]]},{"id":"9dd9c5d9.08df48","type":"http response","z":"4f3b0230.fa6864","name":"","x":970,"y":780,"wires":[]},{"id":"a99ba209.bd61b","type":"debug","z":"4f3b0230.fa6864","name":"Bind to a Template","active":true,"console":"false","complete":"true","x":1010,"y":820,"wires":[]},{"id":"d37ba176.229b","type":"inject","z":"4f3b0230.fa6864","name":"Unbind from Template","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":920,"wires":[["266d4794.c781e"]]},{"id":"266d4794.c781e","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {};\n\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":920,"wires":[["1087451b.d0a7cb"]]},{"id":"1087451b.d0a7cb","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Unbind from Template","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/unbind\";\nmsg.method = 'post';\nreturn msg;","outputs":1,"noerr":0,"x":580,"y":920,"wires":[["1f36a2b1.ca2215"]]},{"id":"1f36a2b1.ca2215","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":830,"y":920,"wires":[["89ff1c3.7f178e","82d33400.14c6b"]]},{"id":"813faa0a.1819e","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/unbind","method":"post","swaggerDoc":"","x":220,"y":960,"wires":[["1087451b.d0a7cb"]]},{"id":"89ff1c3.7f178e","type":"http response","z":"4f3b0230.fa6864","name":"","x":970,"y":900,"wires":[]},{"id":"82d33400.14c6b","type":"debug","z":"4f3b0230.fa6864","name":"Unbind from Template","active":true,"console":"false","complete":"payload","x":1020,"y":940,"wires":[]},{"id":"9d24538e.7210d","type":"comment","z":"4f3b0230.fa6864","name":"Bug: \"{\"errors\":[\"Validation failed: Handle has already been taken\"]}\"","info":"","x":460,"y":960,"wires":[]},{"id":"18cfbd93.5b7daa","type":"comment","z":"4f3b0230.fa6864","name":"Templates","info":"","x":80,"y":640,"wires":[]},{"id":"41c4aff9.9b72","type":"inject","z":"4f3b0230.fa6864","name":"Remove a single Device","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":1480,"wires":[["e0b5aa70.e424f8"]]},{"id":"e0b5aa70.e424f8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n// Sample Data\nmsg.req.params.serial = flow.get('serial');\nmsg.payload = {\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1480,"wires":[["6b9d1382.84d4a4"]]},{"id":"6b9d1382.84d4a4","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Remove a Single Device","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\nvar serial = msg.req.params.serial;\n\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/devices/\"+flow.get('serial')+\"/remove\";\nmsg.method ='post';\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":1480,"wires":[["7fe31f4c.c3f748"]]},{"id":"7fe31f4c.c3f748","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":1480,"wires":[["39608638.3ed042","7645157f.1d440c"]]},{"id":"52d35720.78ff3","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/devices/:serial/remove","method":"post","swaggerDoc":"","x":270,"y":1520,"wires":[["6b9d1382.84d4a4"]]},{"id":"39608638.3ed042","type":"debug","z":"4f3b0230.fa6864","name":"Remove a single Device","active":true,"console":"false","complete":"true","x":1090,"y":1520,"wires":[]},{"id":"7645157f.1d440c","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1480,"wires":[]},{"id":"d718a388.23f32","type":"inject","z":"4f3b0230.fa6864","name":"List Devices","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":1080,"wires":[["a5707897.30f888"]]},{"id":"a5707897.30f888","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1080,"wires":[["9ba51ff2.c03da8"]]},{"id":"9ba51ff2.c03da8","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Devices","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/devices/\";\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":1080,"wires":[["9f682ccb.0ec0e"]]},{"id":"9f682ccb.0ec0e","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":1080,"wires":[["10b6e3c7.79f0ec","60b5d50c.03a154"]]},{"id":"4b9e414c.7520b8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/devices/","method":"get","swaggerDoc":"","x":220,"y":1120,"wires":[["9ba51ff2.c03da8"]]},{"id":"10b6e3c7.79f0ec","type":"debug","z":"4f3b0230.fa6864","name":"List Devices","active":true,"console":"false","complete":"payload","x":1130,"y":1120,"wires":[]},{"id":"60b5d50c.03a154","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1080,"wires":[]},{"id":"2ba8a474.735e84","type":"inject","z":"4f3b0230.fa6864","name":"List a single Device","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":1180,"wires":[["63067592.42d0d4"]]},{"id":"63067592.42d0d4","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n// Sample Data\nmsg.req.params.serial = flow.get('serial');\nmsg.payload = {\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1180,"wires":[["731ad965.21ddb8"]]},{"id":"731ad965.21ddb8","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List a Single Device","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\nvar serial = msg.req.params.serial;\n\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/devices/\"+flow.get('serial');\nmsg.method ='get';\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":1180,"wires":[["577edc91.059de4"]]},{"id":"577edc91.059de4","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":1180,"wires":[["16fec319.dfce1d","c49ef69b.e80398"]]},{"id":"164a9586.5d2a3a","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/devices/:serial","method":"get","swaggerDoc":"","x":240,"y":1220,"wires":[["731ad965.21ddb8"]]},{"id":"16fec319.dfce1d","type":"debug","z":"4f3b0230.fa6864","name":"List a single Device","active":true,"console":"false","complete":"true","x":1070,"y":1220,"wires":[]},{"id":"c49ef69b.e80398","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1180,"wires":[]},{"id":"2b3d6913.d31846","type":"inject","z":"4f3b0230.fa6864","name":"Claim a Device","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":1280,"wires":[["3312c571.c711f2"]]},{"id":"3312c571.c711f2","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n    \"serial\": flow.get('serial')\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1280,"wires":[["7dee02cc.ef576c"]]},{"id":"7dee02cc.ef576c","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Claim a Device","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\n\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/devices/claim\";\n\nmsg.method = \"post\";\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":1280,"wires":[["93fb8351.e599e8"]]},{"id":"93fb8351.e599e8","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":1280,"wires":[["40763a03.5cb0c4","4fb95e4e.e19af8"]]},{"id":"7ceb26ea.0776f8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/devices/claim","method":"post","swaggerDoc":"","x":240,"y":1320,"wires":[["7dee02cc.ef576c"]]},{"id":"40763a03.5cb0c4","type":"debug","z":"4f3b0230.fa6864","name":"Claim a Device","active":true,"console":"false","complete":"true","x":1120,"y":1320,"wires":[]},{"id":"4fb95e4e.e19af8","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1280,"wires":[]},{"id":"c850156.2048368","type":"inject","z":"4f3b0230.fa6864","name":"Update Attributes of a Device","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":180,"y":1380,"wires":[["96d19077.1fb6b8"]]},{"id":"96d19077.1fb6b8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n// Sample Data\nmsg.req.params.serial = flow.get('serial');\nmsg.payload = {\n  \"name\":\"My device 7\",\n  \"lat\":37.4180951010362,\n  \"lng\":-122.098531723022,\n  \"address\":\"1600 Pennsylvania Ave\",\n  \"tags\":\"testAPI anotherTag\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1380,"wires":[["32100c6a.d79dd4"]]},{"id":"32100c6a.d79dd4","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Update Attributes of a Device","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\nvar serial = msg.req.params.serial;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/devices/\"+serial;\nmsg.method = \"put\";\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1380,"wires":[["855693be.631b8"]]},{"id":"855693be.631b8","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":970,"y":1380,"wires":[["7711fc53.f4a04c","3aee6b2.2673594"]]},{"id":"1a2a5a92.55647d","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/devices/:serial","method":"put","swaggerDoc":"","x":243.3333282470703,"y":1425.0000448226929,"wires":[["32100c6a.d79dd4"]]},{"id":"7711fc53.f4a04c","type":"debug","z":"4f3b0230.fa6864","name":"Update Attributes of a Device","active":true,"console":"false","complete":"true","x":1070,"y":1420,"wires":[]},{"id":"3aee6b2.2673594","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1380,"wires":[]},{"id":"3680112d.4c6f06","type":"inject","z":"4f3b0230.fa6864","name":"Uplink Status of a Device","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":170,"y":1580,"wires":[["cb2bd50d.818e7"]]},{"id":"cb2bd50d.818e7","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nmsg.req.params.serial = flow.get('serial');\n\n// Sample Data\nmsg.payload = {\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":1580,"wires":[["2bf9c28f.0b8f26"]]},{"id":"2bf9c28f.0b8f26","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Uplink Status","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\nvar serial = msg.req.params.serial;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/devices/\"+serial+\"/uplink\";\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":1580,"wires":[["29920733.0fd648"]]},{"id":"29920733.0fd648","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":1580,"wires":[["7b64cc81.fb8f5c","9638d2df.e5d44"]]},{"id":"8665dcc1.9f1b68","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/devices/:serial/uplink","method":"get","swaggerDoc":"","x":260,"y":1620,"wires":[["2bf9c28f.0b8f26"]]},{"id":"7b64cc81.fb8f5c","type":"debug","z":"4f3b0230.fa6864","name":"Uplink Status","active":true,"console":"false","complete":"true","x":1120,"y":1620,"wires":[]},{"id":"9638d2df.e5d44","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1580,"wires":[]},{"id":"dd297126.5966f8","type":"comment","z":"4f3b0230.fa6864","name":"Devices","info":"","x":70,"y":1040,"wires":[]},{"id":"78186e3d.f2191","type":"comment","z":"4f3b0230.fa6864","name":"Firewall Rules (MR)","info":"","x":110,"y":1680,"wires":[]},{"id":"37a20a7d.4e3bde","type":"inject","z":"4f3b0230.fa6864","name":"List L3 Firewall Rules (MR Wireless)","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":200,"y":1720,"wires":[["e0c5b4e9.cdaa58"]]},{"id":"e0c5b4e9.cdaa58","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.serial = flow.get('serial');\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":1720,"wires":[["6eb13abe.6b773c"]]},{"id":"6eb13abe.6b773c","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List L3 Firewall Rules","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar ssidNum = msg.req.params.ssidNum;\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/ssids/\"+ssidNum+\"/l3FirewallRules\";\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":1720,"wires":[["4263bff1.2fe54"]]},{"id":"4263bff1.2fe54","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":1720,"wires":[["ba59b99b.7b2b78","1b8b96ec.b301e1"]]},{"id":"f37610ab.01989","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/ssids/:ssidNum/l3FirewallRules","method":"get","swaggerDoc":"","x":290,"y":1760,"wires":[["6eb13abe.6b773c"]]},{"id":"ba59b99b.7b2b78","type":"debug","z":"4f3b0230.fa6864","name":"List L3 Firewall Rules","active":true,"console":"false","complete":"payload","x":1160,"y":1760,"wires":[]},{"id":"1b8b96ec.b301e1","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":1720,"wires":[]},{"id":"abe7073d.54731","type":"inject","z":"4f3b0230.fa6864","name":"Update L3 Firewall Rules (MR Wireless)","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":210,"y":1840,"wires":[["22c25a5e.ceb64e"]]},{"id":"22c25a5e.ceb64e","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.serial = flow.get('serial');\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n\t\"rules\":[{\n\t\"comment\":\"API TEST from Node-RED\",\n\t\"policy\":\"deny\",\n\t\"protocol\":\"tcp\",\n\t\"destPort\":\"any\",\n\t\"destCidr\":\"192.168.1.0/24\"\n\t\n}],\n\t\"allowLanAccess\":true\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":1840,"wires":[["24cb2a94.5dc43e"]]},{"id":"24cb2a94.5dc43e","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Update the Attributes of an SSID","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar ssidNum = msg.req.params.ssidNum;\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/ssids/\"+ssidNum+\"/l3FirewallRules\";\nmsg.method = \"put\";\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":1840,"wires":[["1faba637.47619a"]]},{"id":"1faba637.47619a","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":1030,"y":1840,"wires":[["70cf50a.816f6b","101705d.fa87cfa"]]},{"id":"c2213268.964ed8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/ssids/:ssidNum/l3FirewallRules","method":"put","swaggerDoc":"","x":290,"y":1880,"wires":[["24cb2a94.5dc43e"]]},{"id":"70cf50a.816f6b","type":"debug","z":"4f3b0230.fa6864","name":"Update Attributes of an SSID","active":true,"console":"false","complete":"true","x":1120,"y":1880,"wires":[]},{"id":"101705d.fa87cfa","type":"http response","z":"4f3b0230.fa6864","name":"","x":1190,"y":1840,"wires":[]},{"id":"9f0b4664.fcb99","type":"inject","z":"4f3b0230.fa6864","name":"List Organizations","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":2000,"wires":[["9776e115.7b431"]]},{"id":"9776e115.7b431","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Organizations","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar orgId = msg.orgId;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\n\nmsg.url = \"https://dashboard.meraki.com/api/v0/organizations\";\nmsg.method = 'get';\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":2000,"wires":[["235d9552.ef3eb2"]]},{"id":"235d9552.ef3eb2","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"txt","url":"","tls":"","x":870,"y":2000,"wires":[["59719862.58841"]]},{"id":"15a0555f.dfc78b","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations","method":"get","swaggerDoc":"","x":180,"y":2040,"wires":[["9776e115.7b431"]]},{"id":"59719862.58841","type":"function","z":"4f3b0230.fa6864","name":"Large Int Helper","func":"const regex = /\"id\":(.*?)(?:,)/g;\nconst str = `{\"id\":351024,\"name\":\"Cisco Mini Demo 2\"},{\"id\":215332,\"name\":\"Cisco Mini Demo 1\"},`;\nlet m;\n\nwhile ((m = regex.exec(str)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n    }\n    \n    // The result can be accessed through the `m`-variable.\n    m.forEach((match, groupIndex) => {\n        console.log(`Found match, group ${groupIndex}: ${match}`);\n    });\n}\n\n\nmsg.payload = msg.payload.replace(/\"id\":(.*?)(?:,)/g,\"\\\"id\\\"\\:\\\"$1\\\"\\,\");\nconsole.log(\"new json with regex replace \",msg.payload);\nreturn msg","outputs":1,"noerr":0,"x":1080,"y":2000,"wires":[["aff23bc7.749d2"]]},{"id":"aff23bc7.749d2","type":"json","z":"4f3b0230.fa6864","name":"","x":1270,"y":2000,"wires":[["8489ce89.492a78","f8ece532.37a6b"]]},{"id":"8489ce89.492a78","type":"http response","z":"4f3b0230.fa6864","name":"","x":1410,"y":2000,"wires":[]},{"id":"f8ece532.37a6b","type":"debug","z":"4f3b0230.fa6864","name":"List Orgs JSON","active":true,"console":"false","complete":"true","x":1380,"y":2040,"wires":[]},{"id":"3158efaa.e217d","type":"inject","z":"4f3b0230.fa6864","name":"List License State","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":2120,"wires":[["bfcdd3d6.4faae8"]]},{"id":"bfcdd3d6.4faae8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2120,"wires":[["3c9f888d.37b4f"]]},{"id":"3c9f888d.37b4f","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List License State","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar orgId = msg.req.params.orgId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/organizations/\"+orgId+\"/licenseState\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":2120,"wires":[["87b86124.097ee8"]]},{"id":"87b86124.097ee8","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2120,"wires":[["228af3.8a52450e","2e03e50d.8c3772"]]},{"id":"1187657c.ea5beb","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations/:orgId/licenseState","method":"get","swaggerDoc":"","x":250,"y":2160,"wires":[["3c9f888d.37b4f"]]},{"id":"228af3.8a52450e","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2120,"wires":[]},{"id":"2e03e50d.8c3772","type":"debug","z":"4f3b0230.fa6864","name":"List License State","active":true,"console":"false","complete":"true","x":1110,"y":2160,"wires":[]},{"id":"a773a224.6d7ad8","type":"inject","z":"4f3b0230.fa6864","name":"List Inventory","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":2240,"wires":[["52dc135.92ad9ec"]]},{"id":"52dc135.92ad9ec","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2240,"wires":[["4dcf65d9.161aac"]]},{"id":"4dcf65d9.161aac","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Inventory","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar orgId = msg.req.params.orgId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/organizations/\"+orgId+\"/inventory\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":2240,"wires":[["af8c24c1.ce9b3"]]},{"id":"af8c24c1.ce9b3","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2240,"wires":[["ca13864a.09b1f8","47451af7.7b2934"]]},{"id":"592c6970.51b6c8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations/:orgId/inventory","method":"get","swaggerDoc":"","x":240,"y":2280,"wires":[["4dcf65d9.161aac"]]},{"id":"ca13864a.09b1f8","type":"debug","z":"4f3b0230.fa6864","name":"List Inventory","active":true,"console":"false","complete":"true","x":1120,"y":2280,"wires":[]},{"id":"47451af7.7b2934","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2240,"wires":[]},{"id":"e7039fc2.6037d8","type":"comment","z":"4f3b0230.fa6864","name":"Organizations","info":"","x":90,"y":1960,"wires":[]},{"id":"24265006.1d99a8","type":"inject","z":"4f3b0230.fa6864","name":"List Networks","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130,"y":2400,"wires":[["9cac1722.533ba8"]]},{"id":"9cac1722.533ba8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2400,"wires":[["7e296e8d.dae57"]]},{"id":"7e296e8d.dae57","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Networks","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar orgId = msg.req.params.orgId;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/organizations/\"+orgId+\"/networks\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":2400,"wires":[["11a9fa7c.2e6ba6"]]},{"id":"56b8fe30.9d34e8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/organizations/:orgId/networks","method":"get","swaggerDoc":"","x":240,"y":2440,"wires":[["7e296e8d.dae57"]]},{"id":"11a9fa7c.2e6ba6","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2400,"wires":[["c2861e6b.5b9818","f0d3f86b.eea51"]]},{"id":"c2861e6b.5b9818","type":"debug","z":"4f3b0230.fa6864","name":"List Nets","active":true,"console":"false","complete":"payload","x":1140,"y":2440,"wires":[]},{"id":"f0d3f86b.eea51","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2400,"wires":[]},{"id":"e6dbe59e.373648","type":"inject","z":"4f3b0230.fa6864","name":"Create a Network","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":2520,"wires":[["ac075be2.25bc18"]]},{"id":"ac075be2.25bc18","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.orgId = flow.get('orgId');\n\n// Sample Data\nmsg.payload = {\n    \"name\": \"API Test - Node-RED - \"+ (new Date().getMilliseconds()),\n    \"timeZone\": \"Europe/Amsterdam\",\n    \"tags\": \"APItest\",\n    \"type\": \"wireless\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2520,"wires":[["535187fe.7f0028"]]},{"id":"535187fe.7f0028","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Create a Network","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar orgId = msg.req.params.orgId;\nvar shard = flow.get('shard');\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/organizations/\"+orgId+\"/networks\";\nmsg.method = 'post';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":2520,"wires":[["95dc35a0.ac18d"]]},{"id":"95dc35a0.ac18d","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2520,"wires":[["59479188.83397","d3274bbc.07c7d8"]]},{"id":"412d9d7f.91c4f4","type":"http in","z":"4f3b0230.fa6864","name":"","url":"meraki/api/organizations/:orgId/networks","method":"post","swaggerDoc":"","x":240,"y":2560,"wires":[["535187fe.7f0028"]]},{"id":"59479188.83397","type":"debug","z":"4f3b0230.fa6864","name":"Create a Network","active":true,"console":"false","complete":"payload","x":1110,"y":2560,"wires":[]},{"id":"d3274bbc.07c7d8","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2520,"wires":[]},{"id":"3c64fd12.b4a9a2","type":"inject","z":"4f3b0230.fa6864","name":"Traffic Analysis","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":2760,"wires":[["878b1c93.09fdc"]]},{"id":"878b1c93.09fdc","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2760,"wires":[["b3f8545b.e97978"]]},{"id":"b3f8545b.e97978","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Traffic Analysis","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/traffic?timespan=2592000\";\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":2760,"wires":[["856334a1.986df"]]},{"id":"856334a1.986df","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2760,"wires":[["ac323e88.eab44","98b442ef.fd1488"]]},{"id":"ac323e88.eab44","type":"debug","z":"4f3b0230.fa6864","name":"Traffic Analysis","active":true,"console":"false","complete":"payload","x":1120,"y":2800,"wires":[]},{"id":"98b442ef.fd1488","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2760,"wires":[]},{"id":"ba95ad36.dc0d","type":"inject","z":"4f3b0230.fa6864","name":"Delete a Network","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":2620,"wires":[["9a912fc6.8d0858"]]},{"id":"9a912fc6.8d0858","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId_delete');\n\n// Sample Data\nmsg.payload = {\n    \"name\": \"API Test - Node-RED - \"+ (new Date().getMilliseconds()),\n    \"timeZone\": \"Europe/Amsterdam\",\n    \"tags\": \"APItest\",\n    \"type\": \"wireless\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2620,"wires":[["776d5b2c.3a4fe4"]]},{"id":"776d5b2c.3a4fe4","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Delete a Network","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId;\nmsg.method = 'delete';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":2620,"wires":[["4170d6ba.114a98"]]},{"id":"4170d6ba.114a98","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2620,"wires":[["12420d57.f22753","d6ccada4.ada3d"]]},{"id":"3414f612.63e4da","type":"http in","z":"4f3b0230.fa6864","name":"","url":"meraki/api/networks/:netId","method":"delete","swaggerDoc":"","x":200,"y":2660,"wires":[["776d5b2c.3a4fe4"]]},{"id":"12420d57.f22753","type":"debug","z":"4f3b0230.fa6864","name":"Delete a Network","active":true,"console":"false","complete":"true","x":1110,"y":2660,"wires":[]},{"id":"d6ccada4.ada3d","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2620,"wires":[]},{"id":"f105c450.18857","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/traffic?timespan=2592000","method":"get","upload":false,"swaggerDoc":"","x":260,"y":2820,"wires":[["878b1c93.09fdc","e640f89e.987d48"]]},{"id":"e640f89e.987d48","type":"debug","z":"4f3b0230.fa6864","name":"traffic analysis - api endpoint","active":true,"console":"false","complete":"payload","x":640,"y":2800,"wires":[]},{"id":"bec5107a.a31438","type":"comment","z":"4f3b0230.fa6864","name":"Networks","info":"","x":90,"y":2360,"wires":[]},{"id":"d7764e2.6c67a3","type":"inject","z":"4f3b0230.fa6864","name":"List SSIDs of a Network","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":2940,"wires":[["77b2686.6121218"]]},{"id":"77b2686.6121218","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":2940,"wires":[["ab6bc838.f975c8"]]},{"id":"ab6bc838.f975c8","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List SSIDs of a Network","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/ssids\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":2940,"wires":[["643e588e.dfaf08"]]},{"id":"643e588e.dfaf08","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":2940,"wires":[["b90893e4.ad146","e01076f8.92b64"]]},{"id":"d3c5da0b.9d6c6","type":"http in","z":"4f3b0230.fa6864","name":"[get] /meraki/api/networks/:netId/ssids","url":"/meraki/api/networks/:netId/ssids","method":"get","swaggerDoc":"","x":210,"y":2980,"wires":[["ab6bc838.f975c8","fb48ea20.6fc568"]]},{"id":"b90893e4.ad146","type":"debug","z":"4f3b0230.fa6864","name":"List SSIDs","active":true,"console":"false","complete":"true","x":1130,"y":2980,"wires":[]},{"id":"e01076f8.92b64","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":2940,"wires":[]},{"id":"76a3c93a.b276f","type":"inject","z":"4f3b0230.fa6864","name":"Update the Attributes of an SSID","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":190,"y":3080,"wires":[["19cc669b.8d5121"]]},{"id":"19cc669b.8d5121","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nmsg.req.params.ssidNum = 0 || global.get('ssidNum');\n\n// Sample data\nmsg.payload = {\n  \"enabled\":false,\n}\n/*\nmsg.payload = {\n  \"name\":\"new SSID name\",\n  \"enabled\":true,\n  \"authMode\":\"psk\",\n  \"encryptionMode\":\"wpa\",\n  \"psk\":\"abcd1234\",\n  \"splashPage\":\"Click-through splash page\",\n  \"perClientBandwidthLimitUp\":0,\n  \"perClientBandwidthLimitDown\":0,\n  \"ssidAdminAccessible\":false,\n  \"ipAssignmentMode\":\"Bridge mode\",\n  \"walledGardenEnabled\":true,\n  \"walledGardenRanges\":\"192.168.1.1/24 192.168.37.10/32\"\n};\n*/\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":3079.9999866485596,"wires":[["bfcf01da.b6e708"]]},{"id":"bfcf01da.b6e708","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Update the Attributes of an SSID","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = flow.get('netId');\nvar shard = flow.get('shard');\nvar ssidNum = msg.req.params.ssidNum;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/ssids/\"+ssidNum;\nmsg.method = \"put\";\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":3080,"wires":[["d8422863.c1df","ba62e9ea.7dc1c"]]},{"id":"d8422863.c1df","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":3080,"wires":[["84b74b0d.01bc88","b884bb73.7bbfa8"]]},{"id":"8a3ed280.5a5e8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/ssids/:ssidNum","method":"put","swaggerDoc":"","x":240,"y":3120,"wires":[["bfcf01da.b6e708","50607541.7b1684"]]},{"id":"84b74b0d.01bc88","type":"debug","z":"4f3b0230.fa6864","name":"Update Attributes of an SSID","active":true,"console":"false","complete":"true","x":1080,"y":3120,"wires":[]},{"id":"b884bb73.7bbfa8","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":3080,"wires":[]},{"id":"ba62e9ea.7dc1c","type":"debug","z":"4f3b0230.fa6864","name":"Update Attributes of an SSID - request","active":true,"console":"false","complete":"true","x":1049,"y":3167,"wires":[]},{"id":"50607541.7b1684","type":"debug","z":"4f3b0230.fa6864","name":"Update Attributes of an SSID - endpoint","active":true,"console":"false","complete":"true","x":623,"y":3164,"wires":[]},{"id":"fb48ea20.6fc568","type":"debug","z":"4f3b0230.fa6864","name":"list org request","active":true,"console":"false","complete":"true","x":513.5,"y":2980,"wires":[]},{"id":"d1a8e5e.4723e98","type":"comment","z":"4f3b0230.fa6864","name":"Traffic Analysis","info":"","x":110,"y":2720,"wires":[]},{"id":"e41a46ef.94271","type":"comment","z":"4f3b0230.fa6864","name":"SSIDs","info":"","x":80,"y":2900,"wires":[]},{"id":"a28e034d.6f0a6","type":"inject","z":"4f3b0230.fa6864","name":"List Switch Ports","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":3300,"wires":[["469f32df.23976c"]]},{"id":"469f32df.23976c","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.serial = flow.get('serial');\n\n// Sample Data\nmsg.payload = {\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":3300,"wires":[["fe662c04.49db2"]]},{"id":"fe662c04.49db2","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Switch Ports","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar serial = msg.req.params.serial;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/devices/\"+serial+\"/switchPorts\";\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":3300,"wires":[["69d1f4b1.f4979c"]]},{"id":"69d1f4b1.f4979c","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":910,"y":3300,"wires":[["758376d8.c1e6e","f0976335.b6a6c8"]]},{"id":"7900e1c8.2c336","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/devices/:serial/switchPorts","method":"get","swaggerDoc":"","x":230,"y":3340,"wires":[["fe662c04.49db2","758376d8.c1e6e"]]},{"id":"758376d8.c1e6e","type":"debug","z":"4f3b0230.fa6864","name":"List Switch Ports","active":true,"console":"false","complete":"true","x":1030,"y":3340,"wires":[]},{"id":"f0976335.b6a6c8","type":"http response","z":"4f3b0230.fa6864","name":"","x":1070,"y":3300,"wires":[]},{"id":"edffd06c.e8da2","type":"inject","z":"4f3b0230.fa6864","name":"Return a Switch Port","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":3400,"wires":[["23f0421e.0f6a8e"]]},{"id":"23f0421e.0f6a8e","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.serial = flow.get('serial');\nmsg.req.params.portNum = flow.get('portNum');\n\n// Sample Data\nmsg.payload = {\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":3400,"wires":[["7ddb92be.73d904"]]},{"id":"7ddb92be.73d904","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Return a Switch Port","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar serial = msg.req.params.serial;\nvar portNum = msg.req.params.portNum;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/devices/\"+serial+\"/switchPorts/\"+portNum;\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":3400,"wires":[["679287cf.1657c8"]]},{"id":"679287cf.1657c8","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":910,"y":3400,"wires":[["dd4dff08.a22de","7ebdceea.0c9b"]]},{"id":"4bb22099.e3ad98","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/devices/:serial/switchPorts/:portNum","method":"get","swaggerDoc":"","x":260,"y":3440,"wires":[["7ddb92be.73d904"]]},{"id":"dd4dff08.a22de","type":"debug","z":"4f3b0230.fa6864","name":"Return a Switch Port","active":true,"console":"false","complete":"true","x":1020,"y":3440,"wires":[]},{"id":"7ebdceea.0c9b","type":"http response","z":"4f3b0230.fa6864","name":"","x":1070,"y":3400,"wires":[]},{"id":"15e0b852.700d5","type":"inject","z":"4f3b0230.fa6864","name":"Update a Switch Port","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":3500,"wires":[["ede55541.28cdd8"]]},{"id":"ede55541.28cdd8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.serial = flow.get('serial');\nmsg.req.params.portNum = flow.get('portNum');\n\n// Sample Data\nmsg.payload = {\n  \"name\": \"test from Postman\",\n  \"tags\": \"API\",\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"trunk\",\n  \"vlan\": 1,\n  \"voiceVlan\": null,\n  \"allowedVlans\": \"all\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"accessPolicyNumber\": null\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":3500,"wires":[["b15afb7f.ae84e8"]]},{"id":"b15afb7f.ae84e8","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Return a Switch Port","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar serial = msg.req.params.serial;\nvar portNum = msg.req.params.portNum;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/devices/\"+serial+\"/switchPorts/\"+portNum;\nmsg.method = \"put\";\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":3500,"wires":[["a464219b.8e756"]]},{"id":"a464219b.8e756","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":910,"y":3500,"wires":[["df7664aa.cd98b8","2e791c80.3bb284"]]},{"id":"34d1bef5.81f22a","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/devices/:serial/switchPorts/:portNum","method":"put","swaggerDoc":"","x":260,"y":3540,"wires":[["b15afb7f.ae84e8"]]},{"id":"df7664aa.cd98b8","type":"debug","z":"4f3b0230.fa6864","name":"Return a Switch Port","active":true,"console":"false","complete":"true","x":1020,"y":3540,"wires":[]},{"id":"2e791c80.3bb284","type":"http response","z":"4f3b0230.fa6864","name":"","x":1070,"y":3500,"wires":[]},{"id":"9c738fb7.a67d58","type":"comment","z":"4f3b0230.fa6864","name":"Switch Ports","info":"","x":90,"y":3240,"wires":[]},{"id":"ad9dee6c.0b89a8","type":"inject","z":"4f3b0230.fa6864","name":"List VLANs of a Network","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":170,"y":3700,"wires":[["ebaf2b55.1e2b2"]]},{"id":"ebaf2b55.1e2b2","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":3700,"wires":[["f4afb989.f31b88"]]},{"id":"f4afb989.f31b88","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List VLANs of a Network","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/vlans\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":3700,"wires":[["21336367.cdedfc"]]},{"id":"21336367.cdedfc","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":3700,"wires":[["44572d70.b50ff4","dfd15f00.615d8"]]},{"id":"e71b0dea.cf317","type":"http in","z":"4f3b0230.fa6864","name":"[get] /meraki/api/networks/:netId/vlans","url":"/meraki/api/networks/:netId/vlans","method":"get","swaggerDoc":"","x":210,"y":3740,"wires":[["f4afb989.f31b88"]]},{"id":"44572d70.b50ff4","type":"debug","z":"4f3b0230.fa6864","name":"List VLANs","active":true,"console":"false","complete":"true","x":1130,"y":3740,"wires":[]},{"id":"dfd15f00.615d8","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":3700,"wires":[]},{"id":"216d7fa3.0233f8","type":"inject","z":"4f3b0230.fa6864","name":"Return a VLAN of a Network","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":180,"y":3800,"wires":[["c4214914.67f588"]]},{"id":"c4214914.67f588","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nmsg.req.params.vlanId = flow.get('vlanId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":3800,"wires":[["7164138f.6bea2c"]]},{"id":"7164138f.6bea2c","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Return a VLAN of a Network","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = msg.req.params.netId;\nvar vlanId = msg.req.params.vlanId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/vlans/\"+vlanId;\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":680,"y":3800,"wires":[["20fdb9cb.545dde"]]},{"id":"20fdb9cb.545dde","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":3800,"wires":[["374c43c6.1958cc","a45a1386.68a21"]]},{"id":"6a09dfd1.0455e8","type":"http in","z":"4f3b0230.fa6864","name":"[get] /meraki/api/networks/:netId/vlans/:vlanId","url":"/meraki/api/networks/:netId/vlans/:vlanId","method":"get","swaggerDoc":"","x":230,"y":3840,"wires":[["7164138f.6bea2c"]]},{"id":"374c43c6.1958cc","type":"debug","z":"4f3b0230.fa6864","name":"Return a VLAN","active":true,"console":"false","complete":"true","x":1140,"y":3840,"wires":[]},{"id":"a45a1386.68a21","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":3800,"wires":[]},{"id":"53ca8b39.966cbc","type":"comment","z":"4f3b0230.fa6864","name":"VLANs","info":"","x":70,"y":3640,"wires":[]},{"id":"f613242e.6e7f9","type":"inject","z":"4f3b0230.fa6864","name":"List Static Routes","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":4000,"wires":[["ebf62774.e60068"]]},{"id":"ebf62774.e60068","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":4000,"wires":[["cdc95ef9.a0c6a"]]},{"id":"cdc95ef9.a0c6a","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List Static Routes","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/staticRoutes\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":4000,"wires":[["26e1cafe.97403e"]]},{"id":"26e1cafe.97403e","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":980,"y":4000,"wires":[["2d820a06.ae663e","b6a622b6.e301c8"]]},{"id":"da79dcb8.3a11c8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/staticRoutes","method":"get","swaggerDoc":"","x":220,"y":4040,"wires":[["cdc95ef9.a0c6a"]]},{"id":"2d820a06.ae663e","type":"debug","z":"4f3b0230.fa6864","name":"List Static Routes","active":true,"console":"false","complete":"true","x":1100,"y":4040,"wires":[]},{"id":"b6a622b6.e301c8","type":"http response","z":"4f3b0230.fa6864","name":"","x":1140,"y":4000,"wires":[]},{"id":"931e0b64.6039a8","type":"inject","z":"4f3b0230.fa6864","name":"Return a Static Routes","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":4100,"wires":[["36f9a43e.0697d4"]]},{"id":"36f9a43e.0697d4","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nmsg.req.params.srId = flow.get('srId');\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":4100,"wires":[["6081e5e8.ce95a4"]]},{"id":"6081e5e8.ce95a4","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Return a Static Route","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = msg.req.params.netId;\nvar srId = msg.req.params.srId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/staticRoutes/\"+srId;\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":4100,"wires":[["48c6d219.ae7724"]]},{"id":"48c6d219.ae7724","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":980,"y":4100,"wires":[["bac5f1b1.2296a","a3e34b2.d4f3438"]]},{"id":"d4828897.995fc8","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/staticRoutes/srId","method":"get","swaggerDoc":"","x":240,"y":4140,"wires":[["6081e5e8.ce95a4"]]},{"id":"bac5f1b1.2296a","type":"debug","z":"4f3b0230.fa6864","name":"Return a Static Routes","active":true,"console":"false","complete":"true","x":1110,"y":4140,"wires":[]},{"id":"a3e34b2.d4f3438","type":"http response","z":"4f3b0230.fa6864","name":"","x":1140,"y":4100,"wires":[]},{"id":"6a467b12.97d08c","type":"inject","z":"4f3b0230.fa6864","name":"Update a Static Routes","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":4200,"wires":[["3a838e99.908baa"]]},{"id":"3a838e99.908baa","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nmsg.req.params.srId = flow.get('srId');\n\n// Sample Data\nmsg.payload ={\n \t\"name\":\"test API route\",\n\t\"subnet\":\"192.168.123.0/24\",\n\t\"gatewayIp\":\"10.0.0.1\",\n\t\"enabled\":\"true\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":4200,"wires":[["3911c8ee.7894e"]]},{"id":"3911c8ee.7894e","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Update a Static Route","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\nvar srId = msg.req.params.srId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/staticRoutes/\"+srId;\nmsg.method = 'put';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":4200,"wires":[["34391867.79e8d8"]]},{"id":"34391867.79e8d8","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":980,"y":4200,"wires":[["401a2da.ddb58d4","310752f4.42725e"]]},{"id":"65ca30ea.eb5998","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/staticRoutes/srId","method":"put","swaggerDoc":"","x":240,"y":4240,"wires":[["3911c8ee.7894e"]]},{"id":"401a2da.ddb58d4","type":"debug","z":"4f3b0230.fa6864","name":"Update a Static Routes","active":true,"console":"false","complete":"true","x":1120,"y":4240,"wires":[]},{"id":"310752f4.42725e","type":"http response","z":"4f3b0230.fa6864","name":"","x":1140,"y":4200,"wires":[]},{"id":"8b411143.03b79","type":"inject","z":"4f3b0230.fa6864","name":"Add a Static Routes","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":4300,"wires":[["124acdaf.fb69a2"]]},{"id":"124acdaf.fb69a2","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload ={\n \t\"name\":\"test API route\",\n\t\"subnet\":\"192.168.123.0/24\",\n\t\"gatewayIp\":\"10.0.0.1\",\n\t\"enabled\":\"true\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":4300,"wires":[["e503d24a.db0b18"]]},{"id":"e503d24a.db0b18","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Add a Static Route","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/staticRoutes/\";\nmsg.method = 'post';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":4300,"wires":[["aaf9b327.6af388"]]},{"id":"aaf9b327.6af388","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":980,"y":4300,"wires":[["761b1182.dc40d8","22e40b82.d71dc4"]]},{"id":"3d516fd6.54cec","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/staticRoutes/srId","method":"post","swaggerDoc":"","x":240,"y":4340,"wires":[["e503d24a.db0b18"]]},{"id":"761b1182.dc40d8","type":"debug","z":"4f3b0230.fa6864","name":"Add a Static Routes","active":true,"console":"false","complete":"true","x":1110,"y":4340,"wires":[]},{"id":"22e40b82.d71dc4","type":"http response","z":"4f3b0230.fa6864","name":"","x":1140,"y":4300,"wires":[]},{"id":"ed68dd0e.16fc","type":"inject","z":"4f3b0230.fa6864","name":"Delete a Static Routes","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":150,"y":4400,"wires":[["ad8576b.d77d188"]]},{"id":"ad8576b.d77d188","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = global.get('netId');\nmsg.req.params.srId = global.get('srId');\n\n// Sample Data\nmsg.payload ={\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":4400,"wires":[["a4a822bf.f6c16"]]},{"id":"a4a822bf.f6c16","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - Delete a Static Route","func":"// Set Variables\nvar apiKey = global.get('apiKey');\nvar shard = global.get('shard');\nvar netId = msg.req.params.netId;\nvar srId = msg.req.params.srId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/staticRoutes/\"+srId;\nmsg.method = 'delete';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":4400,"wires":[["21c237c9.afb158"]]},{"id":"21c237c9.afb158","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":980,"y":4400,"wires":[["a10ff164.55cae8","3734417d.c0ae06"]]},{"id":"dc886520.83967","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/staticRoutes/srId","method":"delete","swaggerDoc":"","x":250,"y":4440,"wires":[["a4a822bf.f6c16"]]},{"id":"a10ff164.55cae8","type":"debug","z":"4f3b0230.fa6864","name":"Delete a Static Routes","active":true,"console":"false","complete":"true","x":1110,"y":4440,"wires":[]},{"id":"3734417d.c0ae06","type":"http response","z":"4f3b0230.fa6864","name":"","x":1140,"y":4400,"wires":[]},{"id":"6c45125.8f674ec","type":"comment","z":"4f3b0230.fa6864","name":"Static Routes","info":"","x":90,"y":3940,"wires":[]},{"id":"1b05f853.2a3bf","type":"inject","z":"4f3b0230.fa6864","name":"List VPN Settings","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":4560,"wires":[["881cdd58.aa0ee8"]]},{"id":"881cdd58.aa0ee8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":4560,"wires":[["94259bd9.2bbfe"]]},{"id":"94259bd9.2bbfe","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List VPN Settings","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar netId = msg.req.params.netId;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://dashboard.meraki.com/api/v0/networks/\"+netId+\"/siteToSiteVpn\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":4560,"wires":[["964101a8.df79e"]]},{"id":"964101a8.df79e","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":4560,"wires":[["7a2b3098.64621","191c72c2.742d3d"]]},{"id":"c7bdc931.8a0a88","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/siteToSiteVpn","method":"get","swaggerDoc":"","x":240,"y":4600,"wires":[["94259bd9.2bbfe"]]},{"id":"7a2b3098.64621","type":"debug","z":"4f3b0230.fa6864","name":"VPN Settings","active":true,"console":"false","complete":"true","x":1150,"y":4600,"wires":[]},{"id":"191c72c2.742d3d","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":4560,"wires":[]},{"id":"4a3843c6.50214c","type":"inject","z":"4f3b0230.fa6864","name":"Update VPN Settings","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":160,"y":4680,"wires":[["91397fce.a258a8"]]},{"id":"91397fce.a258a8","type":"function","z":"4f3b0230.fa6864","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n\"mode\":\"spoke\",\n\"hubs\":[{\n\t\"hubId\":\"N_1234\",\n\t\"useDefaultRoute\":true\n\t},\n\t{\n\t\t\"hubId\":\"N_2345\",\"useDefaultRoute\":false\n\t}],\n\t\"subnets\":[{\n\t\t\"localSubnet\":\"192.168.1.0/24\",\n\t\t\"useVpn\":true\n\t},\n\t{\"localSubnet\":\"192.168.128.0/24\",\n\t\"useVpn\":true\n\t\t\n\t}]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":4680,"wires":[["a4e7657a.afd858"]]},{"id":"a4e7657a.afd858","type":"function","z":"4f3b0230.fa6864","name":"Meraki API - List VPN Settings","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://\"+shard+\".meraki.com/api/v0/networks/\"+netId+\"/siteToSiteVpn\";\nmsg.method = 'get';\n\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":4680,"wires":[["66572497.d81dec"]]},{"id":"66572497.d81dec","type":"http request","z":"4f3b0230.fa6864","name":"","method":"use","ret":"obj","url":"","tls":"","x":990,"y":4680,"wires":[["d3e4cc5a.912d3","6e0d62f0.f989ac"]]},{"id":"85e83fbd.abc99","type":"http in","z":"4f3b0230.fa6864","name":"","url":"/meraki/api/networks/:netId/siteToSiteVpn","method":"put","swaggerDoc":"","x":240,"y":4720,"wires":[["a4e7657a.afd858"]]},{"id":"d3e4cc5a.912d3","type":"debug","z":"4f3b0230.fa6864","name":"VPN Settings","active":true,"console":"false","complete":"true","x":1150,"y":4720,"wires":[]},{"id":"6e0d62f0.f989ac","type":"http response","z":"4f3b0230.fa6864","name":"","x":1150,"y":4680,"wires":[]},{"id":"ca63f9a7.640978","type":"comment","z":"4f3b0230.fa6864","name":"VPN","info":"","x":80,"y":4500,"wires":[]},{"id":"1aef23fc.ece43c","type":"link out","z":"c7cddcab.ad2a2","name":"API Proxy Events","links":["92519c3b.397"],"x":1055,"y":440,"wires":[]},{"id":"155cb29d.1a9675","type":"comment","z":"c7cddcab.ad2a2","name":"API Event Log","info":"Use this Link node to connect to other flows.","x":1090,"y":400,"wires":[]},{"id":"172fb58d.0234e2","type":"comment","z":"c7cddcab.ad2a2","name":"Event Workflows","info":"","x":100,"y":640,"wires":[]},{"id":"92519c3b.397","type":"link in","z":"c7cddcab.ad2a2","name":"","links":["1aef23fc.ece43c"],"x":75,"y":680,"wires":[["8769f03.34a061","37a9c65d.14c4ea"]]},{"id":"8769f03.34a061","type":"debug","z":"c7cddcab.ad2a2","name":"API Event Received","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":230,"y":720,"wires":[]},{"id":"37a9c65d.14c4ea","type":"function","z":"c7cddcab.ad2a2","name":"Format Event Message","func":"var response = msg.payload;\n\nif(msg.payload.hasOwnProperty('errors')){\n    response = msg.payload['errors'][0];\n}\n\nmsg.payload = {\n    \"method\": msg.req.method,\n    \"url\": msg.req.url,\n    \"statusCode\": msg.statusCode,\n    \"response\": response\n}\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":680,"wires":[["8c676d73.328eb","347e8d46.0d9ba2"]]},{"id":"8c676d73.328eb","type":"debug","z":"c7cddcab.ad2a2","name":"Format Event Message","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":510,"y":720,"wires":[]},{"id":"347e8d46.0d9ba2","type":"switch","z":"c7cddcab.ad2a2","name":"Filter [get] requests","property":"payload.method","propertyType":"msg","rules":[{"t":"neq","v":"GET","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":490,"y":680,"wires":[["c5b456ab.5febb","fc1279ec.096c3"]]},{"id":"c5b456ab.5febb","type":"debug","z":"c7cddcab.ad2a2","name":"API Change Event Received","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":820,"y":720,"wires":[]},{"id":"fc1279ec.096c3","type":"link out","z":"c7cddcab.ad2a2","name":"API Proxy Change Event","links":["6ab342ef.d3d784"],"x":715,"y":680,"wires":[]},{"id":"44ccd304.f13d44","type":"comment","z":"c7cddcab.ad2a2","name":"Send Event to Messaging Service","info":"This is where you can link change events to a messaging service (i.e. mail, Spark, syslog, etc)","x":890,"y":680,"wires":[]},{"id":"6ab342ef.d3d784","type":"link in","z":"64b489a9.d87f58","name":"","links":["fc1279ec.096c3"],"x":255,"y":660,"wires":[["79021728.16bcb8","2f651304.cbaaac"]]},{"id":"2af2d143.cbc54e","type":"link out","z":"64b489a9.d87f58","name":"","links":["71931cb3.da711c"],"x":1015,"y":660,"wires":[]},{"id":"79021728.16bcb8","type":"function","z":"64b489a9.d87f58","name":"Format Message","func":"// Write a message with Markdown and include the Google Maps encoded URL.\n// http://maps.google.com/maps?t=h&q=loc:35.487895,-87.332414&z=17 \nvar device = msg.payload;\nmsg.payload = \"- Network Change Event <br/>\" +\n    \" **Method**: \" + msg.payload.method+\"<br/>\" +\n    \" **URL**: \" + msg.payload.url + \"<br/>\" +\n    \" **Status Code**: \" + msg.payload.statusCode + \"<br/>\" +\n    \"**Response**: \" + JSON.stringify(msg.payload.response);\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":660,"wires":[["2af2d143.cbc54e"]]},{"id":"2f651304.cbaaac","type":"debug","z":"64b489a9.d87f58","name":"API Proxy Change Events","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":410,"y":700,"wires":[]},{"id":"a3b57d5c.7a6ca","type":"credentials","z":"64b489a9.d87f58","name":"Access Token and Spark Room - UPDATE","props":[{"value":"accessToken","type":"msg"},{"value":"roomId","type":"msg"}],"x":280,"y":140,"wires":[["14482890.621507"]]},{"id":"983deac.6d62c18","type":"rbe","z":"64b489a9.d87f58","name":"Only Display New Clients","func":"rbe","gap":"","start":"","inout":"out","property":"payload","x":650,"y":540,"wires":[["4d9f7d50.e4632c"]]},{"id":"3a165e3e.4b5b62","type":"delay","z":"64b489a9.d87f58","name":"Demo Rate Limit 1 per 5s","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":410,"y":480,"wires":[["6cf21f96.e9e32"]]},{"id":"6cf21f96.e9e32","type":"rbe","z":"64b489a9.d87f58","name":"Only Display New Clients","func":"rbe","gap":"","start":"","inout":"out","property":"payload","x":650,"y":480,"wires":[["39f0c9cc.ff896e"]]},{"id":"5168e3c7.2aad6c","type":"delay","z":"64b489a9.d87f58","name":"Demo Rate Limit 1 per 5s","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":410,"y":540,"wires":[["983deac.6d62c18"]]},{"id":"e8286df9.5dc1a","type":"http in","z":"fa89d9fb.342448","name":"","url":"/hellohtml","method":"get","upload":false,"swaggerDoc":"","x":180,"y":340,"wires":[["5f42b9af.973c98"]]},{"id":"beff71fc.8b0f2","type":"http response","z":"fa89d9fb.342448","name":"","statusCode":"","headers":{},"x":690,"y":340,"wires":[]},{"id":"5f42b9af.973c98","type":"template","z":"fa89d9fb.342448","name":"<h2>Hello World!</h2>","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<h2>Hello World!</h2>\n","output":"str","x":430,"y":340,"wires":[["beff71fc.8b0f2"]]},{"id":"c904d721.34ea38","type":"http in","z":"fa89d9fb.342448","name":"","url":"/hellojs","method":"get","upload":false,"swaggerDoc":"","x":170,"y":420,"wires":[["bd08c809.e63778"]]},{"id":"e871560f.73661","type":"http response","z":"fa89d9fb.342448","name":"","statusCode":"","headers":{},"x":690,"y":420,"wires":[]},{"id":"bd08c809.e63778","type":"function","z":"fa89d9fb.342448","name":"msg.payload = \"Hello World\";","func":"msg.payload = \"Hello World\";\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":420,"wires":[["e871560f.73661"]]},{"id":"2a0bcd72.0c53c2","type":"inject","z":"fa89d9fb.342448","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":120,"wires":[["adb3c04d.a453e"]]},{"id":"adb3c04d.a453e","type":"debug","z":"fa89d9fb.342448","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":390,"y":120,"wires":[]},{"id":"555d3aec.012a9c","type":"switch","z":"fa89d9fb.342448","name":"","property":"payload","propertyType":"msg","rules":[{"t":"true"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":390,"y":200,"wires":[["bff202de.31415"],["e7fbcea5.ead43"]]},{"id":"fee61a39.a62878","type":"inject","z":"fa89d9fb.342448","name":"True","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":180,"wires":[["555d3aec.012a9c"]]},{"id":"2c1aefa3.c6f84","type":"inject","z":"fa89d9fb.342448","name":"False","topic":"","payload":"false","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":220,"wires":[["555d3aec.012a9c"]]},{"id":"bff202de.31415","type":"debug","z":"fa89d9fb.342448","name":"Message was True","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":570,"y":180,"wires":[]},{"id":"e7fbcea5.ead43","type":"debug","z":"fa89d9fb.342448","name":"Message was False","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":560,"y":220,"wires":[]},{"id":"c2019f2.b8132e","type":"http in","z":"fa89d9fb.342448","name":"","url":"/hellopost","method":"post","upload":false,"swaggerDoc":"","x":180,"y":480,"wires":[["fb575460.05e218","34999137.23d50e"]]},{"id":"fb575460.05e218","type":"http response","z":"fa89d9fb.342448","name":"","statusCode":"","headers":{},"x":370,"y":480,"wires":[]},{"id":"34999137.23d50e","type":"debug","z":"fa89d9fb.342448","name":"Hello Post","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":390,"y":520,"wires":[]},{"id":"c8e22bcc.edf0c","type":"comment","z":"fa89d9fb.342448","name":"Basics","info":"","x":100,"y":60,"wires":[]},{"id":"b4fe96db.15ba6","type":"comment","z":"fa89d9fb.342448","name":"API ","info":"","x":110,"y":300,"wires":[]},{"id":"1c3339d1.2c333e","type":"http request","z":"fa89d9fb.342448","name":"Request JSON","method":"GET","ret":"obj","url":"","tls":"","x":700,"y":620,"wires":[["6b2a6478.1b2704"]]},{"id":"a3c08d17.49518","type":"inject","z":"fa89d9fb.342448","name":"Date from API","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":620,"wires":[["d8304710.546668"]]},{"id":"d8304710.546668","type":"function","z":"fa89d9fb.342448","name":"msg.url = \"http://date.jsontest.com/\";","func":"msg.url = \"http://date.jsontest.com/\";\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":620,"wires":[["1c3339d1.2c333e"]]},{"id":"6b2a6478.1b2704","type":"debug","z":"fa89d9fb.342448","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":890,"y":620,"wires":[]},{"id":"bb3c79b8.e7f908","type":"inject","z":"fa89d9fb.342448","name":"IP from API","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":680,"wires":[["2c729691.16ac4a"]]},{"id":"2c729691.16ac4a","type":"function","z":"fa89d9fb.342448","name":"msg.url = \"http://ip.jsontest.com/\";","func":"msg.url = \"http://ip.jsontest.com/\";\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":680,"wires":[["50f43d9c.43a11c"]]},{"id":"50f43d9c.43a11c","type":"http request","z":"fa89d9fb.342448","name":"Request JSON","method":"GET","ret":"obj","url":"","tls":"","x":700,"y":680,"wires":[["ffba8791.802158"]]},{"id":"ffba8791.802158","type":"debug","z":"fa89d9fb.342448","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":870,"y":680,"wires":[]},{"id":"699ac014.50634","type":"http in","z":"fa89d9fb.342448","name":"","url":"/mysite","method":"get","swaggerDoc":"","x":130,"y":960,"wires":[["4072d9d5.0d4ce"]]},{"id":"45ddad96.58c1cc","type":"http in","z":"fa89d9fb.342448","name":"","url":"/mysitepost","method":"post","swaggerDoc":"","x":150,"y":1160,"wires":[["2ca1e22c.9dd076","8242cda9.334078"]]},{"id":"4072d9d5.0d4ce","type":"function","z":"fa89d9fb.342448","name":"msg.url = \"mysitepost\";","func":"msg.url = \"mysitepost\";\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":960,"wires":[["909dabb7.ce0d1"]]},{"id":"2ca1e22c.9dd076","type":"debug","z":"fa89d9fb.342448","name":"mysitepost","active":true,"console":"false","complete":"payload","x":790,"y":1160,"wires":[]},{"id":"e40d9755.d6444","type":"http response","z":"fa89d9fb.342448","name":"","x":810,"y":1120,"wires":[]},{"id":"cb43d9b5.dd71e","type":"template","z":"fa89d9fb.342448","name":"CSS","field":"payload.style","fieldType":"msg","format":"html","syntax":"mustache","template":"input[type=text], select {\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\ninput[type=submit] {\n    width: 100%;\n    background-color: #4CAF50;\n    color: white;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\ninput[type=submit]:hover {\n    background-color: #45a049;\n}\n\ndiv {\n    border-radius: 5px;\n    \n    padding: 20px;\n}","x":530,"y":1040,"wires":[["edbe8433.592e18"]]},{"id":"909dabb7.ce0d1","type":"template","z":"fa89d9fb.342448","name":"JavaScript","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"plain","template":"$(document).ready(function(e) {\n    \n    $(\"form[ajax=true]\").submit(function(e) {\n        \n        e.preventDefault();\n        \n        var form_data = $(this).serialize();\n        var form_url = $(this).attr(\"action\");\n        var form_method = $(this).attr(\"method\").toUpperCase();\n        \n        $(\"#loadingimg\").show();\n        \n        $.ajax({\n            url: form_url, \n            type: form_method,      \n            data: form_data,     \n            cache: false,\n            success: function(returnhtml){                          \n                $(\"#result\").html(returnhtml); \n                $(\"#loadingimg\").hide();                    \n            }           \n        });    \n        \n    });\n    \n});","x":370,"y":1060,"wires":[["edbe8433.592e18"]]},{"id":"239378d5.f977d8","type":"http response","z":"fa89d9fb.342448","name":"","x":810,"y":1060,"wires":[]},{"id":"edbe8433.592e18","type":"template","z":"fa89d9fb.342448","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n  <head>\n    <title>My Site</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <style>{{{payload.style}}}</style>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n  </head>\n  \n\n    <h2>Using CSS to style an HTML form with AJAX POST and Node-RED</h2>\n    <h4><a href=\"http://www.internetoflego.com\">Internet of LEGO</a></h4>\n\n<div class=\"col-md-6\">\n  <form class=\"form-group\" method=\"post\" action=\"/{{url}}\" ajax=\"true\">\n    <label for=\"fname\">First Name</label>\n    <input type=\"text\" id=\"fname\" name=\"firstname\" class=\"form-control\">\n\n    <label for=\"lname\">Last Name</label>\n    <input type=\"text\" id=\"lname\" name=\"lastname\" class=\"form-control\">\n\n    <label for=\"country\">Country</label>\n    <div class=\"form-group\">\n        <select id=\"country\" name=\"country\" class=\"form-control\">\n          <option value=\"uk\">United Kingdom</option>\n          <option value=\"canada\">Canada</option>\n          <option value=\"usa\">USA</option>\n        </select>\n    </div>\n    <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\">\n  </form>\n</div>\n<div class=\"row\">\n<div class=\"col-md-6\">\n    <span id=\"result\"></span>\n</div>\n</div>\n</body>\n</html>\n<script>{{{payload.script}}}</script>","x":670,"y":1060,"wires":[["239378d5.f977d8"]]},{"id":"336a5075.412ef","type":"comment","z":"fa89d9fb.342448","name":"Login Form","info":"","x":330,"y":1020,"wires":[]},{"id":"6119734e.acbafc","type":"function","z":"fa89d9fb.342448","name":"return msg.payload to client","func":"msg.payload = 'The following data was submitted and available in the msg.payload: '+msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":1120,"wires":[["e40d9755.d6444"]]},{"id":"6a5abf31.74c9f","type":"comment","z":"fa89d9fb.342448","name":"Inject msg object properties","info":"","x":340,"y":920,"wires":[]},{"id":"8242cda9.334078","type":"json","z":"fa89d9fb.342448","name":"","x":350,"y":1120,"wires":[["6119734e.acbafc"]]},{"id":"d091f039.02c6a","type":"comment","z":"fa89d9fb.342448","name":"Form Submission","info":"","x":140,"y":1100,"wires":[]},{"id":"1a55f60.de5058a","type":"comment","z":"fa89d9fb.342448","name":"Web Site - README","info":"This Flow demonstrates how to create\na simple frontend webpage with Node-RED.\n\nThe public facing page consists of the \nclient side JavaScript, CSS and HTML. \n\nThe important technique is how the mustache \ntemplates are used. Each template will set the\n\"property\" relative to the content. \n\nThe CSS node sets the \"msg.payload.style\" property.\nThe JavaScript node sets the \"msg.payload.script\" property.\nThe HTML node then includes these properties \n<script>{{{payload.script}}}</script>\n<style>{{{payload.style}}}</style>\n\n\nThis example was created by http://www.InternetofLEGO.com\n\n","x":150,"y":860,"wires":[]},{"id":"2b7afa4b.2a3ea6","type":"comment","z":"c7cddcab.ad2a2","name":"Meraki API Proxy","info":"","x":550,"y":100,"wires":[]},{"id":"fbcb3c80.e38388","type":"http in","z":"8e8415c7.1421a8","name":"","url":"/mews/log","method":"post","upload":false,"swaggerDoc":"","x":180,"y":160,"wires":[["5bf25999.7f864","78f7141a.00a864"]]},{"id":"5bf25999.7f864","type":"debug","z":"8e8415c7.1421a8","name":"MEWS Session","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":230,"y":200,"wires":[]},{"id":"a0cdb464.6dc1b","type":"http response","z":"8e8415c7.1421a8","name":"","statusCode":"","headers":{},"x":670,"y":120,"wires":[]},{"id":"78f7141a.00a864","type":"function","z":"8e8415c7.1421a8","name":"Format Data","func":"msg.payload.timestamp = new Date().getTime();\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":160,"wires":[["a0cdb464.6dc1b","aa6d5df6.583dc","34c9c92a.a4ad6e"]]},{"id":"aa6d5df6.583dc","type":"debug","z":"8e8415c7.1421a8","name":"MEWS Session Formatted","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":500,"y":200,"wires":[]},{"id":"34c9c92a.a4ad6e","type":"link out","z":"8e8415c7.1421a8","name":"mews_log","links":[],"x":715,"y":160,"wires":[]},{"id":"9b4240f5.0b222","type":"comment","z":"8e8415c7.1421a8","name":"Logs Captive Portal Authentication with MEWS API","info":"","x":250,"y":80,"wires":[]},{"id":"def605c1.7fb328","type":"http in","z":"6b02c4a0.a0d1ac","name":"","url":"/alerts","method":"post","upload":false,"swaggerDoc":"","x":130,"y":80,"wires":[["63a53d58.8010f4","5ce30475.68c43c"]]},{"id":"e8130c2c.a8e5c","type":"debug","z":"6b02c4a0.a0d1ac","name":"Alerts","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":890,"y":120,"wires":[]},{"id":"63a53d58.8010f4","type":"http response","z":"6b02c4a0.a0d1ac","name":"","statusCode":"201","headers":{},"x":360,"y":60,"wires":[]},{"id":"6b096442.9fca2c","type":"function","z":"6b02c4a0.a0d1ac","name":"Alert Counter","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.count = count;\n\nnode.status({text:msg.count});\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":80,"wires":[["e8130c2c.a8e5c","3cc0f382.9d3ddc"]]},{"id":"d94d8eb2.69338","type":"firebase modify","z":"6b02c4a0.a0d1ac","name":"","firebaseconfig":"8963996.bb98268","childpath":"msg.childpath","method":"set","value":"msg.payload","priority":"msg.priority","x":440,"y":340,"wires":[["e5e824ed.ad8728"]]},{"id":"e5e824ed.ad8728","type":"debug","z":"6b02c4a0.a0d1ac","name":"Firebase Set","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":590,"y":380,"wires":[]},{"id":"25d7cd8d.c26fd2","type":"inject","z":"6b02c4a0.a0d1ac","name":"TEST - Motion Alert","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":120,"wires":[["11f39210.ec3c9e"]]},{"id":"89194097.1c29","type":"function","z":"6b02c4a0.a0d1ac","name":"path","func":"\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n    if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n}\n\nfunction format(str){\n    return str.replace(/\\s+/g, '-').toLowerCase();\n}\n\nif(msg.payload.alertType && msg.payload.occurredAt){\n    msg.childpath = \"/alerts/\"+msg.payload.alertType+\"/\"+Math.floor(Date.now() / 1000);\n}else{\n    msg.childpath = \"/catchAll/\"+Math.floor(Date.now() / 1000);\n}\nreturn msg;","outputs":1,"noerr":0,"x":150,"y":340,"wires":[["d94d8eb2.69338"]]},{"id":"3cc0f382.9d3ddc","type":"link out","z":"6b02c4a0.a0d1ac","name":"Alerts","links":["d5c7b31c.501f5","e18c08af.2dc2f8","4629e728.0bbec8","54ff3ddc.ca4264","4c71e000.409c1","5d45b2a3.4b965c","3e8c9452.59b2ac","df01343d.3582a8","4da77a7e.8faf24","12ed1b4a.d8fbd5","f52f989e.e9e9b8","b0d2d0f6.9c235"],"x":895,"y":80,"wires":[]},{"id":"861bff90.9a5b1","type":"comment","z":"6b02c4a0.a0d1ac","name":"Meraki Webhook Alerts","info":"","x":120,"y":20,"wires":[]},{"id":"993d7274.d1fe1","type":"comment","z":"6b02c4a0.a0d1ac","name":"Store Alerts in Google Firebase Database","info":"","x":180,"y":300,"wires":[]},{"id":"1868f19.d33430e","type":"http in","z":"6b02c4a0.a0d1ac","name":"","url":"/alerts","method":"get","upload":false,"swaggerDoc":"","x":100,"y":480,"wires":[["5f4e6494.f4c95c"]]},{"id":"78165ff3.748ae","type":"http response","z":"6b02c4a0.a0d1ac","name":"","x":550,"y":480,"wires":[]},{"id":"1a544ccb.c18c73","type":"comment","z":"6b02c4a0.a0d1ac","name":"VueJS App","info":"","x":80,"y":440,"wires":[]},{"id":"5f4e6494.f4c95c","type":"template","z":"6b02c4a0.a0d1ac","name":"VueJS SocketIO","field":"payload","fieldType":"msg","format":"html","syntax":"plain","template":"\n<html>\n\n<head>\n\n</head>\n\n<body>\n\n    <div id=\"container\" class=\"container\">\n        <div class=\"page-header\">\n          <h1>VueJS + SocketIO <small>Real-time server communication</small></h1>\n        </div>\n        <p>Connected: <b :style=\"{ color: isConnected ? 'green' : 'red'}\">{{ isConnected }}</b></p>\n        \n        <br>\n        <input type=\"text\" id=\"container\" placeholder=\"enter text\" v-model=\"form.input1\">\n        <button @click=\"onSubmit()\">Send</button>\n        \n        <br>\n        \n        <div class=\"well\">\n            <div v-if=\"typeof value === 'object'\">\n                <h4>Message - JSON</h4>\n            <json-tree :data=\"value\"></json-tree>\n            </div>\n            <div v-else>\n                <h4>Message</h4>\n            <p>{{ value }}</p>\n            </div>\n        </div> \n\n\n    </div>\n\n    <script src=\"https://unpkg.com/vue\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/v-json-tree/dist/v-json-tree.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js\"></script>\n    <!-- Bootstrap Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n\n    <script>\n        Vue.use(JsonTree)\n        var app = new Vue({\n            el: '#container',\n            data() {\n                return {\n                    form: {\n                        input1: '',\n                    },\n                    value: 'hello world',\n                    isConnected: false,\n\n                }\n            },\n            computed: {\n                socket() {\n                    return socket = io();\n                }\n            },\n            methods: {\n                onSubmit() {\n                    let data = this.form;\n                    console.log('submitting data', data);\n                    //this.socket.send(data);\n                    this.socket.send(data);\n\n                },\n                updateMsg(msg) {\n                    this.value = msg;\n                }\n            },\n            mounted() {\n\n                this.socket.on('connect', function (s) {\n                    console.log('connect');\n                    app.updateMsg('connected');\n                    app.isConnected = true;\n                });\n                this.socket.on('disconnect', function (s) {\n                    console.log('disconnected');\n                    app.isConnected = false;\n                });\n                this.socket.on('message', function (data) {\n                    console.log('message:', data);\n                    app.value = data;\n                });\n\n            }\n        });\n\n\n\n    </script>\n\n\n</body>\n\n</html>","output":"str","x":360,"y":480,"wires":[["78165ff3.748ae"]]},{"id":"2d56ce38.5dd092","type":"debug","z":"6b02c4a0.a0d1ac","name":"socket","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":610,"y":640,"wires":[]},{"id":"590ab927.3d5368","type":"inject","z":"6b02c4a0.a0d1ac","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":600,"wires":[["fe872bd0.332e98"]]},{"id":"bb2ed95c.f017d8","type":"socketio-in","z":"6b02c4a0.a0d1ac","name":"alerts/socket.io","server":"17b69dfa.3bf742","rules":[],"x":170,"y":640,"wires":[["2d56ce38.5dd092","fe872bd0.332e98"]]},{"id":"fe872bd0.332e98","type":"socketio-out","z":"6b02c4a0.a0d1ac","name":"message","server":"17b69dfa.3bf742","x":360,"y":600,"wires":[]},{"id":"4c71e000.409c1","type":"link in","z":"6b02c4a0.a0d1ac","name":"","links":["3cc0f382.9d3ddc"],"x":115,"y":560,"wires":[["fe872bd0.332e98"]]},{"id":"6119627a.37f98c","type":"http request","z":"6b02c4a0.a0d1ac","name":"","method":"POST","ret":"txt","url":"https://script.google.com/macros/s/AKfycbxfw9SRW5qGfJjhsmVgsq-LWQsieogbH4glfg_r3fGIvguSMEYZ/exec","tls":"","x":430,"y":740,"wires":[["745878a1.890cf8"]]},{"id":"6527cc0a.d96034","type":"inject","z":"6b02c4a0.a0d1ac","name":"Test","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":780,"wires":[["17748c4f.72cf54"]]},{"id":"17748c4f.72cf54","type":"function","z":"6b02c4a0.a0d1ac","name":"Sample Alert","func":"msg.payload = {\"alertData\":{\"timestamp\":msg.payload,\"roi\":{\"top\":0,\"left\":0,\"width\":60,\"height\":33}},\"alertId\":\"643451796765275003\",\"alertType\":\"Motion detected\",\"occurredAt\":1536127340.8236248,\"sentAt\":1536127344.593023,\"organizationId\":\"306267\",\"organizationName\":\"Dexter's Laboratory\",\"organizationUrl\":\"https://n143.meraki.com/o/3ZZIub/manage/organization/overview\",\"networkId\":\"L_643451796760561218\",\"networkName\":\"Dexter LaBora - Home\",\"networkUrl\":\"https://n143.meraki.com/Dexter-LaBora-Ho/n/RSv2xapc/manage/nodes/list\",\"deviceSerial\":\"Q2GV-658H-XUKP\",\"deviceMac\":\"34:56:fe:a3:24:06\",\"deviceName\":\"MV12w-desk-06\",\"deviceUrl\":\"https://n143.meraki.com/Dexter-LaBora-Ho/n/RSv2xapc/manage/nodes/new_list/57548243936262\"}\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":780,"wires":[["6119627a.37f98c"]]},{"id":"745878a1.890cf8","type":"debug","z":"6b02c4a0.a0d1ac","name":"Google Sheets","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":610,"y":740,"wires":[]},{"id":"3e8c9452.59b2ac","type":"link in","z":"6b02c4a0.a0d1ac","name":"","links":["3cc0f382.9d3ddc"],"x":75,"y":740,"wires":[["6119627a.37f98c"]]},{"id":"6449e9bb.f847c8","type":"comment","z":"6b02c4a0.a0d1ac","name":"SocketIO - Realtime communication with web app","info":"","x":350,"y":540,"wires":[]},{"id":"2b38752a.82d06a","type":"comment","z":"6b02c4a0.a0d1ac","name":"Send to Google Sheet","info":"","x":120,"y":700,"wires":[]},{"id":"df01343d.3582a8","type":"link in","z":"6b02c4a0.a0d1ac","name":"Photon","links":["3cc0f382.9d3ddc"],"x":55,"y":340,"wires":[["89194097.1c29"]]},{"id":"11f39210.ec3c9e","type":"function","z":"6b02c4a0.a0d1ac","name":"Sample Motion Alert","func":"msg.payload = {\n  \"alertData\": {\n    \"timestamp\": 1536127239.706,\n    \"roi\": { \"top\": 0, \"left\": 0, \"width\": 60, \"height\": 33 }\n  },\n  \"alertId\": \"643451796765275003\",\n  \"alertType\": \"Motion detected\",\n  \"occurredAt\": \"2018-10-25T17:17:38.623000Z\",\n  \"sentAt\": \"2018-10-25T17:17:46.608245Z\",\n  \"organizationId\": \"123456\",\n  \"organizationName\": \"Organization\",\n  \"organizationUrl\": \"https://n1.meraki.com/o/.../organization/overview\",\n  \"networkId\": \"L_123456789123456789\",\n  \"networkName\": \"Network - 1\",\n  \"networkUrl\": \"https://n1.meraki.com/...\",\n  \"deviceSerial\": \"AAAA-BBBB-CCCC\",\n  \"deviceMac\": \"00:11:22:33:44:55\",\n  \"deviceName\": \"MV12w-06\",\n  \"deviceUrl\": \"https://n1.meraki.com/.../manage/nodes/new_list/...\",\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":520,"y":120,"wires":[["6b096442.9fca2c"]]},{"id":"d3e57d06.1915e","type":"comment","z":"6b02c4a0.a0d1ac","name":"Network Automation - Dynamic Port Configuration","info":"","x":210,"y":860,"wires":[]},{"id":"61b046ef.6dca48","type":"function","z":"6b02c4a0.a0d1ac","name":"Check for MAC if in list - modify list here","func":"var macs = [\n    \"00:18:0a:32:cc:34\"\n]\n\nvar clients = msg.payload;\nfor(var c in clients){\n    if(macs.includes(msg.payload[c].mac)){\n        msg.authorized = true;\n    }else{\n        msg.authorized = false;\n    }\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":1040,"wires":[["47a5f887.539bc8","8989b029.ed062"]]},{"id":"4da77a7e.8faf24","type":"link in","z":"6b02c4a0.a0d1ac","name":"","links":["3cc0f382.9d3ddc"],"x":75,"y":960,"wires":[["22e49352.d824dc"]]},{"id":"22e49352.d824dc","type":"switch","z":"6b02c4a0.a0d1ac","name":"Switch port connected","property":"payload.alertType","propertyType":"msg","rules":[{"t":"eq","v":"Switch port connected","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":220,"y":960,"wires":[["ef3ccdc8.9a89e"]]},{"id":"783ecf0a.bb9df","type":"function","z":"6b02c4a0.a0d1ac","name":"Meraki API: Change Port","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar serial = msg.alert.deviceSerial;\nvar port = msg.alert.alertData.portNum;\nvar data = {\n  \"name\": \"NAC device\",\n  \"tags\": \"API Node-RED\",\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"trunk\",\n  \"vlan\": 1,\n  \"voiceVlan\": null,\n  \"allowedVlans\": \"all\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"accessPolicyNumber\": null\n}\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey,\n    \"Content-Type\":\"application/json\"\n};\nmsg.url = \"https://n143.meraki.com/api/v0/devices/\"+serial+\"/switchPorts/\"+port;\nmsg.method = 'put';\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":1120,"wires":[["bb21325e.233f8"]]},{"id":"ef3ccdc8.9a89e","type":"function","z":"6b02c4a0.a0d1ac","name":"Meraki API: Get Clients of Switch Device","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar serial = msg.payload.deviceSerial;\nmsg.alert = msg.payload; // make a copy for use later \nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://api.meraki.com/api/v0/devices/\"+serial+\"/clients?timespan=7200\";\nmsg.method = 'get';\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":960,"wires":[["992219c8.68a8e8"]]},{"id":"17c1214e.eea4af","type":"debug","z":"6b02c4a0.a0d1ac","name":"Dynamic Port Automation: Sample","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":560,"y":920,"wires":[]},{"id":"bb21325e.233f8","type":"http request","z":"6b02c4a0.a0d1ac","name":"","method":"use","ret":"obj","url":"","tls":"","x":710,"y":1120,"wires":[["2ddbc1a5.ee5b7e"]]},{"id":"992219c8.68a8e8","type":"http request","z":"6b02c4a0.a0d1ac","name":"","method":"use","ret":"obj","url":"","tls":"","x":810,"y":960,"wires":[["a8aa561f.95a0c8","d8a45bfe.899538","b022029d.72915"]]},{"id":"a8aa561f.95a0c8","type":"http response","z":"6b02c4a0.a0d1ac","name":"","x":1030,"y":960,"wires":[]},{"id":"3815f034.c2635","type":"credentials","z":"6b02c4a0.a0d1ac","name":"Meraki API Demo","props":[{"value":"apiKey","type":"flow"}],"x":170,"y":1040,"wires":[[]]},{"id":"d8a45bfe.899538","type":"debug","z":"6b02c4a0.a0d1ac","name":"Meraki API: Get Clients","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":970,"y":920,"wires":[]},{"id":"4e9c710b.0232a","type":"inject","z":"6b02c4a0.a0d1ac","name":"Set Flow Variables","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":170,"y":1000,"wires":[["3815f034.c2635"]]},{"id":"f9a143c0.247c9","type":"inject","z":"6b02c4a0.a0d1ac","name":"Test","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":920,"wires":[["ef050f72.34a9e"]]},{"id":"ef050f72.34a9e","type":"function","z":"6b02c4a0.a0d1ac","name":"Sample Alert","func":"msg.payload = {\n  \"alertData\" : {\n    \"description\" : \"\",\n    \"portDesc\" : \"Office / 7 (BLACK HOLE) Access port on VLAN 99\",\n    \"portNum\" : 7,\n    \"prevStatus\" : 0,\n    \"status\" : 66067\n  },\n  \"alertId\" : \"643451796765277070\",\n  \"alertType\" : \"Switch port connected\",\n  \"deviceMac\" : \"88:15:44:e3:58:2b\",\n  \"deviceName\" : \"Office\",\n  \"deviceSerial\" : \"Q2HP-6Z82-NGDM\",\n  \"deviceUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/-FqWScpc/manage/nodes/new_list/149624931440683\",\n  \"networkId\" : \"L_643451796760561218\",\n  \"networkName\" : \"Dexter LaBora - Home\",\n  \"networkUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/-FqWScpc/manage/nodes/list\",\n  \"occurredAt\" : 1536157718,\n  \"organizationId\" : \"306267\",\n  \"organizationName\" : \"Dexter's Laboratory\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/3ZZIub/manage/organization/overview\",\n  \"sentAt\" : 1.5361577879050448E9\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":920,"wires":[["22e49352.d824dc","17c1214e.eea4af"]]},{"id":"b022029d.72915","type":"function","z":"6b02c4a0.a0d1ac","name":"Filter Clients on Device Port","func":"var clients = msg.payload;\nvar alert = msg.alert.alertData;\n\nvar portClients = clients.filter(function(c){\n    return c.switchport == alert.portNum\n});\n\nmsg.payload = portClients;\nreturn msg;","outputs":1,"noerr":0,"x":500,"y":1000,"wires":[["753e2122.99f89","61b046ef.6dca48"]]},{"id":"753e2122.99f89","type":"debug","z":"6b02c4a0.a0d1ac","name":"Clients on Port","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1000,"y":1000,"wires":[]},{"id":"47a5f887.539bc8","type":"debug","z":"6b02c4a0.a0d1ac","name":"Check MAC","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1010,"y":1040,"wires":[]},{"id":"2ddbc1a5.ee5b7e","type":"debug","z":"6b02c4a0.a0d1ac","name":"Meraki API: Change Port Settings","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":940,"y":1120,"wires":[]},{"id":"144ce508.4fefbb","type":"inject","z":"6b02c4a0.a0d1ac","name":"Test","topic":"","payload":"[{\"usage\":{\"sent\":0,\"recv\":282},\"id\":\"k0fc956\",\"description\":\"mr16-desk-00180a32cc34\",\"mdnsName\":null,\"dhcpHostname\":\"mr16-desk-00180a32cc34\",\"mac\":\"00:18:0a:32:cc:34\",\"ip\":\"192.168.0.252\",\"vlan\":99,\"switchport\":\"7\"}]","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":250,"y":1080,"wires":[["61b046ef.6dca48"]]},{"id":"8989b029.ed062","type":"switch","z":"6b02c4a0.a0d1ac","name":"Device Found?","property":"authorized","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":true,"outputs":1,"x":460,"y":1080,"wires":[["783ecf0a.bb9df"]]},{"id":"8a8862dd.a07a3","type":"http in","z":"c7cddcab.ad2a2","name":"","url":"/meraki/ui/updateSSID","method":"get","upload":false,"swaggerDoc":"","x":180,"y":960,"wires":[["8c28ee26.9c41e"]]},{"id":"77dd57dd.15a568","type":"template","z":"c7cddcab.ad2a2","name":"VueJS Bulma HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"plain","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>SSID Updater</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.6.2/css/bulma.min.css\">\n    <script defer src=\"https://use.fontawesome.com/releases/v5.0.6/js/all.js\"></script>\n</head>\n\n<body>\n\n    <section id=\"app\" class=\"section\">\n        <h2 class=\"title is-1\">\n            Wireless Settings\n        </h2>\n        <div class=\"columns\">\n            <div class=\"column\">\n                <form>\n                    <div class=\"field\">\n                        <label class=\"label\">SSID</label>\n                        <div class=\"control\">\n                            <div class=\"select\">\n                                <select v-model=\"ssid\">\n                                    <option v-for=\"ssid in ssids\" :value=\"ssid\">\n                                        {{ssid.name}}\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\">Pre-shared Key</label>\n                        <div class=\"control has-icons-left\">\n                            <input class=\"input\" type=\"text\" v-model=\"form.psk\"/>\n                            <span class=\"icon is-small is-left\">\n                            <i class=\"fas fa-lock\"></i>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"field\">\n                        <label class=\"label\">Enabled</label>\n                        <div class=\"control\">\n                            <label>\n                                <input type=\"radio\" value=true v-model=\"form.enabled\" /> Enabled\n                            </label>\n                            <br>\n                            <label>\n                                <input type=\"radio\" value=false v-model=\"form.enabled\" /> Disabled\n                            </label>\n                            <br>\n                        </div>\n                    </div>\n                    <button class=\"button is-primary\" type=\"submit\" @click.prevent=\"updateSsid\">Update SSID</button>\n\n                </form>\n\n              \n\n                <transition name=\"fade\" mode=\"out-in\">\n                    <article class=\"message\" :class=\"alert.color\" v-show=\"alert.show\">\n                        <div class=\"message-header \">\n                            <p>{{alert.header}}</p>\n                        </div>\n                        <div class=\"message-body\">\n                            {{alert.message}}\n                        </div>\n                    </article>\n                </transition>\n\n                \n            </div>\n            \n            <div class=\"column\" >\n                <button class=\"button is-secondary\" v-on:click=\"details = !details\">View Details</button>\n                <div v-if=\"details\">\n                    <h5>\n                        <h4>SSID Raw Settings</h4>\n                        <i>Network ID: {{net.id}}</i>\n                    </h5>\n                    <pre><code>{{form}}</code></pre>\n                </div>\n            </div>\n        </div>\n    </section>\n\n</body>\n\n</html>\n\n<style>\n    .margin-bottom {\n        margin-bottom: 15px;\n    }\n\n    .fade-enter,\n    .fade-leave-active {\n        opacity: 0;\n    }\n\n    .fade-enter-active,\n    .fade-leave-active {\n        transition: opacity .5s;\n    }\n\n    .input {\n        width: 300px\n    }\n</style>\n\n<script src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.15/vue.min.js'></script>\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n<script>\n    new Vue({\n        el: '#app',\n        data: {\n            baseUrl: '/meraki/proxy',\n            form: {\n                name: '',\n                enabled: '',\n                psk: ''\n            },\n            alert: {\n                show: false,\n                header: \"\",\n                message: \"\"\n            },\n            // provided via URL query   ?netId=L_1234567890\n            net: {\n                id: ''\n            },\n            ssid: {},\n            ssids: [],\n            details: false\n        },\n        created: function () {\n            // Checks if a custom network ID was provided in the query and sets it.    \n            if(this.getParameterByName('netId')){\n                this.net.id = this.getParameterByName('netId');\n            }\n            this.fetchSsids();\n        },\n        watch: {\n            ssid: function () {\n                // copy ssid settings to form defaults\n                this.form = this.ssid;\n            }\n        },\n        methods: {\n            getParameterByName: function(name, url) {\n                if (!url) url = window.location.href;\n                name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n                var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n                    results = regex.exec(url);\n                if (!results) return null;\n                if (!results[2]) return '';\n                return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n            },\n            ssidSelected: function (number) {\n                console.log(\"SSID selected \" + number);\n                this.ssid = this.ssids[number];\n                //this.formEnabled = true;\n            },\n            fetchSsids: function () {\n                if (!this.net) {\n                    return;\n                }\n                if (!this.net.id) { return }\n                var url = this.baseUrl + '/networks/' + this.net.id + '/ssids';\n                console.log(url);\n                console.log('fetching ssids', this.ssids);\n                axios.get(url)\n                    .then(res => {\n                        // store ssids\n                        this.ssids = res.data;\n                        // assign default ssid if not already selected\n                        this.ssid = this.ssids[0];\n                    }, err => {\n                        console.log('error getting ssids', err);\n                    });\n            },\n            updateSsid: function ($index) {\n                console.log(\"updating SSID \", this.ssid.name);\n                axios.put(this.baseUrl + '/networks/' + this.net.id + '/ssids/' + this.ssid.number, this.form)\n                    .then(res => {\n                        console.log('updateSsid res.data', res.data);\n                        var _this = this;\n                        this.alert = {\n                            show: true,\n                            color: \"is-success\",\n                            header: \"Success\",\n                            message: \"The wireless network has been updated.\"\n                        }\n\n                        setTimeout(function () {\n                            _this.alert.show = false;\n                        }, 3000);\n\n                    }, err => {\n                        console.log('put request failed', err);\n                        const response = err.response\n                        console.log(response.data.errors)\n                        var _this = this;\n                        this.alert = {\n                            show: true,\n                            color: \"is-danger\",\n                            header: \"Error\",\n                            message: response.data.errors\n                        }\n                        setTimeout(function () {\n                            _this.alert.show = false;\n                        }, 3000);\n                    });\n            }\n        }\n    });\n</script>","output":"str","x":720,"y":960,"wires":[["1276420.80281be"]]},{"id":"1276420.80281be","type":"http response","z":"c7cddcab.ad2a2","name":"","x":930,"y":960,"wires":[]},{"id":"b1e0cbb0.e4fb28","type":"comment","z":"c7cddcab.ad2a2","name":"Configure SSID","info":"","x":120,"y":920,"wires":[]},{"id":"6faa9d85.894cb4","type":"debug","z":"c7cddcab.ad2a2","name":"updateSSID netId","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":710,"y":1000,"wires":[]},{"id":"8c28ee26.9c41e","type":"function","z":"c7cddcab.ad2a2","name":"Default Network ID: UPDATE THIS","func":"// Set the default Network ID\nvar netId = 'L_646829496481099984'\n\n// Or supplied by user:  \n// https://server/meraki/ui/updatessid?netId=L_646829496481092083\n\n\n\nif (!msg.req.query['netId']){\n    msg.statusCode = 302;\n    msg.headers = {\n      'Location': msg.req.url + '?netId='+netId\n    };\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":960,"wires":[["6faa9d85.894cb4","77dd57dd.15a568"]]},{"id":"95db5944.da8d48","type":"function","z":"6b02c4a0.a0d1ac","name":"Sample - Switch Port Connected","func":"msg.payload = {\n  \"alertData\" : {\n    \"description\" : \"\",\n    \"portDesc\" : \"Office / 3 Trunk port on VLAN 1\",\n    \"portNum\" : 3,\n    \"prevStatus\" : 0,\n    \"status\" : 590355\n  },\n  \"alertId\" : \"643451796765250686\",\n  \"alertType\" : \"Switch port connected\",\n  \"deviceMac\" : \"00:11:22:33:44:55\",\n  \"deviceName\" : \"Office\",\n  \"deviceSerial\" : \"AAAA-BBBB-CCCC\",\n  \"deviceUrl\" : \"https://n1.meraki.com/.../manage/nodes/new_list/...\",\n  \"networkId\" : \"L_123456789123456789\",\n  \"networkName\" : \"Network - 1\",\n  \"networkUrl\" : \"https://n1.meraki.com/...\",\n  \"occurredAt\" : \"2018-10-25T17:17:38.623000Z\",\n  \"organizationId\" : \"123456\",\n  \"organizationName\" : \"Organization\",\n  \"organizationUrl\" : \"https://n1.meraki.com/o/.../organization/overview\",\n  \"sentAt\" : \"2018-10-25T17:17:46.608245Z\",\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":160,"wires":[["6b096442.9fca2c"]]},{"id":"920c5392.9951c","type":"inject","z":"6b02c4a0.a0d1ac","name":"TEST - Switch Port Connected","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":190,"y":160,"wires":[["95db5944.da8d48"]]},{"id":"140332d4.cd4e4d","type":"function","z":"6b02c4a0.a0d1ac","name":"Sample - Settings Changed: Alerts for VPN","func":"msg.payload = {\n  \"alertData\" : {\n    \"changes\" : {\n      \"vpnConnectivityChange\" : {\n        \"changedBy\" : \"User (user@example.com)\",\n        \"label\" : \"A VPN connection comes up or goes down\",\n        \"newText\" : \"{\\\"enabled\\\":false}\",\n        \"oldText\" : \"{\\\"enabled\\\":true}\"\n      }\n    },\n    \"name\" : \"Alerts\",\n    \"url\" : \"/manage/configure/alerts\",\n    \"userId\" : 500692\n  },\n  \"alertId\" : \"643451796765252351\",\n  \"alertType\" : \"Settings changed\",\n  \"networkId\" : \"L_123456789123456789\",\n  \"networkName\" : \"Network - 1\",\n  \"networkUrl\" : \"https://n1.meraki.com/...\",\n  \"occurredAt\" : \"2018-10-25T17:17:38.623000Z\",\n  \"organizationId\" : \"123456\",\n  \"organizationName\" : \"Organization\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/.../organization/overview\",\n  \"sentAt\" : \"2018-10-25T17:17:46.608245Z\",\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n}\n;\n\nreturn msg;","outputs":1,"noerr":0,"x":590,"y":200,"wires":[["6b096442.9fca2c"]]},{"id":"2b525e26.52b072","type":"inject","z":"6b02c4a0.a0d1ac","name":"TEST - Settings Changed","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":200,"wires":[["140332d4.cd4e4d"]]},{"id":"5ce30475.68c43c","type":"function","z":"6b02c4a0.a0d1ac","name":"clean msg object","func":"// resets msg object to avoid extended flows from responding to HTTP request\n\nvar payload = msg.payload;\nmsg = {};\nmsg.payload = payload;\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":80,"wires":[["6b096442.9fca2c"]]},{"id":"beae7f11.7f444","type":"firebase modify","z":"6b02c4a0.a0d1ac","name":"","firebaseconfig":"8963996.bb98268","childpath":"msg.childpath","method":"remove","value":"msg.payload","priority":"msg.priority","x":300,"y":2000,"wires":[["b1351557.a0d9a8"]]},{"id":"bff8021d.be918","type":"inject","z":"6b02c4a0.a0d1ac","name":"DELETE ALL DATABASE RECORDS","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":200,"y":1960,"wires":[["ae7531e9.9405b"]]},{"id":"ae7531e9.9405b","type":"function","z":"6b02c4a0.a0d1ac","name":"msg.childpath = \"/alerts/\";","func":"msg.childpath = \"/alerts/\";\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":1960,"wires":[["beae7f11.7f444"]]},{"id":"b1351557.a0d9a8","type":"debug","z":"6b02c4a0.a0d1ac","name":"Database data DELETE","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":700,"y":2000,"wires":[]},{"id":"3f8b9d2e.2a9062","type":"function","z":"6b02c4a0.a0d1ac","name":"Sample - VPN connectivity changed","func":"msg.payload = {\n  \"alertData\" : {\n    \"connectivity\" : \"false\",\n    \"peerContact\" : \"34.251.167.98:39105\",\n    \"peerIdent\" : \"9233acc6d2a2f38172c6b49bb14b4071\",\n    \"vpnType\" : \"site-to-site\"\n  },\n  \"alertId\" : \"643451796765320915\",\n  \"alertType\" : \"VPN connectivity changed\",\n  \"deviceMac\" : \"00:11:22:33:44:55\",\n  \"deviceName\" : \"MX65 – 1\",\n  \"deviceSerial\" : \"AAAA-BBBB-CCCC\",\n  \"deviceUrl\" : \"https://n1.meraki.com/.../manage/nodes/new_wired_status\",\n  \"networkId\" : \"L_123456789123456789\",\n  \"networkName\" : \"Network - 1\",\n  \"networkUrl\" : \"https://n1.meraki.com/...\",\n  \"occurredAt\" : \"2018-10-25T17:17:38.623000Z\",\n  \"organizationId\" : \"123456\",\n  \"organizationName\" : \"Organization\",\n  \"organizationUrl\" : \"https://n1.meraki.com/o/.../organization/overview\",\n  \"sentAt\" : \"2018-10-25T17:17:46.608245Z\",\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":240,"wires":[["6b096442.9fca2c"]]},{"id":"3ea35a3a.12a876","type":"inject","z":"6b02c4a0.a0d1ac","name":"TEST - VPN connectivity changed","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":200,"y":240,"wires":[["3f8b9d2e.2a9062"]]},{"id":"94febd54.4fd7e","type":"mqtt out","z":"cf20e2de.a92f68","name":"meraki/scanning","topic":"meraki/scanning","qos":"","retain":"","broker":"4e77d4c3.519d7c","x":320,"y":920,"wires":[]},{"id":"25980341.1d152c","type":"mqtt in","z":"cf20e2de.a92f68","name":"","topic":"meraki/scanning","qos":"2","broker":"4e77d4c3.519d7c","x":130,"y":980,"wires":[["9769ceb8.9246f"]]},{"id":"25d9c85f.96db28","type":"debug","z":"cf20e2de.a92f68","name":"MQTT #","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":480,"y":980,"wires":[]},{"id":"eceac5cb.59de78","type":"link in","z":"cf20e2de.a92f68","name":"","links":["23ced39d.27292c"],"x":120,"y":920,"wires":[["94febd54.4fd7e"]]},{"id":"5300f342.266e1c","type":"comment","z":"cf20e2de.a92f68","name":"Location API core mechanics","info":"CMX/Location API core functions","x":140,"y":780,"wires":[]},{"id":"23ced39d.27292c","type":"link out","z":"cf20e2de.a92f68","name":"scanning3","links":["eceac5cb.59de78"],"x":495,"y":860,"wires":[]},{"id":"9769ceb8.9246f","type":"json","z":"cf20e2de.a92f68","name":"","property":"payload","action":"","pretty":false,"x":330,"y":980,"wires":[["25d9c85f.96db28"]]},{"id":"9ef9cc07.d4b9e","type":"debug","z":"cf20e2de.a92f68","name":"scanning Data","active":false,"console":"false","complete":"true","x":620,"y":840,"wires":[]},{"id":"6e709c95.a68934","type":"function","z":"cf20e2de.a92f68","name":"validate-secret - UPDATE","func":"// This node verifies that the secrect configured\n// on the Meraki Dashboard Network, matches.\n\nvar secret = \"supersecret\";\n\nif(msg.payload.secret == secret){\n    return msg;\n}else{\n    // Secret is invalid\n    \n}\n\n","outputs":1,"noerr":0,"x":350,"y":820,"wires":[["9ef9cc07.d4b9e","b53464e4.8d4258","23ced39d.27292c"]]},{"id":"b01c6a3e.d81418","type":"debug","z":"cf20e2de.a92f68","name":"scanning post","active":false,"console":"false","complete":"payload","x":320,"y":860,"wires":[]},{"id":"b53464e4.8d4258","type":"http response","z":"cf20e2de.a92f68","name":"cmx response","x":620,"y":800,"wires":[]},{"id":"7ff41361.684b0c","type":"http in","z":"cf20e2de.a92f68","name":"","url":"/scanning3","method":"post","upload":false,"swaggerDoc":"","x":120,"y":820,"wires":[["6e709c95.a68934","b01c6a3e.d81418"]]},{"id":"4f500752.fd06c8","type":"http request","z":"6b02c4a0.a0d1ac","name":"Photon2","method":"POST","ret":"obj","url":"https://api.particle.io/v1/devices/1f0025001947343438323536/led?access_token=b43ce2c0ff6ad067fac681b268f8524f7b3a8034","tls":"","x":400,"y":1300,"wires":[["2d611c5d.da3094"]]},{"id":"796a5378.f0a7bc","type":"inject","z":"6b02c4a0.a0d1ac","name":"On","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":1300,"wires":[["dfcd85ac.88c828"]]},{"id":"f4482212.c1133","type":"inject","z":"6b02c4a0.a0d1ac","name":"Off","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":1340,"wires":[["965ce4ac.623df8"]]},{"id":"2d611c5d.da3094","type":"debug","z":"6b02c4a0.a0d1ac","name":"photon response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":570,"y":1300,"wires":[]},{"id":"dfcd85ac.88c828","type":"function","z":"6b02c4a0.a0d1ac","name":"on","func":"msg.payload = {\"arg\":\"on\"};\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":1300,"wires":[["4f500752.fd06c8"]]},{"id":"965ce4ac.623df8","type":"function","z":"6b02c4a0.a0d1ac","name":"off","func":"msg.payload = {\"arg\":\"off\"};\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":1340,"wires":[["4f500752.fd06c8"]]},{"id":"12ed1b4a.d8fbd5","type":"link in","z":"6b02c4a0.a0d1ac","name":"Photon","links":["3cc0f382.9d3ddc"],"x":75,"y":1220,"wires":[[]]},{"id":"5623bcba.84c0d4","type":"comment","z":"6b02c4a0.a0d1ac","name":"IoT Alarm - Particle Photon with LED and Buzzer","info":"","x":200,"y":1180,"wires":[]},{"id":"b2b0b95.6351948","type":"inject","z":"6b02c4a0.a0d1ac","name":"Trigger","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":1260,"wires":[["9975d456.328f28"]]},{"id":"9975d456.328f28","type":"function","z":"6b02c4a0.a0d1ac","name":"trigger","func":"msg.payload = {\"arg\":\"trigger\"};\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":1260,"wires":[["4f500752.fd06c8"]]},{"id":"6a49cfba.76cf3","type":"switch","z":"6b02c4a0.a0d1ac","name":"Trigger on Motion detected","property":"payload.alertType","propertyType":"msg","rules":[{"t":"eq","v":"Motion detected","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":300,"y":1220,"wires":[["9975d456.328f28"]]},{"id":"ff62305f.72b61","type":"comment","z":"6b02c4a0.a0d1ac","name":"Alert - Webhook","info":"","x":100,"y":1400,"wires":[]},{"id":"f52f989e.e9e9b8","type":"link in","z":"6b02c4a0.a0d1ac","name":"","links":["3cc0f382.9d3ddc"],"x":75,"y":1440,"wires":[["12e9f927.6e84c7"]]},{"id":"5bdee542.54c07c","type":"link out","z":"6b02c4a0.a0d1ac","name":"","links":["71931cb3.da711c"],"x":415,"y":1440,"wires":[]},{"id":"12e9f927.6e84c7","type":"function","z":"6b02c4a0.a0d1ac","name":"Format Message","func":"var alert = msg.payload;\n\nvar data = msg.payload.alertData;\n\n\nmsg.payload = `## Meraki Alert! \\n \n### -- ${alert.alertType} -- \\n\n**Org:** [${alert.organizationName}](${alert.organizationUrl}) \\n \n**Net:** [${alert.networkName}](${alert.networkUrl}) \\n\n**Data:** \\n `;\n\n/*\nvar dataKeys = Object.keys(data);\ndataKeys.forEach(k => {\n     msg.payload += `\\n ${k}: ${data[k]} \\n`\n});\n*/\n  \nfunction getKeyValues(data) {\n    var q = [\"\\n \"];\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = data[key];\n        if (value === null) {\n            q.push(key + \": ''\");\n        } else if (typeof value == \"object\") {\n            q.push(getKeyValues(value));\n        } else {\n            q.push(key + \": \" + value + \"\\n\");\n        }\n    }\n    return q.join(\"\\n\");\n}\nmsg.payload += `\\n ${getKeyValues(alert.alertData)}`\n\nreturn msg;\n","outputs":1,"noerr":0,"x":230,"y":1440,"wires":[["5bdee542.54c07c"]]},{"id":"cf70dc12.23d2a","type":"http request","z":"6b02c4a0.a0d1ac","name":"","method":"POST","ret":"txt","url":"https://maker.ifttt.com/trigger/meraki_alert/with/key/bsHFhxmrR86V5EBizztMT7","tls":"","x":430,"y":1560,"wires":[["d297a65.c2dfe58"]]},{"id":"d297a65.c2dfe58","type":"debug","z":"6b02c4a0.a0d1ac","name":"IFTTT","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":580,"y":1560,"wires":[]},{"id":"b0d2d0f6.9c235","type":"link in","z":"6b02c4a0.a0d1ac","name":"To IFTTT","links":["3cc0f382.9d3ddc"],"x":55,"y":1580,"wires":[[]]},{"id":"db28bc89.36e35","type":"comment","z":"6b02c4a0.a0d1ac","name":"Send to IFTTT","info":"","x":90,"y":1520,"wires":[]},{"id":"ce4ce560.5b3778","type":"function","z":"6b02c4a0.a0d1ac","name":"Format Message","func":"var iftttData = {};\niftttData.value1 = msg.payload;\nmsg.payload = iftttData;\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":1560,"wires":[["cf70dc12.23d2a"]]},{"id":"a6efe4f9.128048","type":"ifttt out","z":"6b02c4a0.a0d1ac","eventName":"meraki_alert2","key":"c046a0ec.f1055","x":440,"y":1600,"wires":[]},{"id":"ba825e8f.71b5d","type":"function","z":"6b02c4a0.a0d1ac","name":"Format Message","func":"var iftttData = {};\niftttData.value1 = msg.payload.alertType;\niftttData.value3 = msg.payload.networkName;\niftttData.value2 = msg.payload.alertData;\nmsg.payload = iftttData;\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":1600,"wires":[["a6efe4f9.128048"]]},{"id":"ba5e53a8.6d11c","type":"inject","z":"6b16186d.8d6808","name":"Sets Defaults - Injected at start","topic":"","payload":"Setting Environment Variables","payloadType":"str","repeat":"","crontab":"","once":true,"x":210,"y":120,"wires":[["642ef310.2244ec"]]},{"id":"f11083e5.3b9fd","type":"function","z":"6b16186d.8d6808","name":"Set Environment Variables: UPDATE THIS","func":"//  ###### User Defined Variables ######\n\n//const API_KEY = ''; //Your API KEY (Keep this secret. Do not publish)\nconst API_KEY = msg.apikey; // from credentials node to keep secret\n\nvar shard = 'api'; // https://n149.meraki.com , where n149 represent the shard number. This is defined to avoid redirect issues.\n\n\n// These \"test params\" variables are used by the testing buttons. In production, these paramters should be passed in the URL.\n\nvar orgId = '614741349136073749'; // PVT Sandbox\nvar netId = 'L_614741349136076851'; // PVT Sandbox\n\n/*\nvar netId_delete = \"L_643451796760560270\"; // some network to delete as a test. Be carefull!\nvar serial = 'Q2JD-EFUM-ZQMP'; // Your default serial numer of device\nvar ssidNum = '0'; // default SSID to return\nvar portNum = '1'; // default switch port number to return\nvar srId = '46a71259-735f-4476-9d1e-08d5b017cbde';\nvar vlanId = '1';\n*/\n\n\n// ###### Set and Get flow variables ######\n\n\n// Assign to flow Context \nflow.set('apiKey', API_KEY); // pulling API key via \"secret\" node. This avoides publishing the API key when sharing the flow\nflow.set('shard', shard);\n\n\nflow.set('orgId', orgId);\nflow.set('netId', netId);\n\n/*\nflow.set('serial', serial);\nflow.set('ssidNum', ssidNum);\nflow.set('portNum', portNum);\nflow.set('srId', srId);\nflow.set('vlanId', vlanId);\nflow.set('netId_delete', netId_delete);\n*/\n\n// confirm changes were made\nvar settings = {};\n\n\nsettings.apiKey = flow.get('apiKey');\nsettings.shard = flow.get('shard');\n\nsettings.orgId = flow.get('orgId');\nsettings.netId = flow.get('netId');\nsettings.serial = flow.get('serial');\nsettings.ssidNum = flow.get('ssidNum');\nsettings.portNum = flow.get('portNum');\nsettings.srId = flow.get('srId');\nsettings.vlanId = flow.get('vlanId');\nsettings.shard = flow.get('netId_delete');\n\nmsg.payload = settings;\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":160,"wires":[["d530433f.2358a"]]},{"id":"d530433f.2358a","type":"debug","z":"6b16186d.8d6808","name":"Flow Env Variables","active":true,"console":"false","complete":"true","x":830,"y":160,"wires":[]},{"id":"c0dd7037.1d0a","type":"comment","z":"6b16186d.8d6808","name":"API Key and Environment variables: UPDATE THE NODE!","info":"","x":250,"y":80,"wires":[]},{"id":"642ef310.2244ec","type":"credentials","z":"6b16186d.8d6808","name":"API KEY - UPDATE THIS","props":[{"value":"apikey","type":"msg"}],"x":510,"y":120,"wires":[["f11083e5.3b9fd"]]},{"id":"66161e01.88398","type":"inject","z":"6b16186d.8d6808","name":"Test all HTTP servers","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":"","x":160,"y":260,"wires":[["580cae3b.3a592"]]},{"id":"580cae3b.3a592","type":"function","z":"6b16186d.8d6808","name":"test params","func":"msg.req = {};\nmsg.req.params = {};\nmsg.req.params.netId = flow.get('netId');\n\n// Sample Data\nmsg.payload = {\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":260,"wires":[["6d25f10e.6a6f6"]]},{"id":"6d25f10e.6a6f6","type":"function","z":"6b16186d.8d6808","name":"Meraki API - List HTTP servers","func":"// Set Variables\nvar apiKey = flow.get('apiKey');\nvar shard = flow.get('shard');\nvar netId = msg.req.params.netId;\n\n// API Call\nmsg.headers = {\n    \"X-Cisco-Meraki-API-Key\": apiKey\n};\nmsg.url = \"https://mp.meraki.com/api/v0/networks/\"+netId+\"/httpServers/\";\nmsg.method = \"get\";\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":260,"wires":[["afd0fdb.f8cef"]]},{"id":"afd0fdb.f8cef","type":"http request","z":"6b16186d.8d6808","name":"","method":"use","ret":"obj","url":"","tls":"","x":810,"y":260,"wires":[["7902f6cc.4ef108","4167e4ae.171aec"]]},{"id":"7902f6cc.4ef108","type":"debug","z":"6b16186d.8d6808","name":"List HTTP servers","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":830,"y":300,"wires":[]},{"id":"b59c5362.3b9ff","type":"split","z":"6b16186d.8d6808","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":170,"y":360,"wires":[["18c2676b.89f1d9","bf63a653.1a59e8"]]},{"id":"18c2676b.89f1d9","type":"debug","z":"6b16186d.8d6808","name":"Split Servers","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":190,"y":400,"wires":[]},{"id":"bf63a653.1a59e8","type":"function","z":"6b16186d.8d6808","name":"Format Webhook API","func":"msg.url = msg.payload.url;\nmsg.method = \"post\"\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":360,"wires":[["339c4bed.3674c4","5168fb9.bb87304"]]},{"id":"339c4bed.3674c4","type":"debug","z":"6b16186d.8d6808","name":"webhook test - request","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":430,"y":400,"wires":[]},{"id":"d553a729.13cb08","type":"function","z":"6b16186d.8d6808","name":"Webhook Samples","func":"var samples = [];\nsamples[0] = {\n  \"alertData\" : {\n    \"uplink\" : \"1\"\n  },\n  \"alertId\" : \"643451796765321200\",\n  \"alertType\" : \"Uplink status changed\",\n  \"deviceMac\" : \"e0:55:3d:6c:c1:7a\",\n  \"deviceName\" : \"MX65 c1:7a\",\n  \"deviceSerial\" : \"Q2QN-58EA-7NTY\",\n  \"deviceUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/wG13Jdpc/manage/nodes/new_wired_status\",\n  \"networkId\" : \"L_643451796760561218\",\n  \"networkName\" : \"Dexter LaBora - Home\",\n  \"networkUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/wG13Jdpc/manage/nodes/wired_status\",\n  \"occurredAt\" : 1.536919674837E9,\n  \"organizationId\" : \"306267\",\n  \"organizationName\" : \"Dexter's Laboratory\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/3ZZIub/manage/organization/overview\",\n  \"sentAt\" : 1.536919744995202E9\n};\n\nsamples[1] = {\n  \"alertData\" : {\n    \"description\" : \"\",\n    \"portDesc\" : \"Office / 3 Trunk port on VLAN 1\",\n    \"portNum\" : 3,\n    \"prevStatus\" : 0,\n    \"status\" : 590355\n  },\n  \"alertId\" : \"643451796765250686\",\n  \"alertType\" : \"Switch port connected\",\n  \"deviceMac\" : \"88:15:44:e3:58:2b\",\n  \"deviceName\" : \"Office\",\n  \"deviceSerial\" : \"Q2HP-6Z82-NGDM\",\n  \"deviceUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/-FqWScpc/manage/nodes/new_list/149624931440683\",\n  \"networkId\" : \"L_643451796760561218\",\n  \"networkName\" : \"Dexter LaBora - Home\",\n  \"networkUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/-FqWScpc/manage/nodes/list\",\n  \"occurredAt\" : 1535710029,\n  \"organizationId\" : \"306267\",\n  \"organizationName\" : \"Dexter's Laboratory\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/3ZZIub/manage/organization/overview\",\n  \"sentAt\" : 1.5357100936038907E9\n}\n\nsamples[2] = {\n  \"alertData\" : {\n    \"connectivity\" : \"true\",\n    \"peerContact\" : \"34.251.167.98:39105\",\n    \"peerIdent\" : \"9233acc6d2a2f38172c6b49bb14b4071\",\n    \"vpnType\" : \"site-to-site\"\n  },\n  \"alertId\" : \"643451796765320915\",\n  \"alertType\" : \"VPN connectivity changed\",\n  \"deviceMac\" : \"e0:55:3d:6c:c1:7a\",\n  \"deviceName\" : \"MX65 c1:7a\",\n  \"deviceSerial\" : \"Q2QN-58EA-7NTY\",\n  \"deviceUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/wG13Jdpc/manage/nodes/new_wired_status\",\n  \"networkId\" : \"L_643451796760561218\",\n  \"networkName\" : \"Dexter LaBora - Home\",\n  \"networkUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/wG13Jdpc/manage/nodes/wired_status\",\n  \"occurredAt\" : 1.536915561607E9,\n  \"organizationId\" : \"306267\",\n  \"organizationName\" : \"Dexter's Laboratory\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/3ZZIub/manage/organization/overview\",\n  \"sentAt\" : 1.5369156133600955E9\n}\n\nsamples[3] = {\n  \"alertId\" : \"643451796765321209\",\n  \"alertType\" : \"APs came up\",\n  \"deviceMac\" : \"88:15:44:60:1c:1a\",\n  \"deviceName\" : \"Entrance\",\n  \"deviceSerial\" : \"Q2MD-KT3R-YRAD\",\n  \"deviceUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/I9xFFbpc/manage/nodes/new_list/149624922840090\",\n  \"networkId\" : \"L_643451796760561218\",\n  \"networkName\" : \"Dexter LaBora - Home\",\n  \"networkUrl\" : \"https://n143.meraki.com/Dexter-LaBora-Ho/n/I9xFFbpc/manage/nodes/list\",\n  \"occurredAt\" : 1536919822,\n  \"organizationId\" : \"306267\",\n  \"organizationName\" : \"Dexter's Laboratory\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/3ZZIub/manage/organization/overview\",\n  \"sentAt\" : 1.5369198844028134E9\n}\n\nmsg.payload = samples;\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":560,"wires":[["406834f1.76adec"]]},{"id":"f6448765.d0ca88","type":"http request","z":"6b16186d.8d6808","name":"","method":"use","ret":"txt","url":"","tls":"","x":350,"y":780,"wires":[["93f42164.6e8ee"]]},{"id":"93f42164.6e8ee","type":"debug","z":"6b16186d.8d6808","name":"webhook sample response","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":580,"y":780,"wires":[]},{"id":"406834f1.76adec","type":"split","z":"6b16186d.8d6808","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1470,"y":560,"wires":[[]]},{"id":"b5924399.6481d","type":"comment","z":"6b16186d.8d6808","name":"List all HTTP webhook servers","info":"","x":160,"y":220,"wires":[]},{"id":"87f5859f.20d2e8","type":"comment","z":"6b16186d.8d6808","name":"Format API call for each HTTP server","info":"","x":190,"y":320,"wires":[]},{"id":"792445a8.f360ec","type":"comment","z":"6b16186d.8d6808","name":"Send request for each sample object","info":"","x":160,"y":740,"wires":[]},{"id":"3e15d9ca.718646","type":"function","z":"6b16186d.8d6808","name":"Sample - Motion Alert","func":"var timestamp = new Date().toISOString();\nmsg.payload = {\n  \"alertData\": {\n    \"timestamp\": timestamp,\n    \"roi\": { \"top\": 0, \"left\": 0, \"width\": 60, \"height\": 33 }\n  },\n  \"alertId\": \"643451796765275003\",\n  \"alertType\": \"Motion detected\",\n  \"occurredAt\": timestamp,\n  \"sentAt\": timestamp,\n  \"organizationId\": \"123456\",\n  \"organizationName\": \"Organization\",\n  \"organizationUrl\": \"https://n1.meraki.com/o/.../organization/overview\",\n  \"networkId\": \"L_123456789123456789\",\n  \"networkName\": \"Network - 1\",\n  \"networkUrl\": \"https://n1.meraki.com/...\",\n  \"deviceSerial\": \"AAAA-BBBB-CCCC\",\n  \"deviceMac\": \"00:11:22:33:44:55\",\n  \"deviceName\": \"MV12w-06\",\n  \"deviceUrl\": \"https://n1.meraki.com/.../manage/nodes/new_list/...\",\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":260,"y":540,"wires":[["d1c08eb5.687b5"]]},{"id":"4039364f.1e51b8","type":"function","z":"6b16186d.8d6808","name":"Sample - Switch Port Connected","func":"var timestamp = new Date().toISOString();\nmsg.payload = {\n  \"alertData\" : {\n    \"description\" : \"\",\n    \"portDesc\" : \"Office / 3 Trunk port on VLAN 1\",\n    \"portNum\" : 3,\n    \"prevStatus\" : 0,\n    \"status\" : 590355\n  },\n  \"alertId\" : \"643451796765250686\",\n  \"alertType\" : \"Switch port connected\",\n  \"deviceMac\" : \"00:11:22:33:44:55\",\n  \"deviceName\" : \"Office\",\n  \"deviceSerial\" : \"AAAA-BBBB-CCCC\",\n  \"deviceUrl\" : \"https://n1.meraki.com/.../manage/nodes/new_list/...\",\n  \"networkId\" : \"L_123456789123456789\",\n  \"networkName\" : \"Network - 1\",\n  \"networkUrl\" : \"https://n1.meraki.com/...\",\n  \"occurredAt\" : timestamp,\n  \"organizationId\" : \"123456\",\n  \"organizationName\" : \"Organization\",\n  \"organizationUrl\" : \"https://n1.meraki.com/o/.../organization/overview\",\n  \"sentAt\" : timestamp,\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":580,"wires":[["d1c08eb5.687b5"]]},{"id":"e67a6337.94766","type":"function","z":"6b16186d.8d6808","name":"Sample - Settings Changed: Alerts for VPN","func":"var timestamp = new Date().toISOString();\nmsg.payload = {\n  \"alertData\" : {\n    \"changes\" : {\n      \"vpnConnectivityChange\" : {\n        \"changedBy\" : \"User (user@example.com)\",\n        \"label\" : \"A VPN connection comes up or goes down\",\n        \"newText\" : \"{\\\"enabled\\\":false}\",\n        \"oldText\" : \"{\\\"enabled\\\":true}\"\n      }\n    },\n    \"name\" : \"Alerts\",\n    \"url\" : \"/manage/configure/alerts\",\n    \"userId\" : 500692\n  },\n  \"alertId\" : \"643451796765252351\",\n  \"alertType\" : \"Settings changed\",\n  \"networkId\" : \"L_123456789123456789\",\n  \"networkName\" : \"Network - 1\",\n  \"networkUrl\" : \"https://n1.meraki.com/...\",\n  \"occurredAt\" : timestamp,\n  \"organizationId\" : \"123456\",\n  \"organizationName\" : \"Organization\",\n  \"organizationUrl\" : \"https://n143.meraki.com/o/.../organization/overview\",\n  \"sentAt\" : timestamp,\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n}\n;\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":620,"wires":[["d1c08eb5.687b5"]]},{"id":"fdfc42cf.699ab","type":"function","z":"6b16186d.8d6808","name":"Sample - VPN connectivity changed","func":"var timestamp = new Date().toISOString();\nmsg.payload = {\n  \"alertData\" : {\n    \"connectivity\" : \"false\",\n    \"peerContact\" : \"34.251.167.98:39105\",\n    \"peerIdent\" : \"9233acc6d2a2f38172c6b49bb14b4071\",\n    \"vpnType\" : \"site-to-site\"\n  },\n  \"alertId\" : \"643451796765320915\",\n  \"alertType\" : \"VPN connectivity changed\",\n  \"deviceMac\" : \"00:11:22:33:44:55\",\n  \"deviceName\" : \"MX65 – 1\",\n  \"deviceSerial\" : \"AAAA-BBBB-CCCC\",\n  \"deviceUrl\" : \"https://n1.meraki.com/.../manage/nodes/new_wired_status\",\n  \"networkId\" : \"L_123456789123456789\",\n  \"networkName\" : \"Network - 1\",\n  \"networkUrl\" : \"https://n1.meraki.com/...\",\n  \"occurredAt\" : timestamp,\n  \"organizationId\" : \"123456\",\n  \"organizationName\" : \"Organization\",\n  \"organizationUrl\" : \"https://n1.meraki.com/o/.../organization/overview\",\n  \"sentAt\" : timestamp,\n  \"sharedSecret\" : \"asdf1234\",\n  \"version\" : \"0.1\"\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":660,"wires":[["d1c08eb5.687b5"]]},{"id":"d1c08eb5.687b5","type":"link out","z":"6b16186d.8d6808","name":"","links":["35ccc2ea.e9b9fe"],"x":615,"y":600,"wires":[]},{"id":"2abca41f.47bb9c","type":"link in","z":"6b16186d.8d6808","name":"Alert Samples","links":["5168fb9.bb87304"],"x":75,"y":600,"wires":[["3e15d9ca.718646","4039364f.1e51b8","e67a6337.94766","fdfc42cf.699ab"]]},{"id":"724a12a6.1b711c","type":"delay","z":"6b16186d.8d6808","name":"","pauseType":"rate","timeout":"1","timeoutUnits":"seconds","rate":"5","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":190,"y":780,"wires":[["f6448765.d0ca88","a8d447aa.6dd708"]]},{"id":"fae6cef3.49e4f","type":"link in","z":"6b16186d.8d6808","name":"Prepare sample alert request","links":["4167e4ae.171aec"],"x":75,"y":360,"wires":[["b59c5362.3b9ff"]]},{"id":"5168fb9.bb87304","type":"link out","z":"6b16186d.8d6808","name":"http servers API request","links":["2abca41f.47bb9c"],"x":595,"y":360,"wires":[]},{"id":"4167e4ae.171aec","type":"link out","z":"6b16186d.8d6808","name":"List HTTP servers","links":["fae6cef3.49e4f"],"x":955,"y":260,"wires":[]},{"id":"35ccc2ea.e9b9fe","type":"link in","z":"6b16186d.8d6808","name":"Send Sample Alerts","links":["d1c08eb5.687b5"],"x":80,"y":780,"wires":[["724a12a6.1b711c"]]},{"id":"5941e8d0.2b1ad8","type":"comment","z":"6b16186d.8d6808","name":"Sample Meraki Alerts","info":"","x":140,"y":480,"wires":[]},{"id":"a8d447aa.6dd708","type":"debug","z":"6b16186d.8d6808","name":"webhook sample request","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":400,"y":840,"wires":[]},{"id":"a760fada.a6a488","type":"mqtt in","z":"e67a4420.6ea588","name":"/merakimv/Q2GV-BMHV-2GFX/0","topic":"/merakimv/Q2GV-BMHV-2GFX/0","qos":"0","broker":"e0a35678.cf8a18","x":170,"y":220,"wires":[["d0884f01.8b1ce"]]},{"id":"fde4e0c6.78f9b","type":"debug","z":"e67a4420.6ea588","name":"MV12-2GFX","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":670,"y":220,"wires":[]},{"id":"d0884f01.8b1ce","type":"json","z":"e67a4420.6ea588","name":"","property":"payload","action":"","pretty":false,"x":410,"y":220,"wires":[["fde4e0c6.78f9b","a6417212.6b7d4"]]},{"id":"a6417212.6b7d4","type":"rbe","z":"e67a4420.6ea588","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"payload.counts.person","x":410,"y":260,"wires":[["e5ae79d9.1a3fd8","f29aa781.5d8078"]]},{"id":"e5ae79d9.1a3fd8","type":"debug","z":"e67a4420.6ea588","name":"rbe - mv12-2GFX/0","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":650,"y":260,"wires":[]},{"id":"b80d06f.326daf8","type":"mqtt in","z":"e67a4420.6ea588","name":"#","topic":"#","qos":"0","broker":"e0a35678.cf8a18","x":90,"y":120,"wires":[["d6cf868c.c5a998"]]},{"id":"d5d5fca6.
4431e","type":"mqtt in","z":"e67a4420.6ea588","name":"/merakimv/Q2GV-658H-XUKP/0","topic":"/merakimv/Q2GV-BMHV-2GFX/0","qos":"0","broker":"e0a35678.cf8a18","x":170,"y":440,"wires":[["ac0d150a.6f4238"]]},{"id":"f62e4253.10f84","type":"debug","z":"e67a4420.6ea588","name":"MV12w-desk-06","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":660,"y":440,"wires":[]},{"id":"ac0d150a.6f4238","type":"json","z":"e67a4420.6ea588","name":"","property":"payload","action":"","pretty":false,"x":410,"y":440,"wires":[["f62e4253.10f84","35dafe8b.e36622"]]},{"id":"3f2f4366.d1574c","type":"debug","z":"e67a4420.6ea588","name":"ALL #","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":690,"y":120,"wires":[]},{"id":"d6cf868c.c5a998","type":"json","z":"e67a4420.6ea588","name":"","property":"payload","action":"","pretty":false,"x":410,"y":120,"wires":[["3f2f4366.d1574c","95d7e7ae.203148"]]},{"id":"95d7e7ae.203148","type":"rbe","z":"e67a4420.6ea588","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"payload.counts","x":410,"y":160,"wires":[["c2d823a9.3f7d8","bb88fc76.f6546"]]},{"id":"c2d823a9.3f7d8","type":"debug","z":"e67a4420.6ea588","name":"rbe - all","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":680,"y":160,"wires":[]},{"id":"f29aa781.5d8078","type":"link out","z":"e67a4420.6ea588","name":"MV12 2gfx","links":[],"x":515,"y":280,"wires":[]},{"id":"f721d074.ce0b5","type":"link out","z":"e67a4420.6ea588","name":"Alerts - MV12 XUKP/0","links":[],"x":535,"y":520,"wires":[]},{"id":"bb88fc76.f6546","type":"link out","z":"e67a4420.6ea588","name":"MV #","links":["c898ee24.9f7d2"],"x":515,"y":180,"wires":[]},{"id":"a088605a.aa8ff","type":"debug","z":"e67a4420.6ea588","name":"Mosca Broker","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":340,"y":80,"wires":[]},{"id":"35dafe8b.e36622","type":"rbe","z":"e67a4420.6ea588","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"payload.counts","x":420,"y":500,"wires":[["f721d074.ce0b5","cbd9d563.e40d38"]]},{"id":"ce77f2a8.ebeb5","type":"mqtt in","z":"e67a4420.6ea588","name":"/merakimv/Q2GV-658H-XUKP/#","topic":"/merakimv/Q2GV-BMHV-2GFX/#","qos":"0","broker":"e0a35678.cf8a18","x":170,"y":340,"wires":[["28f5db9e.dd9704"]]},{"id":"28f5db9e.dd9704","type":"json","z":"e67a4420.6ea588","name":"","property":"payload","action":"","pretty":false,"x":410,"y":340,"wires":[["66fb24b7.2458bc","3232f0b2.0ac1f"]]},{"id":"66fb24b7.2458bc","type":"debug","z":"e67a4420.6ea588","name":"MV12w-XUKP","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":660,"y":340,"wires":[]},{"id":"cbd9d563.e40d38","type":"debug","z":"e67a4420.6ea588","name":"MV12w-desk-06","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":660,"y":500,"wires":[]},{"id":"9fdc9388.1904d","type":"mosca in","z":"e67a4420.6ea588","mqtt_port":1883,"mqtt_ws_port":8080,"name":"","username":"","password":"","dburl":"","x":130,"y":80,"wires":[["a088605a.aa8ff"]]},{"id":"73ac5db8.cb3844","type":"switch","z":"e67a4420.6ea588","name":"1,2,3 objects","property":"payload.counts.person","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"1","vt":"str"},{"t":"eq","v":"2","vt":"str"},{"t":"gte","v":"3","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":410,"y":720,"wires":[["ffd92e63.b2ff1"],["981c7024.3d42"],["a46f584f.ba7af8"],["3b127820.9642b8"]]},{"id":"1fe596bf.b795a9","type":"delay","z":"e67a4420.6ea588","name":"","pauseType":"rate","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":240,"y":720,"wires":[["73ac5db8.cb3844"]]},{"id":"981c7024.3d42","type":"function","z":"e67a4420.6ea588","name":"Message: Low Density","func":"\nmsg.data = msg.payload;\nmsg.payload = \"Low Density\"\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":680,"wires":[["edd710a6.49df2"]]},{"id":"a46f584f.ba7af8","type":"function","z":"e67a4420.6ea588","name":"Message: Medium Density","func":"\nmsg.data = msg.payload;\nmsg.payload = \"Medium Density\"\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":720,"wires":[["edd710a6.49df2"]]},{"id":"3b127820.9642b8","type":"function","z":"e67a4420.6ea588","name":"Message: High Density","func":"\nmsg.data = msg.payload;\nmsg.payload = \"High Density\"\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":760,"wires":[["edd710a6.49df2"]]},{"id":"edd710a6.49df2","type":"link out","z":"e67a4420.6ea588","name":"Density Logic - Out","links":["3d7cb6df.df429a","bfd87def.f0f3e"],"x":920,"y":720,"wires":[]},{"id":"c898ee24.9f7d2","type":"link in","z":"e67a4420.6ea588","name":"Density Logic","links":["bb88fc76.f6546"],"x":95,"y":720,"wires":[["1fe596bf.b795a9"]]},{"id":"3232f0b2.0ac1f","type":"rbe","z":"e67a4420.6ea588","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"payload.counts","x":410,"y":380,"wires":[["6d63e42e.88fabc","855cbeb2.4756c"]]},{"id":"6d63e42e.88fabc","type":"link out","z":"e67a4420.6ea588","name":"Alerts - MV12 XUKP/#","links":[],"x":515,"y":400,"wires":[]},{"id":"855cbeb2.4756c","type":"debug","z":"e67a4420.6ea588","name":"rbe - mv12-XUKP/#","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":650,"y":380,"wires":[]},{"id":"62e4afcd.7ca3c","type":"debug","z":"e67a4420.6ea588","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":290,"y":840,"wires":[]},{"id":"3d7cb6df.df429a","type":"link in","z":"e67a4420.6ea588","name":"Density Workflow","links":["edd710a6.49df2"],"x":90,"y":840,"wires":[["62e4afcd.7ca3c"]]},{"id":"ffd92e63.b2ff1","type":"function","z":"e67a4420.6ea588","name":"Message: Empty","func":"\nmsg.data = msg.payload;\nmsg.payload = \"Nobody home\"\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":640,"wires":[["edd710a6.49df2"]]},{"id":"1b44e645.69892a","type":"http in","z":"e67a4420.6ea588","name":"","url":"/sharpless","method":"get","upload":false,"swaggerDoc":"","x":120,"y":980,"wires":[["31bb233a.1596dc"]]},{"id":"3e506f08.5b3bb","type":"http response","z":"e67a4420.6ea588","name":"","x":550,"y":980,"wires":[]},{"id":"d38b698b.6a1b98","type":"comment","z":"e67a4420.6ea588","name":"VueJS App","info":"","x":100,"y":940,"wires":[]},{"id":"31bb233a.1596dc","type":"template","z":"e67a4420.6ea588","name":"VueJS SocketIO","field":"payload","fieldType":"msg","format":"html","syntax":"plain","template":"\n<html>\n\n<head>\n\n</head>\n\n<body>\n\n    <div id=\"container\" class=\"container\">\n        <div class=\"page-header\">\n          <h1>VueJS + SocketIO <small>Real-time server communication</small></h1>\n        </div>\n        <p>Connected: <b :style=\"{ color: isConnected ? 'green' : 'red'}\">{{ isConnected }}</b></p>\n        \n        <br>\n        \n        \n        <br>\n        <h1 :style=\"{ color: value? 'High Density' : 'red'}\">{{ value }}</h1>\n\n\n    </div>\n\n    <script src=\"https://unpkg.com/vue\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js\"></script>\n    <!-- Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n    <!--link rel=\"stylesheet\" href={{{css}}} integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"-->\n\n    <script>\n\n        var app = new Vue({\n            el: '#container',\n            data() {\n                return {\n                    form: {\n                        input1: '',\n                    },\n                    value: 'hello world',\n                    isConnected: false,\n\n                }\n            },\n            computed: {\n                socket() {\n                    return socket = io('' , {path: '/sharpless/socket.io'});\n                }\n            },\n            methods: {\n                onSubmit() {\n                    let data = this.form;\n                    console.log('submitting data', data);\n                    //this.socket.send(data);\n                    this.socket.send(data);\n\n                },\n                updateMsg(msg) {\n                    this.value = msg;\n                }\n            },\n            mounted() {\n\n                this.socket.on('connect', function (s) {\n                    console.log('connect');\n                    app.updateMsg('connected');\n                    app.isConnected = true;\n                });\n                this.socket.on('disconnect', function (s) {\n                    console.log('disconnected');\n                    app.isConnected = false;\n                });\n                this.socket.on('message', function (data) {\n                    console.log('message:', data);\n                    app.value = data;\n                });\n\n            }\n        });\n\n\n\n    </script>\n\n</body>\n\n</html>","output":"str","x":360,"y":980,"wires":[["3e506f08.5b3bb"]]},{"id":"9dec3880.05b148","type":"debug","z":"e67a4420.6ea588","name":"socket","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":490,"y":1100,"wires":[]},{"id":"aad59c87.97df4","type":"inject","z":"e67a4420.6ea588","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":1060,"wires":[["728d6ae8.656734"]]},{"id":"bfd87def.f0f3e","type":"link in","z":"e67a4420.6ea588","name":"","links":["edd710a6.49df2"],"x":75,"y":1020,"wires":[[]]},{"id":"b2173cd7.53c5e","type":"debug","z":"465a0adf.132804","name":"","active":true,"console":"false","complete":"true","x":235,"y":59,"wires":[]},{"id":"5674b09e.492c1","type":"http in","z":"465a0adf.132804","name":"","url":"/sio","method":"get","swaggerDoc":"","x":104,"y":317,"wires":[["d7f1299e.780ed8"]]},{"id":"fe37b2ed.cb74b","type":"http response","z":"465a0adf.132804","name":"","x":402,"y":317,"wires":[]},{"id":"339b7eea.718ec2","type":"socketio-in","z":"465a0adf.132804","name":"","server":"56816d8d.0b02c4","rules":[],"x":75,"y":178,"wires":[["b2173cd7.53c5e","dfa87870.4628d8"]]},{"id":"3aa25431.3ac1dc","type":"socketio-out","z":"465a0adf.132804","name":"","server":"56816d8d.0b02c4","x":696,"y":235,"wires":[]},{"id":"dfa87870.4628d8","type":"switch","z":"465a0adf.132804","name":"checkEvent","property":"socketIOEvent","propertyType":"msg","rules":[{"t":"eq","v":"new message","vt":"str"},{"t":"eq","v":"add user","vt":"str"},{"t":"eq","v":"typing","vt":"str"},{"t":"eq","v":"stop typing","vt":"str"},{"t":"eq","v":"disconnect","vt":"str"}],"checkall":"false","outputs":5,"x":258,"y":178,"wires":[["57206a67.771fd4"],["259b1e93.362522","c32a084f.9a8718"],["59d7d1a4.081ba"],["59d7d1a4.081ba"],["f8bc07df.cbc898"]]},{"id":"bb32ae5e.838fe","type":"comment","z":"465a0adf.132804","name":"Switch output","info":"1 new message\n2 add user\n3 typing\n4 stop typing\n5 disconnect","x":259,"y":233,"wires":[]},{"id":"259b1e93.362522","type":"function","z":"465a0adf.132804","name":"add user","func":"var numUsers = flow.get ('numUsers') || 0;\n++numUsers;\nflow.set ('numUsers', numUsers);\nmsg.socketIOEvent = 'login';\nmsg.payload = {\n      numUsers: numUsers\n    };\nRED.util.setMessageProperty(msg, \"socketIOEmit\", \"emit\", true);\nreturn msg;","outputs":1,"noerr":0,"x":462,"y":135,"wires":[["3aa25431.3ac1dc","1b4885b.3ac2e7a"]]},{"id":"1b4885b.3ac2e7a","type":"debug","z":"465a0adf.132804","name":"Accept/Disconnect user","active":true,"console":"false","complete":"true","x":727,"y":134,"wires":[]},{"id":"ed538beb.f69ba8","type":"debug","z":"465a0adf.132804","name":"say to other","active":true,"console":"false","complete":"true","x":686,"y":168,"wires":[]},{"id":"c32a084f.9a8718","type":"function","z":"465a0adf.132804","name":"add user","func":"var numUsers = flow.get ('numUsers') || 0;\nmsg.socketIOEvent = 'user joined';\nRED.util.setMessageProperty(msg, \"socketIOAddStaticProperties\", {username: msg.payload}, true);\nmsg.payload = {\n      username: msg.payload,\n      numUsers: numUsers\n    };\nRED.util.setMessageProperty(msg, \"socketIOEmit\", \"broadcast.emit\", true);\nreturn msg;","outputs":1,"noerr":0,"x":462,"y":168,"wires":[["3aa25431.3ac1dc","ed538beb.f69ba8"]]},{"id":"4b48d2ea.acd8cc","type":"debug","z":"465a0adf.132804","name":"tayping","active":true,"console":"false","complete":"true","x":676,"y":201,"wires":[]},{"id":"59d7d1a4.081ba","type":"function","z":"465a0adf.132804","name":"typing","func":"msg.payload = {username: msg.socketIOStaticProperties.username};\nRED.util.setMessageProperty(msg, \"socketIOEmit\", \"broadcast.emit\", true);\nreturn msg;","outputs":1,"noerr":0,"x":452,"y":199,"wires":[["4b48d2ea.acd8cc","3aa25431.3ac1dc"]]},{"id":"f8bc07df.cbc898","type":"function","z":"465a0adf.132804","name":"disconnect","func":"var numUsers = flow.get ('numUsers') || 0;\n--numUsers;\nflow.set ('numUsers', numUsers);\nmsg.socketIOEvent = 'user left';\nmsg.payload = {\n        username: msg.socketIOStaticProperties.username,\n        numUsers: numUsers\n      };\n//RED.util.setMessageProperty(msg, \"socketIOEmit\", \"broadcast.emit\", true);\nreturn msg;","outputs":1,"noerr":0,"x":472,"y":231,"wires":[["1b4885b.3ac2e7a","3aa25431.3ac1dc"]]},{"id":"57206a67.771fd4","type":"function","z":"465a0adf.132804","name":"new message","func":"msg.payload = {username: msg.socketIOStaticProperties.username,\n                message: msg.payload\n};\nRED.util.setMessageProperty(msg, \"socketIOEmit\", \"broadcast.emit\", true);\nreturn msg;","outputs":1,"noerr":0,"x":482,"y":102,"wires":[["3aa25431.3ac1dc","2b93f3a.d66710c"]]},{"id":"2b93f3a.d66710c","type":"debug","z":"465a0adf.132804","name":"Message","active":true,"console":"false","complete":"true","x":678,"y":101,"wires":[]},{"id":"d7f1299e.780ed8","type":"template","z":"465a0adf.132804","name":"Chat page","field":"payload","fieldType":"msg","format":"html","syntax":"plain","template":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Socket.IO Chat Example</title>\n  <style>\n\t/* Fix user-agent */\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-weight: 300;\n  -webkit-font-smoothing: antialiased;\n}\n\nhtml, input {\n  font-family:\n    \"HelveticaNeue-Light\",\n    \"Helvetica Neue Light\",\n    \"Helvetica Neue\",\n    Helvetica,\n    Arial,\n    \"Lucida Grande\",\n    sans-serif;\n}\n\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\nul {\n  list-style: none;\n  word-wrap: break-word;\n}\n\n/* Pages */\n\n.pages {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n.page {\n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n\n/* Login Page */\n\n.login.page {\n  background-color: #000;\n}\n\n.login.page .form {\n  height: 100px;\n  margin-top: -100px;\n  position: absolute;\n\n  text-align: center;\n  top: 50%;\n  width: 100%;\n}\n\n.login.page .form .usernameInput {\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid #fff;\n  outline: none;\n  padding-bottom: 15px;\n  text-align: center;\n  width: 400px;\n}\n\n.login.page .title {\n  font-size: 200%;\n}\n\n.login.page .usernameInput {\n  font-size: 200%;\n  letter-spacing: 3px;\n}\n\n.login.page .title, .login.page .usernameInput {\n  color: #fff;\n  font-weight: 100;\n}\n\n/* Chat page */\n\n.chat.page {\n  display: none;\n}\n\n/* Font */\n\n.messages {\n  font-size: 150%;\n}\n\n.inputMessage {\n  font-size: 100%;\n}\n\n.log {\n  color: gray;\n  font-size: 70%;\n  margin: 5px;\n  text-align: center;\n}\n\n/* Messages */\n\n.chatArea {\n  height: 100%;\n  padding-bottom: 60px;\n}\n\n.messages {\n  height: 100%;\n  margin: 0;\n  overflow-y: scroll;\n  padding: 10px 20px 10px 20px;\n}\n\n.message.typing .messageBody {\n  color: gray;\n}\n\n.username {\n  font-weight: 700;\n  overflow: hidden;\n  padding-right: 15px;\n  text-align: right;\n}\n\n/* Input */\n\n.inputMessage {\n  border: 10px solid #000;\n  bottom: 0;\n  height: 60px;\n  left: 0;\n  outline: none;\n  padding-left: 10px;\n  position: absolute;\n  right: 0;\n  width: 100%;\n}  </style>\n</head>\n<body>\n  <ul class=\"pages\">\n    <li class=\"chat page\">\n      <div class=\"chatArea\">\n        <ul class=\"messages\"></ul>\n      </div>\n      <input class=\"inputMessage\" placeholder=\"Type here...\"/>\n    </li>\n    <li class=\"login page\">\n      <div class=\"form\">\n        <h3 class=\"title\">What's your nickname?</h3>\n        <input class=\"usernameInput\" type=\"text\" maxlength=\"14\" />\n      </div>\n    </li>\n  </ul>\n\n  <script src=\"https://code.jquery.com/jquery-1.10.2.min.js\"></script>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script >$(function() {\n  var FADE_TIME = 150; // ms\n  var TYPING_TIMER_LENGTH = 400; // ms\n  var COLORS = [\n    '#e21400', '#91580f', '#f8a700', '#f78b00',\n    '#58dc00', '#287b00', '#a8f07a', '#4ae8c4',\n    '#3b88eb', '#3824aa', '#a700ff', '#d300e7'\n  ];\n\n  // Initialize variables\n  var $window = $(window);\n  var $usernameInput = $('.usernameInput'); // Input for username\n  var $messages = $('.messages'); // Messages area\n  var $inputMessage = $('.inputMessage'); // Input message input box\n\n  var $loginPage = $('.login.page'); // The login page\n  var $chatPage = $('.chat.page'); // The chatroom page\n\n  // Prompt for setting a username\n  var username;\n  var connected = false;\n  var typing = false;\n  var lastTypingTime;\n  var $currentInput = $usernameInput.focus();\n\n  var socket = io('/test/socket.io');\n\n  function addParticipantsMessage (data) {\n    var message = '';\n    if (data.numUsers === 1) {\n      message += \"there's 1 participant\";\n    } else {\n      message += \"there are \" + data.numUsers + \" participants\";\n    }\n    log(message);\n  }\n\n  // Sets the client's username\n  function setUsername () {\n    username = cleanInput($usernameInput.val().trim());\n\n    // If the username is valid\n    if (username) {\n      $loginPage.fadeOut();\n      $chatPage.show();\n      $loginPage.off('click');\n      $currentInput = $inputMessage.focus();\n\n      // Tell the server your username\n      socket.emit('add user', username);\n    }\n  }\n\n  // Sends a chat message\n  function sendMessage () {\n    var message = $inputMessage.val();\n    // Prevent markup from being injected into the message\n    message = cleanInput(message);\n    // if there is a non-empty message and a socket connection\n    if (message && connected) {\n      $inputMessage.val('');\n      addChatMessage({\n        username: username,\n        message: message\n      });\n      // tell server to execute 'new message' and send along one parameter\n      socket.emit('new message', message);\n    }\n  }\n\n  // Log a message\n  function log (message, options) {\n    var $el = $('<li>').addClass('log').text(message);\n    addMessageElement($el, options);\n  }\n\n  // Adds the visual chat message to the message list\n  function addChatMessage (data, options) {\n    // Don't fade the message in if there is an 'X was typing'\n    var $typingMessages = getTypingMessages(data);\n    options = options || {};\n    if ($typingMessages.length !== 0) {\n      options.fade = false;\n      $typingMessages.remove();\n    }\n\n    var $usernameDiv = $('<span class=\"username\"/>')\n      .text(data.username)\n      .css('color', getUsernameColor(data.username));\n    var $messageBodyDiv = $('<span class=\"messageBody\">')\n      .text(data.message);\n\n    var typingClass = data.typing ? 'typing' : '';\n    var $messageDiv = $('<li class=\"message\"/>')\n      .data('username', data.username)\n      .addClass(typingClass)\n      .append($usernameDiv, $messageBodyDiv);\n\n    addMessageElement($messageDiv, options);\n  }\n\n  // Adds the visual chat typing message\n  function addChatTyping (data) {\n    data.typing = true;\n    data.message = 'is typing';\n    addChatMessage(data);\n  }\n\n  // Removes the visual chat typing message\n  function removeChatTyping (data) {\n    getTypingMessages(data).fadeOut(function () {\n      $(this).remove();\n    });\n  }\n\n  // Adds a message element to the messages and scrolls to the bottom\n  // el - The element to add as a message\n  // options.fade - If the element should fade-in (default = true)\n  // options.prepend - If the element should prepend\n  //   all other messages (default = false)\n  function addMessageElement (el, options) {\n    var $el = $(el);\n\n    // Setup default options\n    if (!options) {\n      options = {};\n    }\n    if (typeof options.fade === 'undefined') {\n      options.fade = true;\n    }\n    if (typeof options.prepend === 'undefined') {\n      options.prepend = false;\n    }\n\n    // Apply options\n    if (options.fade) {\n      $el.hide().fadeIn(FADE_TIME);\n    }\n    if (options.prepend) {\n      $messages.prepend($el);\n    } else {\n      $messages.append($el);\n    }\n    $messages[0].scrollTop = $messages[0].scrollHeight;\n  }\n\n  // Prevents input from having injected markup\n  function cleanInput (input) {\n    return $('<div/>').text(input).text();\n  }\n\n  // Updates the typing event\n  function updateTyping () {\n    if (connected) {\n      if (!typing) {\n        typing = true;\n        socket.emit('typing');\n      }\n      lastTypingTime = (new Date()).getTime();\n\n      setTimeout(function () {\n        var typingTimer = (new Date()).getTime();\n        var timeDiff = typingTimer - lastTypingTime;\n        if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\n          socket.emit('stop typing');\n          typing = false;\n        }\n      }, TYPING_TIMER_LENGTH);\n    }\n  }\n\n  // Gets the 'X is typing' messages of a user\n  function getTypingMessages (data) {\n    return $('.typing.message').filter(function (i) {\n      return $(this).data('username') === data.username;\n    });\n  }\n\n  // Gets the color of a username through our hash function\n  function getUsernameColor (username) {\n    // Compute hash code\n    var hash = 7;\n    for (var i = 0; i < username.length; i++) {\n       hash = username.charCodeAt(i) + (hash << 5) - hash;\n    }\n    // Calculate color\n    var index = Math.abs(hash % COLORS.length);\n    return COLORS[index];\n  }\n\n  // Keyboard events\n\n  $window.keydown(function (event) {\n    // Auto-focus the current input when a key is typed\n    if (!(event.ctrlKey || event.metaKey || event.altKey)) {\n      $currentInput.focus();\n    }\n    // When the client hits ENTER on their keyboard\n    if (event.which === 13) {\n      if (username) {\n        sendMessage();\n        socket.emit('stop typing');\n        typing = false;\n      } else {\n        setUsername();\n      }\n    }\n  });\n\n  $inputMessage.on('input', function() {\n    updateTyping();\n  });\n\n  // Click events\n\n  // Focus input when clicking anywhere on login page\n  $loginPage.click(function () {\n    $currentInput.focus();\n  });\n\n  // Focus input when clicking on the message input's border\n  $inputMessage.click(function () {\n    $inputMessage.focus();\n  });\n\n  // Socket events\n\n  // Whenever the server emits 'login', log the login message\n  socket.on('login', function (data) {\n    connected = true;\n    // Display the welcome message\n    var message = \"Welcome to Socket.IO Chat � \";\n    log(message, {\n      prepend: true\n    });\n    addParticipantsMessage(data);\n  });\n\n  // Whenever the server emits 'new message', update the chat body\n  socket.on('new message', function (data) {\n    addChatMessage(data);\n  });\n\n  // Whenever the server emits 'user joined', log it in the chat body\n  socket.on('user joined', function (data) {\n    log(data.username + ' joined');\n    addParticipantsMessage(data);\n  });\n\n  // Whenever the server emits 'user left', log it in the chat body\n  socket.on('user left', function (data) {\n    log(data.username + ' left');\n    addParticipantsMessage(data);\n    removeChatTyping(data);\n  });\n\n  // Whenever the server emits 'typing', show the typing message\n  socket.on('typing', function (data) {\n    addChatTyping(data);\n  });\n\n  // Whenever the server emits 'stop typing', kill the typing message\n  socket.on('stop typing', function (data) {\n    removeChatTyping(data);\n  });\n\n  socket.on('disconnect', function () {\n    log('you have been disconnected');\n  });\n\n  socket.on('reconnect', function () {\n    log('you have been reconnected');\n    if (username) {\n      socket.emit('add user', username);\n    }\n  });\n\n  socket.on('reconnect_error', function () {\n    log('attempt to reconnect has failed');\n  });\n\n});\n</script>\n</body>\n</html>\n","x":258,"y":317,"wires":[["fe37b2ed.cb74b"]]},{"id":"d70bf9fd.6dcf48","type":"socketio-in","z":"e67a4420.6ea588","name":"/sharpless/socket.io","server":"56816d8d.0b02c4","rules":[{"v":"sharpless"}],"x":170,"y":1100,"wires":[["9dec3880.05b148"]]},{"id":"728d6ae8.656734","type":"socketio-out","z":"e67a4420.6ea588","name":"/sharpless/socket.io","server":"56816d8d.0b02c4","x":410,"y":1060,"wires":[]}]
